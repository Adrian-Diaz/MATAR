<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a" kind="class" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</compoundname>
    <includes refid="_kokkos___view_mapping_8hpp" local="no">Kokkos_ViewMapping.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Traits</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4dd601ebabca2d8c195a7259fac52731" prot="public" static="no" strong="no">
        <type></type>
        <name>@148</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::@148</qualifiedname>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4dd601ebabca2d8c195a7259fac52731ab98a8e5d3a1a127be8691179589b8e33" prot="public">
          <name>is_managed</name>
          <initializer>= Traits::is_managed</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3084" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3084" bodyend="3084"/>
      </memberdef>
      <memberdef kind="enum" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4cdedf6cf85c01d536b3b9e7a35a029c" prot="public" static="no" strong="no">
        <type></type>
        <name>@149</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::@149</qualifiedname>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4cdedf6cf85c01d536b3b9e7a35a029ca82e6845eab98a6432ce49a0c1d3cb5be" prot="public">
          <name>Rank</name>
          <initializer>= Traits::dimension::rank</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3089" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3089" bodyend="3089"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1af9a3e7e24709a6a94829c78f0154323f" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::offset_type =  ViewOffset&lt;typename Traits::dimension, typename Traits::array_layout, void&gt;</definition>
        <argsstring></argsstring>
        <name>offset_type</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::offset_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3066" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3067" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1af0c28f42ba377d119e07aa31eb6eb88f" prot="public" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1_view_data_handle" kindref="compound">ViewDataHandle</ref>&lt; Traits &gt;::handle_type</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::handle_type =  typename ViewDataHandle&lt;Traits&gt;::handle_type</definition>
        <argsstring></argsstring>
        <name>handle_type</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::handle_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3069" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3069" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ac984417bc73c31686ab025b788e20e82" prot="public" static="no">
        <type>void</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::printable_label_typedef =  void</definition>
        <argsstring></argsstring>
        <name>printable_label_typedef</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::printable_label_typedef</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3083" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3083" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a85e96a2fa46369b63ba783b0bfe7cf6f" prot="public" static="no">
        <type>typename offset_type::is_regular</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::is_regular =  typename offset_type::is_regular</definition>
        <argsstring></argsstring>
        <name>is_regular</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::is_regular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3133" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1aa78747941b9ad0aef0ca69eb3c13811c" prot="public" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1_view_data_handle" kindref="compound">ViewDataHandle</ref>&lt; Traits &gt;::return_type</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference_type =  typename ViewDataHandle&lt;Traits&gt;::return_type</definition>
        <argsstring></argsstring>
        <name>reference_type</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3178" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ac1242f0f07886473be788622cc15d678" prot="public" static="no">
        <type>typename Traits::value_type *</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::pointer_type =  typename Traits::value_type*</definition>
        <argsstring></argsstring>
        <name>pointer_type</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::pointer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3179" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a0030a251c09651cb365f6fb3a687d1c5" prot="private" static="no" strong="no">
        <type></type>
        <name>@150</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::@150</qualifiedname>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a0030a251c09651cb365f6fb3a687d1c5a0918db63e604d0af31b6127d89b67af6" prot="private">
          <name>MemorySpanMask</name>
          <initializer>= 8 - 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3274" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3274" bodyend="3274"/>
      </memberdef>
      <memberdef kind="enum" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a64c351842b760694d84c51d8a51b4d62" prot="private" static="no" strong="no">
        <type></type>
        <name>@151</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::@151</qualifiedname>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a64c351842b760694d84c51d8a51b4d62a135dc93b4aa522cf9c61403f8c142237" prot="private">
          <name>MemorySpanSize</name>
          <initializer>= sizeof(typename Traits::value_type)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3275" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3275" bodyend="3275"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ad9d857d4a3c8965b543a42cf66927149" prot="public" static="no" mutable="no">
        <type>handle_type</type>
        <definition>handle_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::m_impl_handle</definition>
        <argsstring></argsstring>
        <name>m_impl_handle</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::m_impl_handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3071" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3071" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a60208909bf7db9c787815975cbdf084c" prot="public" static="no" mutable="no">
        <type><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">offset_type</ref></type>
        <definition>offset_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::m_impl_offset</definition>
        <argsstring></argsstring>
        <name>m_impl_offset</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::m_impl_offset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3072" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3072" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1aeabbd162a7499cfaa77ba11da09ab1ee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class...</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class ViewMapping</definition>
        <argsstring></argsstring>
        <name>ViewMapping</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3076" column="16" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3076" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a7500bce6e5384becff49daff667d3f0f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</definition>
        <argsstring>(const handle_type &amp;arg_handle, const offset_type &amp;arg_offset)</argsstring>
        <name>ViewMapping</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</qualifiedname>
        <param>
          <type>const handle_type &amp;</type>
          <declname>arg_handle</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">offset_type</ref> &amp;</type>
          <declname>arg_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3079" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3079" bodyend="3080"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1aac65e39a776ecdf1bf3dffac45c6bb48" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename iType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::extent</definition>
        <argsstring>(const iType &amp;r) const</argsstring>
        <name>extent</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::extent</qualifiedname>
        <param>
          <type>const iType &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3092" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3092" bodyend="3094"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a1e42abb535cc30da8220028459ee2232" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr Traits::array_layout</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Traits::array_layout Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::layout</definition>
        <argsstring>() const</argsstring>
        <name>layout</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3102" column="66" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3102" bodyend="3105"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a80b33bfe26978303943204efb337b015" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_0</definition>
        <argsstring>() const</argsstring>
        <name>dimension_0</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3107" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3107" bodyend="3109"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a22d4559a209bc60653efcea245c02c5b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_1</definition>
        <argsstring>() const</argsstring>
        <name>dimension_1</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3110" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3110" bodyend="3112"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a5fc33219b374a9c00c0067c74b978521" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_2</definition>
        <argsstring>() const</argsstring>
        <name>dimension_2</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3113" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3113" bodyend="3115"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a3129bce2fa81c180e850ca1d2445d918" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_3</definition>
        <argsstring>() const</argsstring>
        <name>dimension_3</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3116" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3116" bodyend="3118"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a1ced46c59fb5de9415ff3c07a3fa848d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_4</definition>
        <argsstring>() const</argsstring>
        <name>dimension_4</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3119" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3119" bodyend="3121"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ad9f03d00c26d352c3f7a10df1aea73b2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_5</definition>
        <argsstring>() const</argsstring>
        <name>dimension_5</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3122" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3122" bodyend="3124"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a7cc20f5d545053f3e50b3947a82d38d6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_6</definition>
        <argsstring>() const</argsstring>
        <name>dimension_6</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3125" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3125" bodyend="3127"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a7c27e2c90d7c7d4afa960e3a315528cf" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_7</definition>
        <argsstring>() const</argsstring>
        <name>dimension_7</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::dimension_7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3128" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3128" bodyend="3130"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a18f485d998f6a4c1ad8c3ec276be6b06" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_0</definition>
        <argsstring>() const</argsstring>
        <name>stride_0</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3135" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3135" bodyend="3137"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1acc9f3c41d3e193aad4ff27b24e4fe984" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_1</definition>
        <argsstring>() const</argsstring>
        <name>stride_1</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3138" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3138" bodyend="3140"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1abdaee850c83edead2708867df7c652bc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_2</definition>
        <argsstring>() const</argsstring>
        <name>stride_2</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3141" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3141" bodyend="3143"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a1f51e9bb3f36b039fc9d300641b276df" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_3</definition>
        <argsstring>() const</argsstring>
        <name>stride_3</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3144" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3144" bodyend="3146"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a62aa3b051b1291b7864ba7e99145a468" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_4</definition>
        <argsstring>() const</argsstring>
        <name>stride_4</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3147" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3147" bodyend="3149"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a6875e92e2882f183598c5aff3b8b4a1f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_5</definition>
        <argsstring>() const</argsstring>
        <name>stride_5</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3150" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3150" bodyend="3152"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a3847efe041bcdb17b3377ba077b75f7d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_6</definition>
        <argsstring>() const</argsstring>
        <name>stride_6</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3153" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3153" bodyend="3155"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4e35de33f8c4243a3b0aa6d8dc7b1286" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_7</definition>
        <argsstring>() const</argsstring>
        <name>stride_7</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride_7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3156" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3156" bodyend="3158"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a09786de84cb645c2bb5a1e37061fc55e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename iType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride</definition>
        <argsstring>(iType *const s) const</argsstring>
        <name>stride</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::stride</qualifiedname>
        <param>
          <type>iType *const</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3161" column="31" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3161" bodyend="3163"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a41612c9b1eaf02630e4d06ab38baab8e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::span</definition>
        <argsstring>() const</argsstring>
        <name>span</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::span</qualifiedname>
        <briefdescription>
<para>Span of the mapped range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3169" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3169" bodyend="3171"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a78f798f8a745fd5ca93efd29cd1e90eb" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr bool</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr bool Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::span_is_contiguous</definition>
        <argsstring>() const</argsstring>
        <name>span_is_contiguous</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::span_is_contiguous</qualifiedname>
        <briefdescription>
<para>Is the mapped range span contiguous. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3174" column="41" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3174" bodyend="3176"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ac9fde602c040878216147d508cfc5792" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr pointer_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr pointer_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::data</qualifiedname>
        <briefdescription>
<para>Query raw pointer to memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3182" column="49" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3182" bodyend="3184"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a58e4f06a89e31582596282d939558ce6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION reference_type</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION reference_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</definition>
        <argsstring>() const</argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3191" column="18" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3191" bodyend="3191"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4fb62fe0198a38cd5dbdc1b6570ca7da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FORCEINLINE_FUNCTION std::enable_if&lt;(std::is_integral&lt; I0 &gt;::value &amp;&amp;!(std::is_same&lt; typenameTraits::array_layout, <ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref> &gt;::value||!is_regular::value)), reference_type &gt;::type</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION std::enable_if&lt;(std::is_integral&lt; I0 &gt;::value &amp;&amp;!(std::is_same&lt; typenameTraits::array_layout, Kokkos::LayoutStride &gt;::value||!is_regular::value)), reference_type &gt;::type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</definition>
        <argsstring>(const I0 &amp;i0) const</argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</qualifiedname>
        <param>
          <type>const I0 &amp;</type>
          <declname>i0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3202" column="7" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3202" bodyend="3204"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a71db4d0b095d43e7981afa836483faa3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FORCEINLINE_FUNCTION std::enable_if&lt;(std::is_integral&lt; I0 &gt;::value &amp;&amp;(std::is_same&lt; typenameTraits::array_layout, <ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref> &gt;::value||!is_regular::value)), reference_type &gt;::type</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION std::enable_if&lt;(std::is_integral&lt; I0 &gt;::value &amp;&amp;(std::is_same&lt; typenameTraits::array_layout, Kokkos::LayoutStride &gt;::value||!is_regular::value)), reference_type &gt;::type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</definition>
        <argsstring>(const I0 &amp;i0) const</argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</qualifiedname>
        <param>
          <type>const I0 &amp;</type>
          <declname>i0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3215" column="7" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3215" bodyend="3217"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a66c99aedae0700e677db7355c5b87ad3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FORCEINLINE_FUNCTION reference_type</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION reference_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</definition>
        <argsstring>(const I0 &amp;i0, const I1 &amp;i1) const</argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</qualifiedname>
        <param>
          <type>const I0 &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>i1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3220" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3220" bodyend="3223"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ac541431014b8b6f4fe0a66cdfc792336" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FORCEINLINE_FUNCTION reference_type</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION reference_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</definition>
        <argsstring>(const I0 &amp;i0, const I1 &amp;i1, const I2 &amp;i2) const</argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</qualifiedname>
        <param>
          <type>const I0 &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3226" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3226" bodyend="3230"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a72af3f912ac3875a4d989dbe967938cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FORCEINLINE_FUNCTION reference_type</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION reference_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</definition>
        <argsstring>(const I0 &amp;i0, const I1 &amp;i1, const I2 &amp;i2, const I3 &amp;i3) const</argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</qualifiedname>
        <param>
          <type>const I0 &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>const I3 &amp;</type>
          <declname>i3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3234" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3234" bodyend="3236"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a3bf55a96a7253345ec4eb02cb981ffcf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FORCEINLINE_FUNCTION reference_type</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION reference_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</definition>
        <argsstring>(const I0 &amp;i0, const I1 &amp;i1, const I2 &amp;i2, const I3 &amp;i3, const I4 &amp;i4) const</argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</qualifiedname>
        <param>
          <type>const I0 &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>const I3 &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>const I4 &amp;</type>
          <declname>i4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3239" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3239" bodyend="3245"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a957e19c6d59a183a67ff4472f448de7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FORCEINLINE_FUNCTION reference_type</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION reference_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</definition>
        <argsstring>(const I0 &amp;i0, const I1 &amp;i1, const I2 &amp;i2, const I3 &amp;i3, const I4 &amp;i4, const I5 &amp;i5) const</argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</qualifiedname>
        <param>
          <type>const I0 &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>const I3 &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>const I4 &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>const I5 &amp;</type>
          <declname>i5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3250" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3250" bodyend="3253"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a77361e5f33d72a6f91aa2ed7522d07cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
          <param>
            <type>typename I6</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FORCEINLINE_FUNCTION reference_type</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION reference_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</definition>
        <argsstring>(const I0 &amp;i0, const I1 &amp;i1, const I2 &amp;i2, const I3 &amp;i3, const I4 &amp;i4, const I5 &amp;i5, const I6 &amp;i6) const</argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</qualifiedname>
        <param>
          <type>const I0 &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>const I3 &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>const I4 &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>const I5 &amp;</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>const I6 &amp;</type>
          <declname>i6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3258" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3258" bodyend="3261"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1afcf1fba0e9a50a4c7ccbded41a0f29bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
          <param>
            <type>typename I6</type>
          </param>
          <param>
            <type>typename I7</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FORCEINLINE_FUNCTION reference_type</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION reference_type Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</definition>
        <argsstring>(const I0 &amp;i0, const I1 &amp;i1, const I2 &amp;i2, const I3 &amp;i3, const I4 &amp;i4, const I5 &amp;i5, const I6 &amp;i6, const I7 &amp;i7) const</argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::reference</qualifiedname>
        <param>
          <type>const I0 &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>const I3 &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>const I4 &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>const I5 &amp;</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>const I6 &amp;</type>
          <declname>i6</declname>
        </param>
        <param>
          <type>const I7 &amp;</type>
          <declname>i7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3266" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3266" bodyend="3269"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a80f3b078c2cd367290625628adaa77e2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::memory_span</definition>
        <argsstring>() const</argsstring>
        <name>memory_span</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::memory_span</qualifiedname>
        <briefdescription>
<para>Span, in bytes, of the referenced memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3279" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3279" bodyend="3283"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4c34b87864187628c170edcf0aa5f8ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::~ViewMapping</definition>
        <argsstring>()=default</argsstring>
        <name>~ViewMapping</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::~ViewMapping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3287" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ab42bfa3315e8d1e7fdcb262a105b5e0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</definition>
        <argsstring>()</argsstring>
        <name>ViewMapping</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3288" column="26" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3288" bodyend="3288"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a0d6602069e758eed527d4013418f8dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</definition>
        <argsstring>(const ViewMapping &amp;)=default</argsstring>
        <name>ViewMapping</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3290" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1abb1dd4c2e8e4ef03d8ad0bc282de6381" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION <ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref> &amp;</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION ViewMapping &amp; Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::operator=</definition>
        <argsstring>(const ViewMapping &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3291" column="41"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a501e95d689c2b8aca5eb3c6163d3a1d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</definition>
        <argsstring>(ViewMapping &amp;&amp;)=default</argsstring>
        <name>ViewMapping</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3294" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a01a53ec8310f906ae64cbf6d26df311e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION <ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref> &amp;</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION ViewMapping &amp; Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::operator=</definition>
        <argsstring>(ViewMapping &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3295" column="41"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a0b4a85afc6a401cfbac3836b6eb2487b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</definition>
        <argsstring>(Kokkos::Impl::ViewCtorProp&lt; P... &gt; const &amp;arg_prop, typename Traits::array_layout const &amp;arg_layout)</argsstring>
        <name>ViewMapping</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::ViewMapping</qualifiedname>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">Kokkos::Impl::ViewCtorProp</ref>&lt; P... &gt; const &amp;</type>
          <declname>arg_prop</declname>
        </param>
        <param>
          <type>typename Traits::array_layout const &amp;</type>
          <declname>arg_layout</declname>
        </param>
        <briefdescription>
<para>Wrap a span of memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3311" column="26" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3311" bodyend="3317"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a1832cf665cc8af8066ca44a779007387" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::assign_data</definition>
        <argsstring>(pointer_type arg_ptr)</argsstring>
        <name>assign_data</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::assign_data</qualifiedname>
        <param>
          <type>pointer_type</type>
          <declname>arg_ptr</declname>
        </param>
        <briefdescription>
<para>Assign data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3321" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3321" bodyend="3323"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1af165bf58a12513fe72cc2bb3b7ac9017" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record" kindref="compound">Kokkos::Impl::SharedAllocationRecord</ref> *</type>
        <definition>Kokkos::Impl::SharedAllocationRecord * Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::allocate_shared</definition>
        <argsstring>(Kokkos::Impl::ViewCtorProp&lt; P... &gt; const &amp;arg_prop, typename Traits::array_layout const &amp;arg_layout)</argsstring>
        <name>allocate_shared</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::allocate_shared</qualifiedname>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">Kokkos::Impl::ViewCtorProp</ref>&lt; P... &gt; const &amp;</type>
          <declname>arg_prop</declname>
        </param>
        <param>
          <type>typename Traits::array_layout const &amp;</type>
          <declname>arg_layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3331" column="4" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3331" bodyend="3387"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ab7f3022519b816ad20f28d3caceae0b0" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>static KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::static_extent</definition>
        <argsstring>(const unsigned r) noexcept</argsstring>
        <name>static_extent</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::static_extent</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3096" column="50" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3096" bodyend="3100"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ae62439dc556f940a1bc65fb4b4c23716" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_t</type>
        <definition>static KOKKOS_INLINE_FUNCTION constexpr size_t Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::memory_span</definition>
        <argsstring>(typename Traits::array_layout const &amp;arg_layout)</argsstring>
        <name>memory_span</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;::memory_span</qualifiedname>
        <param>
          <type>typename Traits::array_layout const &amp;</type>
          <declname>arg_layout</declname>
        </param>
        <briefdescription>
<para>Span, in bytes, of the required memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3301" column="27" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3301" bodyend="3307"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_kokkos_1_1_view" kindref="compound">View</ref> mapping for non-specialized data type and standard layout. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_impl_offset</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::Impl::ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_view_offset"/>
      </node>
    </collaborationgraph>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3059" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3064" bodyend="3388"/>
    <listofallmembers>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1af165bf58a12513fe72cc2bb3b7ac9017" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>allocate_shared</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a1832cf665cc8af8066ca44a779007387" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>assign_data</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ac9fde602c040878216147d508cfc5792" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>data</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a80b33bfe26978303943204efb337b015" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>dimension_0</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a22d4559a209bc60653efcea245c02c5b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>dimension_1</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a5fc33219b374a9c00c0067c74b978521" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>dimension_2</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a3129bce2fa81c180e850ca1d2445d918" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>dimension_3</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a1ced46c59fb5de9415ff3c07a3fa848d" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>dimension_4</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ad9f03d00c26d352c3f7a10df1aea73b2" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>dimension_5</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a7cc20f5d545053f3e50b3947a82d38d6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>dimension_6</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a7c27e2c90d7c7d4afa960e3a315528cf" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>dimension_7</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1aac65e39a776ecdf1bf3dffac45c6bb48" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>extent</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1af0c28f42ba377d119e07aa31eb6eb88f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>handle_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4dd601ebabca2d8c195a7259fac52731ab98a8e5d3a1a127be8691179589b8e33" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>is_managed</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a85e96a2fa46369b63ba783b0bfe7cf6f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>is_regular</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a1e42abb535cc30da8220028459ee2232" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>layout</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ad9d857d4a3c8965b543a42cf66927149" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>m_impl_handle</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a60208909bf7db9c787815975cbdf084c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>m_impl_offset</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a80f3b078c2cd367290625628adaa77e2" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>memory_span</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ae62439dc556f940a1bc65fb4b4c23716" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>memory_span</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a0030a251c09651cb365f6fb3a687d1c5a0918db63e604d0af31b6127d89b67af6" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>MemorySpanMask</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a64c351842b760694d84c51d8a51b4d62a135dc93b4aa522cf9c61403f8c142237" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>MemorySpanSize</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1af9a3e7e24709a6a94829c78f0154323f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>offset_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1abb1dd4c2e8e4ef03d8ad0bc282de6381" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>operator=</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a01a53ec8310f906ae64cbf6d26df311e" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>operator=</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ac1242f0f07886473be788622cc15d678" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>pointer_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ac984417bc73c31686ab025b788e20e82" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>printable_label_typedef</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4cdedf6cf85c01d536b3b9e7a35a029ca82e6845eab98a6432ce49a0c1d3cb5be" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>Rank</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a58e4f06a89e31582596282d939558ce6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4fb62fe0198a38cd5dbdc1b6570ca7da" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a71db4d0b095d43e7981afa836483faa3" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a66c99aedae0700e677db7355c5b87ad3" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ac541431014b8b6f4fe0a66cdfc792336" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a72af3f912ac3875a4d989dbe967938cc" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a3bf55a96a7253345ec4eb02cb981ffcf" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a957e19c6d59a183a67ff4472f448de7a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a77361e5f33d72a6f91aa2ed7522d07cc" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1afcf1fba0e9a50a4c7ccbded41a0f29bd" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1aa78747941b9ad0aef0ca69eb3c13811c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>reference_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a41612c9b1eaf02630e4d06ab38baab8e" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>span</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a78f798f8a745fd5ca93efd29cd1e90eb" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>span_is_contiguous</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ab7f3022519b816ad20f28d3caceae0b0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>static_extent</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a09786de84cb645c2bb5a1e37061fc55e" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>stride</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a18f485d998f6a4c1ad8c3ec276be6b06" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>stride_0</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1acc9f3c41d3e193aad4ff27b24e4fe984" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>stride_1</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1abdaee850c83edead2708867df7c652bc" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>stride_2</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a1f51e9bb3f36b039fc9d300641b276df" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>stride_3</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a62aa3b051b1291b7864ba7e99145a468" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>stride_4</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a6875e92e2882f183598c5aff3b8b4a1f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>stride_5</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a3847efe041bcdb17b3377ba077b75f7d" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>stride_6</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4e35de33f8c4243a3b0aa6d8dc7b1286" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>stride_7</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1aeabbd162a7499cfaa77ba11da09ab1ee" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>ViewMapping</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a7500bce6e5384becff49daff667d3f0f" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>ViewMapping</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ab42bfa3315e8d1e7fdcb262a105b5e0f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>ViewMapping</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a0d6602069e758eed527d4013418f8dad" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>ViewMapping</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a501e95d689c2b8aca5eb3c6163d3a1d1" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>ViewMapping</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a0b4a85afc6a401cfbac3836b6eb2487b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>ViewMapping</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a4c34b87864187628c170edcf0aa5f8ef" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</scope><name>~ViewMapping</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
