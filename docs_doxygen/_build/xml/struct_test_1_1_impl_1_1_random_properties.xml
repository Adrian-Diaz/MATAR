<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_test_1_1_impl_1_1_random_properties" kind="struct" language="C++" prot="public">
    <compoundname>Test::Impl::RandomProperties</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_random_properties_1a919369a07ad4fdeaf9a025bed76a1943" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t Test::Impl::RandomProperties::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <qualifiedname>Test::Impl::RandomProperties::count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="73" column="12" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_random_properties_1a4d223ca9be3f2d3a4c5c28ee020d8703" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Test::Impl::RandomProperties::mean</definition>
        <argsstring></argsstring>
        <name>mean</name>
        <qualifiedname>Test::Impl::RandomProperties::mean</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="74" column="10" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_random_properties_1ace0031eefe8cac54020c9c9975bcf570" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Test::Impl::RandomProperties::variance</definition>
        <argsstring></argsstring>
        <name>variance</name>
        <qualifiedname>Test::Impl::RandomProperties::variance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="75" column="10" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_random_properties_1aadd1d9acfc28f25a5b410b60f8a12abb" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Test::Impl::RandomProperties::covariance</definition>
        <argsstring></argsstring>
        <name>covariance</name>
        <qualifiedname>Test::Impl::RandomProperties::covariance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="76" column="10" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_random_properties_1aa1aa43f633c521bd5bfe6ab3d313ed45" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Test::Impl::RandomProperties::min</definition>
        <argsstring></argsstring>
        <name>min</name>
        <qualifiedname>Test::Impl::RandomProperties::min</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="77" column="10" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_random_properties_1a2a0ef9375ac1674545f871adad94dff1" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Test::Impl::RandomProperties::max</definition>
        <argsstring></argsstring>
        <name>max</name>
        <qualifiedname>Test::Impl::RandomProperties::max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="78" column="10" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_1_1_impl_1_1_random_properties_1ac4008db165c9d9b8ea54e2db1419afab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION Test::Impl::RandomProperties::RandomProperties</definition>
        <argsstring>()</argsstring>
        <name>RandomProperties</name>
        <qualifiedname>Test::Impl::RandomProperties::RandomProperties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="81" column="3" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_impl_1_1_random_properties_1a34ec940065b46620bfcaccda99e0dc1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="struct_test_1_1_impl_1_1_random_properties" kindref="compound">RandomProperties</ref> &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION RandomProperties &amp; Test::Impl::RandomProperties::operator+=</definition>
        <argsstring>(const RandomProperties &amp;add)</argsstring>
        <name>operator+=</name>
        <qualifiedname>Test::Impl::RandomProperties::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_1_1_impl_1_1_random_properties" kindref="compound">RandomProperties</ref> &amp;</type>
          <declname>add</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="91" column="20" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="91" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_impl_1_1_random_properties_1a66407f47da92fb3f113ebc689d9431c6" prot="public" static="no" const="no" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Test::Impl::RandomProperties::operator+=</definition>
        <argsstring>(const volatile RandomProperties &amp;add) volatile</argsstring>
        <name>operator+=</name>
        <qualifiedname>Test::Impl::RandomProperties::operator+=</qualifiedname>
        <param>
          <type>const volatile <ref refid="struct_test_1_1_impl_1_1_random_properties" kindref="compound">RandomProperties</ref> &amp;</type>
          <declname>add</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="102" column="8" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="102" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="72" column="1" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="72" bodyend="110"/>
    <listofallmembers>
      <member refid="struct_test_1_1_impl_1_1_random_properties_1a919369a07ad4fdeaf9a025bed76a1943" prot="public" virt="non-virtual"><scope>Test::Impl::RandomProperties</scope><name>count</name></member>
      <member refid="struct_test_1_1_impl_1_1_random_properties_1aadd1d9acfc28f25a5b410b60f8a12abb" prot="public" virt="non-virtual"><scope>Test::Impl::RandomProperties</scope><name>covariance</name></member>
      <member refid="struct_test_1_1_impl_1_1_random_properties_1a2a0ef9375ac1674545f871adad94dff1" prot="public" virt="non-virtual"><scope>Test::Impl::RandomProperties</scope><name>max</name></member>
      <member refid="struct_test_1_1_impl_1_1_random_properties_1a4d223ca9be3f2d3a4c5c28ee020d8703" prot="public" virt="non-virtual"><scope>Test::Impl::RandomProperties</scope><name>mean</name></member>
      <member refid="struct_test_1_1_impl_1_1_random_properties_1aa1aa43f633c521bd5bfe6ab3d313ed45" prot="public" virt="non-virtual"><scope>Test::Impl::RandomProperties</scope><name>min</name></member>
      <member refid="struct_test_1_1_impl_1_1_random_properties_1a34ec940065b46620bfcaccda99e0dc1e" prot="public" virt="non-virtual"><scope>Test::Impl::RandomProperties</scope><name>operator+=</name></member>
      <member refid="struct_test_1_1_impl_1_1_random_properties_1a66407f47da92fb3f113ebc689d9431c6" prot="public" virt="non-virtual"><scope>Test::Impl::RandomProperties</scope><name>operator+=</name></member>
      <member refid="struct_test_1_1_impl_1_1_random_properties_1ac4008db165c9d9b8ea54e2db1419afab" prot="public" virt="non-virtual"><scope>Test::Impl::RandomProperties</scope><name>RandomProperties</name></member>
      <member refid="struct_test_1_1_impl_1_1_random_properties_1ace0031eefe8cac54020c9c9975bcf570" prot="public" virt="non-virtual"><scope>Test::Impl::RandomProperties</scope><name>variance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
