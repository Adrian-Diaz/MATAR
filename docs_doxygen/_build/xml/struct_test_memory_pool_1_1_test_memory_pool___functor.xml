<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_test_memory_pool_1_1_test_memory_pool___functor" kind="struct" language="C++" prot="public">
    <compoundname>TestMemoryPool::TestMemoryPool_Functor</compoundname>
    <innerclass refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1_1_tag_alloc" prot="public">TestMemoryPool::TestMemoryPool_Functor::TagAlloc</innerclass>
    <innerclass refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1_1_tag_dealloc" prot="public">TestMemoryPool::TestMemoryPool_Functor::TagDealloc</innerclass>
    <innerclass refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1_1_tag_mix_it_up" prot="public">TestMemoryPool::TestMemoryPool_Functor::TagMixItUp</innerclass>
    <innerclass refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1_1_tag_realloc" prot="public">TestMemoryPool::TestMemoryPool_Functor::TagRealloc</innerclass>
    <templateparamlist>
      <param>
        <type>class DeviceType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_test_memory_pool_1_1_test_memory_pool___functor_1a23324d5e2f8bbc87c32d7d838773e557" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; uintptr_t *, DeviceType &gt;</type>
        <definition>using TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;::ptrs_type =  Kokkos::View&lt;uintptr_t*, DeviceType&gt;</definition>
        <argsstring></argsstring>
        <name>ptrs_type</name>
        <qualifiedname>TestMemoryPool::TestMemoryPool_Functor::ptrs_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="181" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_memory_pool_1_1_test_memory_pool___functor_1a286d4f07ebb8a532515675fe1c45048f" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_memory_pool" kindref="compound">Kokkos::MemoryPool</ref>&lt; DeviceType &gt;</type>
        <definition>using TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;::pool_type =  Kokkos::MemoryPool&lt;DeviceType&gt;</definition>
        <argsstring></argsstring>
        <name>pool_type</name>
        <qualifiedname>TestMemoryPool::TestMemoryPool_Functor::pool_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="182" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_memory_pool_1_1_test_memory_pool___functor_1ad1cb0eab2e8d768ca03e3f9bf9cbebd6" prot="public" static="no">
        <type>long</type>
        <definition>using TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;::value_type =  long</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>TestMemoryPool::TestMemoryPool_Functor::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="193" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test_memory_pool_1_1_test_memory_pool___functor_1a84044c8ade15613cb7d5573a14d462c1" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_memory_pool" kindref="compound">pool_type</ref></type>
        <definition>pool_type TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;::pool</definition>
        <argsstring></argsstring>
        <name>pool</name>
        <qualifiedname>TestMemoryPool::TestMemoryPool_Functor::pool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="184" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_memory_pool_1_1_test_memory_pool___functor_1ab689c293a993994381d9f58c05f95f6d" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">ptrs_type</ref></type>
        <definition>ptrs_type TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;::ptrs</definition>
        <argsstring></argsstring>
        <name>ptrs</name>
        <qualifiedname>TestMemoryPool::TestMemoryPool_Functor::ptrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="185" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_memory_pool_1_1_test_memory_pool___functor_1a993f3dd718a21aa417eb063b1e698b2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;::TestMemoryPool_Functor</definition>
        <argsstring>(const pool_type &amp;arg_pool, size_t n)</argsstring>
        <name>TestMemoryPool_Functor</name>
        <qualifiedname>TestMemoryPool::TestMemoryPool_Functor::TestMemoryPool_Functor</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_memory_pool" kindref="compound">pool_type</ref> &amp;</type>
          <declname>arg_pool</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="187" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="187" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_memory_pool_1_1_test_memory_pool___functor_1ab27d6df7355a6df8379614d7a12d15df" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;::operator()</definition>
        <argsstring>(TagAlloc, int i, long &amp;update) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>TestMemoryPool::TestMemoryPool_Functor::operator()</qualifiedname>
        <param>
          <type><ref refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1_1_tag_alloc" kindref="compound">TagAlloc</ref></type>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>update</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="198" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="198" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_memory_pool_1_1_test_memory_pool___functor_1a3fdc1e23c248474eba89eaadd120ae37" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;::operator()</definition>
        <argsstring>(TagDealloc, int i, long &amp;update) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>TestMemoryPool::TestMemoryPool_Functor::operator()</qualifiedname>
        <param>
          <type><ref refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1_1_tag_dealloc" kindref="compound">TagDealloc</ref></type>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>update</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="209" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="209" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_memory_pool_1_1_test_memory_pool___functor_1a2d38ed2ca0686f1a3338fddec6e573ed" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;::operator()</definition>
        <argsstring>(TagRealloc, int i, long &amp;update) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>TestMemoryPool::TestMemoryPool_Functor::operator()</qualifiedname>
        <param>
          <type><ref refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1_1_tag_realloc" kindref="compound">TagRealloc</ref></type>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>update</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="221" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="221" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_memory_pool_1_1_test_memory_pool___functor_1a14961b54c577d05e5ad33a45f260c5e9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;::operator()</definition>
        <argsstring>(TagMixItUp, int i, long &amp;update) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>TestMemoryPool::TestMemoryPool_Functor::operator()</qualifiedname>
        <param>
          <type><ref refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1_1_tag_mix_it_up" kindref="compound">TagMixItUp</ref></type>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>update</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="234" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="234" bodyend="246"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>TestMemoryPool::TestMemoryPool_Functor&lt; DeviceType &gt;</label>
        <link refid="struct_test_memory_pool_1_1_test_memory_pool___functor"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ptrs</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::View&lt; uintptr_t *, DeviceType &gt;</label>
        <link refid="class_kokkos_1_1_view"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Kokkos::ViewTraits&lt; uintptr_t *, Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_view_traits"/>
      </node>
    </collaborationgraph>
    <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="180" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="180" bodyend="247"/>
    <listofallmembers>
      <member refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1ab27d6df7355a6df8379614d7a12d15df" prot="public" virt="non-virtual"><scope>TestMemoryPool::TestMemoryPool_Functor</scope><name>operator()</name></member>
      <member refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1a3fdc1e23c248474eba89eaadd120ae37" prot="public" virt="non-virtual"><scope>TestMemoryPool::TestMemoryPool_Functor</scope><name>operator()</name></member>
      <member refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1a2d38ed2ca0686f1a3338fddec6e573ed" prot="public" virt="non-virtual"><scope>TestMemoryPool::TestMemoryPool_Functor</scope><name>operator()</name></member>
      <member refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1a14961b54c577d05e5ad33a45f260c5e9" prot="public" virt="non-virtual"><scope>TestMemoryPool::TestMemoryPool_Functor</scope><name>operator()</name></member>
      <member refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1a84044c8ade15613cb7d5573a14d462c1" prot="public" virt="non-virtual"><scope>TestMemoryPool::TestMemoryPool_Functor</scope><name>pool</name></member>
      <member refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1a286d4f07ebb8a532515675fe1c45048f" prot="public" virt="non-virtual"><scope>TestMemoryPool::TestMemoryPool_Functor</scope><name>pool_type</name></member>
      <member refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1ab689c293a993994381d9f58c05f95f6d" prot="public" virt="non-virtual"><scope>TestMemoryPool::TestMemoryPool_Functor</scope><name>ptrs</name></member>
      <member refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1a23324d5e2f8bbc87c32d7d838773e557" prot="public" virt="non-virtual"><scope>TestMemoryPool::TestMemoryPool_Functor</scope><name>ptrs_type</name></member>
      <member refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1a993f3dd718a21aa417eb063b1e698b2b" prot="public" virt="non-virtual"><scope>TestMemoryPool::TestMemoryPool_Functor</scope><name>TestMemoryPool_Functor</name></member>
      <member refid="struct_test_memory_pool_1_1_test_memory_pool___functor_1ad1cb0eab2e8d768ca03e3f9bf9cbebd6" prot="public" virt="non-virtual"><scope>TestMemoryPool::TestMemoryPool_Functor</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
