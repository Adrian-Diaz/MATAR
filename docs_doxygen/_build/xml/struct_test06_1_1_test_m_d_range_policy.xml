<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_test06_1_1_test_m_d_range_policy" kind="struct" language="C++" prot="public">
    <compoundname>Test06::TestMDRangePolicy</compoundname>
    <templateparamlist>
      <param>
        <type>class ExecSpace</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_test06_1_1_test_m_d_range_policy_1af23fcf0bcca19337366cb4bbcbe39695" prot="public" static="no">
        <type>typename ExecSpace::memory_space</type>
        <definition>using Test06::TestMDRangePolicy&lt; ExecSpace &gt;::d_memspace_type =  typename ExecSpace::memory_space</definition>
        <argsstring></argsstring>
        <name>d_memspace_type</name>
        <qualifiedname>Test06::TestMDRangePolicy::d_memspace_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="90" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test06_1_1_test_m_d_range_policy_1af31857982ff640f4531dcaa7ba16f00d" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_host_space" kindref="compound">Kokkos::HostSpace</ref></type>
        <definition>using Test06::TestMDRangePolicy&lt; ExecSpace &gt;::h_memspace_type =  Kokkos::HostSpace</definition>
        <argsstring></argsstring>
        <name>h_memspace_type</name>
        <qualifiedname>Test06::TestMDRangePolicy::h_memspace_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="91" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test06_1_1_test_m_d_range_policy_1a6bbf0a345ee7c902db88331b14a7f0b0" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_index_type" kindref="compound">Kokkos::IndexType</ref>&lt; int &gt;</type>
        <definition>using Test06::TestMDRangePolicy&lt; ExecSpace &gt;::int_index =  Kokkos::IndexType&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>int_index</name>
        <qualifiedname>Test06::TestMDRangePolicy::int_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="94" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test06_1_1_test_m_d_range_policy_1a936c3ec3e4e3e7d6da055b08a9d49670" prot="public" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Kokkos::MDRangePolicy</ref>&lt; ExecSpace, <ref refid="struct_kokkos_1_1_rank" kindref="compound">Kokkos::Rank</ref>&lt; 2 &gt;, <ref refid="struct_kokkos_1_1_index_type" kindref="compound">int_index</ref> &gt;</type>
        <definition>using Test06::TestMDRangePolicy&lt; ExecSpace &gt;::MDPolicyType_2D =  typename Kokkos::MDRangePolicy&lt;ExecSpace, Kokkos::Rank&lt;2&gt;, int_index&gt;</definition>
        <argsstring></argsstring>
        <name>MDPolicyType_2D</name>
        <qualifiedname>Test06::TestMDRangePolicy::MDPolicyType_2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="97" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test06_1_1_test_m_d_range_policy_1a425cce85915bb561150ace9562a19bf4" prot="public" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Kokkos::MDRangePolicy</ref>&lt; ExecSpace, <ref refid="struct_kokkos_1_1_rank" kindref="compound">Kokkos::Rank</ref>&lt; 3 &gt;, <ref refid="struct_kokkos_1_1_index_type" kindref="compound">int_index</ref> &gt;</type>
        <definition>using Test06::TestMDRangePolicy&lt; ExecSpace &gt;::MDPolicyType_3D =  typename Kokkos::MDRangePolicy&lt;ExecSpace, Kokkos::Rank&lt;3&gt;, int_index&gt;</definition>
        <argsstring></argsstring>
        <name>MDPolicyType_3D</name>
        <qualifiedname>Test06::TestMDRangePolicy::MDPolicyType_3D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="101" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test06_1_1_test_m_d_range_policy_1a1c49e49184311e07c3ad9ab9a560699f" prot="public" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Kokkos::MDRangePolicy</ref>&lt; ExecSpace, <ref refid="struct_kokkos_1_1_rank" kindref="compound">Kokkos::Rank</ref>&lt; 4 &gt;, <ref refid="struct_kokkos_1_1_index_type" kindref="compound">int_index</ref> &gt;</type>
        <definition>using Test06::TestMDRangePolicy&lt; ExecSpace &gt;::MDPolicyType_4D =  typename Kokkos::MDRangePolicy&lt;ExecSpace, Kokkos::Rank&lt;4&gt;, int_index&gt;</definition>
        <argsstring></argsstring>
        <name>MDPolicyType_4D</name>
        <qualifiedname>Test06::TestMDRangePolicy::MDPolicyType_4D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="105" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test06_1_1_test_m_d_range_policy_1a98ec210d464ba182771abb13a273cbd4" prot="public" static="no" mutable="no">
        <type>value_type *</type>
        <definition>value_type* Test06::TestMDRangePolicy&lt; ExecSpace &gt;::deviceData</definition>
        <argsstring></argsstring>
        <name>deviceData</name>
        <qualifiedname>Test06::TestMDRangePolicy::deviceData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="109" column="14" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test06_1_1_test_m_d_range_policy_1a5d7e4dccc8b4ca3f7d5953c2127bdd9e" prot="public" static="no" mutable="no">
        <type>value_type *</type>
        <definition>value_type * Test06::TestMDRangePolicy&lt; ExecSpace &gt;::hostData</definition>
        <argsstring></argsstring>
        <name>hostData</name>
        <qualifiedname>Test06::TestMDRangePolicy::hostData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="109" column="25" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test06_1_1_test_m_d_range_policy_1a19bc9f3d985fd6f554fde50b71d288bd" prot="public" static="no" mutable="no">
        <type>const value_type</type>
        <definition>const value_type Test06::TestMDRangePolicy&lt; ExecSpace &gt;::delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <qualifiedname>Test06::TestMDRangePolicy::delta</qualifiedname>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="110" column="20" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test06_1_1_test_m_d_range_policy_1a60d25062ac98ccdd62d04d2c5dd416dd" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Test06::TestMDRangePolicy&lt; ExecSpace &gt;::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <qualifiedname>Test06::TestMDRangePolicy::N</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="111" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test06_1_1_test_m_d_range_policy_1acbe95fc89bd140cdaffd111212e5db5b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Test06::TestMDRangePolicy&lt; ExecSpace &gt;::M</definition>
        <argsstring></argsstring>
        <name>M</name>
        <qualifiedname>Test06::TestMDRangePolicy::M</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="112" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test06_1_1_test_m_d_range_policy_1a12c195e8e71126aee1c6f66e7394097a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MemSpace</type>
          </param>
        </templateparamlist>
        <type>value_type *</type>
        <definition>value_type * Test06::TestMDRangePolicy&lt; ExecSpace &gt;::allocate_mem</definition>
        <argsstring>(int N_)</argsstring>
        <name>allocate_mem</name>
        <qualifiedname>Test06::TestMDRangePolicy::allocate_mem</qualifiedname>
        <param>
          <type>int</type>
          <declname>N_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="116" column="14" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="struct_test06_1_1_test_m_d_range_policy_1a0db6a5180f231c15bde21da4f855dcd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MemSpace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test06::TestMDRangePolicy&lt; ExecSpace &gt;::free_mem</definition>
        <argsstring>(value_type *data)</argsstring>
        <name>free_mem</name>
        <qualifiedname>Test06::TestMDRangePolicy::free_mem</qualifiedname>
        <param>
          <type>value_type *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="123" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="struct_test06_1_1_test_m_d_range_policy_1afc71fd8c1fd88dd436b42df300324238" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test06::TestMDRangePolicy&lt; ExecSpace &gt;::compare_equal_2D</definition>
        <argsstring>()</argsstring>
        <name>compare_equal_2D</name>
        <qualifiedname>Test06::TestMDRangePolicy::compare_equal_2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="128" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="struct_test06_1_1_test_m_d_range_policy_1a92909bc3a913c2c1c3a7ea92a27d30f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test06::TestMDRangePolicy&lt; ExecSpace &gt;::compare_equal_3D</definition>
        <argsstring>()</argsstring>
        <name>compare_equal_3D</name>
        <qualifiedname>Test06::TestMDRangePolicy::compare_equal_3D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="134" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="134" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="struct_test06_1_1_test_m_d_range_policy_1ad8ee806f155537a17a6cd38e758d9b56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test06::TestMDRangePolicy&lt; ExecSpace &gt;::compare_equal_4D</definition>
        <argsstring>()</argsstring>
        <name>compare_equal_4D</name>
        <qualifiedname>Test06::TestMDRangePolicy::compare_equal_4D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="142" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="struct_test06_1_1_test_m_d_range_policy_1a890ac9af1e07ac5cbbe004173aaf60f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test06::TestMDRangePolicy&lt; ExecSpace &gt;::mdRange2D</definition>
        <argsstring>()</argsstring>
        <name>mdRange2D</name>
        <qualifiedname>Test06::TestMDRangePolicy::mdRange2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="152" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="152" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="struct_test06_1_1_test_m_d_range_policy_1a8fec2533bb6eed77da5d4d262e641e31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test06::TestMDRangePolicy&lt; ExecSpace &gt;::mdRange3D</definition>
        <argsstring>()</argsstring>
        <name>mdRange3D</name>
        <qualifiedname>Test06::TestMDRangePolicy::mdRange3D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="183" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="183" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="struct_test06_1_1_test_m_d_range_policy_1a25844f22f1f85a5731245d104cc2bfde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test06::TestMDRangePolicy&lt; ExecSpace &gt;::mdRange4D</definition>
        <argsstring>()</argsstring>
        <name>mdRange4D</name>
        <qualifiedname>Test06::TestMDRangePolicy::mdRange4D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="214" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="214" bodyend="242"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="88" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="88" bodyend="243"/>
    <listofallmembers>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a12c195e8e71126aee1c6f66e7394097a" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>allocate_mem</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1afc71fd8c1fd88dd436b42df300324238" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>compare_equal_2D</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a92909bc3a913c2c1c3a7ea92a27d30f6" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>compare_equal_3D</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1ad8ee806f155537a17a6cd38e758d9b56" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>compare_equal_4D</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1af23fcf0bcca19337366cb4bbcbe39695" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>d_memspace_type</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a19bc9f3d985fd6f554fde50b71d288bd" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>delta</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a98ec210d464ba182771abb13a273cbd4" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>deviceData</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a0db6a5180f231c15bde21da4f855dcd9" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>free_mem</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1af31857982ff640f4531dcaa7ba16f00d" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>h_memspace_type</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a5d7e4dccc8b4ca3f7d5953c2127bdd9e" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>hostData</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a6bbf0a345ee7c902db88331b14a7f0b0" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>int_index</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1acbe95fc89bd140cdaffd111212e5db5b" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>M</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a936c3ec3e4e3e7d6da055b08a9d49670" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>MDPolicyType_2D</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a425cce85915bb561150ace9562a19bf4" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>MDPolicyType_3D</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a1c49e49184311e07c3ad9ab9a560699f" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>MDPolicyType_4D</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a890ac9af1e07ac5cbbe004173aaf60f1" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>mdRange2D</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a8fec2533bb6eed77da5d4d262e641e31" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>mdRange3D</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a25844f22f1f85a5731245d104cc2bfde" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>mdRange4D</name></member>
      <member refid="struct_test06_1_1_test_m_d_range_policy_1a60d25062ac98ccdd62d04d2c5dd416dd" prot="public" virt="non-virtual"><scope>Test06::TestMDRangePolicy</scope><name>N</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
