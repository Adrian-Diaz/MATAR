<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class Dimension</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1acebb954ba6a46709fbaa491c4d4784c6" prot="public" static="no">
        <type>std::true_type</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::is_mapping_plugin =  std::true_type</definition>
        <argsstring></argsstring>
        <name>is_mapping_plugin</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::is_mapping_plugin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1504" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a62503e8d4b6f6c8bcc4ae61ec08085f0" prot="public" static="no">
        <type>std::true_type</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::is_regular =  std::true_type</definition>
        <argsstring></argsstring>
        <name>is_regular</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::is_regular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1505" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a5d9cae6b017c4ca3789871dddd985be3" prot="public" static="no">
        <type>size_t</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::size_type =  size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1507" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a9449ea6f2e38d313df7e39e63368b179" prot="public" static="no">
        <type>Dimension</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_type =  Dimension</definition>
        <argsstring></argsstring>
        <name>dimension_type</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1508" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aad9a94fee4b952403696c790e873cc17" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref></type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::array_layout =  Kokkos::LayoutRight</definition>
        <argsstring></argsstring>
        <name>array_layout</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::array_layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1509" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1509" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ab1a63eee18e9e7e828d448d2ac2e1d02" prot="public" static="no" mutable="no">
        <type>dimension_type</type>
        <definition>dimension_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::m_dim</definition>
        <argsstring></argsstring>
        <name>m_dim</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::m_dim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1511" column="18" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1511" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a1223251d4d6df8c41e1e40eb3c11a0af" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1517" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1517" bodyend="1519"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aabdc455164a7521f79c2c9120fe7f726" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1523" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1523" bodyend="1526"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ab6544b7029cc1c8ab660d90ba34b8966" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1530" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1530" bodyend="1534"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a43f251576d2bb893e2c2d9265ee2463a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1538" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1538" bodyend="1543"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a34ffa94c0fecee028c89f85d1829b378" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1547" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1547" bodyend="1554"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ace60f509280df7ee45ac7d40115d08d3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1559" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1559" bodyend="1567"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a8afabc8432746e9f19d6a8640e7306b4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
          <param>
            <type>typename I6</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5, I6 const &amp;i6) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>I6 const &amp;</type>
          <declname>i6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1572" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1572" bodyend="1583"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ac471967a043fcb8f7f929a241e014642" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
          <param>
            <type>typename I6</type>
          </param>
          <param>
            <type>typename I7</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5, I6 const &amp;i6, I7 const &amp;i7) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>I6 const &amp;</type>
          <declname>i6</declname>
        </param>
        <param>
          <type>I7 const &amp;</type>
          <declname>i7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1588" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1588" bodyend="1602"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a6215e883e42a5b2632b40082fe278799" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr <ref refid="struct_kokkos_1_1_layout_right" kindref="compound">array_layout</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr array_layout Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::layout</definition>
        <argsstring>() const</argsstring>
        <name>layout</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1607" column="26" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1607" bodyend="1610"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a93acf8b9c07ea20768372759533ab6e8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_0</definition>
        <argsstring>() const</argsstring>
        <name>dimension_0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1612" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1612" bodyend="1614"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aca35cacb1e3ded95c1a507ab0cc3dbd7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_1</definition>
        <argsstring>() const</argsstring>
        <name>dimension_1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1615" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1615" bodyend="1617"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a02e600eba4f91785f3476e63c974c320" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_2</definition>
        <argsstring>() const</argsstring>
        <name>dimension_2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1618" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1618" bodyend="1620"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a06f7584c1fb668d13602ecdf113cc961" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_3</definition>
        <argsstring>() const</argsstring>
        <name>dimension_3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1621" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1621" bodyend="1623"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ad0c6b90efbd25efa0acd50f7f87cef45" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_4</definition>
        <argsstring>() const</argsstring>
        <name>dimension_4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1624" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1624" bodyend="1626"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a2cf7f83f6ead8b3252b32918035999c2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_5</definition>
        <argsstring>() const</argsstring>
        <name>dimension_5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1627" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1627" bodyend="1629"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a7ca34780e194eb28e9cd104dab533ae9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_6</definition>
        <argsstring>() const</argsstring>
        <name>dimension_6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1630" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1630" bodyend="1632"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aca9d548d397b608b6e833538e367535d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_7</definition>
        <argsstring>() const</argsstring>
        <name>dimension_7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::dimension_7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1633" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1633" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a40ddf665d910cc28a6387d7ebbd9cb2d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1639" column="23" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1639" bodyend="1642"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a242662d68ace47ce99a069727c7b4f20" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::span</definition>
        <argsstring>() const</argsstring>
        <name>span</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::span</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1646" column="23" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1646" bodyend="1649"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a46192be0cc61407fa6552a3b601eb17d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr bool</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr bool Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::span_is_contiguous</definition>
        <argsstring>() const</argsstring>
        <name>span_is_contiguous</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::span_is_contiguous</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1651" column="41" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1651" bodyend="1653"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ab72a3de40350a98c939b4a8b3960027a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_7</definition>
        <argsstring>() const</argsstring>
        <name>stride_7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1656" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1656" bodyend="1656"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a2b270d9c537bc69aeedd36cabcafe2e5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_6</definition>
        <argsstring>() const</argsstring>
        <name>stride_6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1657" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1657" bodyend="1659"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a002403aef9e236b4b1a799787df353bc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_5</definition>
        <argsstring>() const</argsstring>
        <name>stride_5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1660" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1660" bodyend="1662"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1abcabf9a2457e82daa95ecccc8e2cf190" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_4</definition>
        <argsstring>() const</argsstring>
        <name>stride_4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1663" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1663" bodyend="1665"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a4bbc2e54e19c72d7040ef641f199db97" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_3</definition>
        <argsstring>() const</argsstring>
        <name>stride_3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1666" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1666" bodyend="1668"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a2e38b57198a2c996ca82d211bd1e6ee3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_2</definition>
        <argsstring>() const</argsstring>
        <name>stride_2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1669" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1669" bodyend="1671"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a9a0b3d6f4af96f82563f9c2e98d0eef0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_1</definition>
        <argsstring>() const</argsstring>
        <name>stride_1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1672" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1672" bodyend="1674"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a7941c4e85fcdc9da8779e6e8fd7052d7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_0</definition>
        <argsstring>() const</argsstring>
        <name>stride_0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1675" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1675" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a51807c082ec933a24d750635598a53da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename iType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride</definition>
        <argsstring>(iType *const s) const</argsstring>
        <name>stride</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::stride</qualifiedname>
        <param>
          <type>iType *const</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1682" column="31" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1682" bodyend="1716"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aa35c330a77d0c23a4e98a01b4a4abfe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>()=default</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1732" column="3"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aacfa26113ef462ec8d561ed774c98096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset &amp;)=default</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1733" column="3"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a4e354b79c6909d93a2506014cd37db45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        <definition>ViewOffset &amp; Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator=</definition>
        <argsstring>(const ViewOffset &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1734" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a44631017ddbc2f34ce49c2432c59ead4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>TrivialScalarSize</declname>
            <defname>TrivialScalarSize</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(std::integral_constant&lt; unsigned, TrivialScalarSize &gt; const &amp;, Kokkos::LayoutRight const &amp;arg_layout)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>std::integral_constant&lt; unsigned, TrivialScalarSize &gt; const &amp;</type>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref> const &amp;</type>
          <declname>arg_layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1738" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1738" bodyend="1741"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ae3063980a01cac1e6f5ff274e7a46cde" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DimRHS</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset&lt; DimRHS, Kokkos::LayoutRight, void &gt; &amp;rhs)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; DimRHS, <ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>, void &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1744" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1744" bodyend="1751"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ad54e0edb2bf7623ce78401c2be921b2d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DimRHS</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset&lt; DimRHS, Kokkos::LayoutLeft, void &gt; &amp;rhs)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; DimRHS, <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>, void &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1754" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1754" bodyend="1762"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1afe39b73d5217c42b1771672614270c16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DimRHS</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset&lt; DimRHS, Kokkos::LayoutStride, void &gt; &amp;rhs)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; DimRHS, <ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref>, void &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1765" column="26" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1765" bodyend="1767"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a53b26df1cb005c928f5ca73466881448" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DimRHS</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset&lt; DimRHS, Kokkos::LayoutRight, void &gt; &amp;, const SubviewExtents&lt; DimRHS::rank, dimension_type::rank &gt; &amp;sub)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; DimRHS, <ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>, void &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_subview_extents" kindref="compound">SubviewExtents</ref>&lt; DimRHS::rank, dimension_type::rank &gt; &amp;</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1773" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1773" bodyend="1781"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1500" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1503" bodyend="1782"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aad9a94fee4b952403696c790e873cc17" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>array_layout</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a93acf8b9c07ea20768372759533ab6e8" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aca35cacb1e3ded95c1a507ab0cc3dbd7" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a02e600eba4f91785f3476e63c974c320" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a06f7584c1fb668d13602ecdf113cc961" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ad0c6b90efbd25efa0acd50f7f87cef45" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a2cf7f83f6ead8b3252b32918035999c2" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a7ca34780e194eb28e9cd104dab533ae9" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aca9d548d397b608b6e833538e367535d" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a9449ea6f2e38d313df7e39e63368b179" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_type</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1acebb954ba6a46709fbaa491c4d4784c6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>is_mapping_plugin</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a62503e8d4b6f6c8bcc4ae61ec08085f0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>is_regular</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a6215e883e42a5b2632b40082fe278799" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>layout</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ab1a63eee18e9e7e828d448d2ac2e1d02" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>m_dim</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a1223251d4d6df8c41e1e40eb3c11a0af" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aabdc455164a7521f79c2c9120fe7f726" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ab6544b7029cc1c8ab660d90ba34b8966" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a43f251576d2bb893e2c2d9265ee2463a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a34ffa94c0fecee028c89f85d1829b378" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ace60f509280df7ee45ac7d40115d08d3" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a8afabc8432746e9f19d6a8640e7306b4" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ac471967a043fcb8f7f929a241e014642" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a4e354b79c6909d93a2506014cd37db45" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator=</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a40ddf665d910cc28a6387d7ebbd9cb2d" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>size</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a5d9cae6b017c4ca3789871dddd985be3" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>size_type</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a242662d68ace47ce99a069727c7b4f20" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>span</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a46192be0cc61407fa6552a3b601eb17d" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>span_is_contiguous</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a51807c082ec933a24d750635598a53da" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a7941c4e85fcdc9da8779e6e8fd7052d7" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a9a0b3d6f4af96f82563f9c2e98d0eef0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a2e38b57198a2c996ca82d211bd1e6ee3" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a4bbc2e54e19c72d7040ef641f199db97" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1abcabf9a2457e82daa95ecccc8e2cf190" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a002403aef9e236b4b1a799787df353bc" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a2b270d9c537bc69aeedd36cabcafe2e5" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ab72a3de40350a98c939b4a8b3960027a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aa35c330a77d0c23a4e98a01b4a4abfe4" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1aacfa26113ef462ec8d561ed774c98096" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a44631017ddbc2f34ce49c2432c59ead4" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ae3063980a01cac1e6f5ff274e7a46cde" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1ad54e0edb2bf7623ce78401c2be921b2d" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1afe39b73d5217c42b1771672614270c16" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41_1a53b26df1cb005c928f5ca73466881448" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
