<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="d9/dd6/_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>MATAR</highlight></codeline>
<codeline><highlight class="normal">&lt;p<sp/>align=&quot;center&quot;&gt;&lt;img<sp/>src=&quot;https://github.com/lanl/MATAR/blob/main/MATAR_Logo.png&quot;<sp/>width=&quot;350&quot;&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">MATAR<sp/>is<sp/>a<sp/>C++<sp/>library<sp/>that<sp/>addresses<sp/>the<sp/>need<sp/>for<sp/>simple,<sp/>fast,<sp/>and<sp/>memory-efficient<sp/>multi-dimensional<sp/>data<sp/>representations<sp/>for<sp/>dense<sp/>and<sp/>sparse<sp/>storage<sp/>that<sp/>arise<sp/>with<sp/>numerical<sp/>methods<sp/>and<sp/>in<sp/>software<sp/>applications.<sp/>The<sp/>data<sp/>representations<sp/>are<sp/>designed<sp/>to<sp/>perform<sp/>well<sp/>across<sp/>multiple<sp/>computer<sp/>architectures,<sp/>including<sp/>CPUs<sp/>and<sp/>GPUs.<sp/>MATAR<sp/>allows<sp/>users<sp/>to<sp/>easily<sp/>create<sp/>and<sp/>use<sp/>intricate<sp/>data<sp/>representations<sp/>that<sp/>are<sp/>also<sp/>portable<sp/>across<sp/>disparate<sp/>architectures<sp/>using<sp/>Kokkos.<sp/>The<sp/>performance<sp/>aspect<sp/>is<sp/>achieved<sp/>by<sp/>forcing<sp/>contiguous<sp/>memory<sp/>layout<sp/>(or<sp/>as<sp/>close<sp/>to<sp/>contiguous<sp/>as<sp/>possible)<sp/>for<sp/>multi-dimensional<sp/>and<sp/>multi-size<sp/>dense<sp/>or<sp/>sparse<sp/>MATrix<sp/>and<sp/>ARray<sp/>(hence,<sp/>MATAR)<sp/>types.<sp/>Results<sp/>show<sp/>that<sp/>MATAR<sp/>has<sp/>the<sp/>capability<sp/>to<sp/>improve<sp/>memory<sp/>utilization,<sp/>performance,<sp/>and<sp/>programmer<sp/>productivity<sp/>in<sp/>scientific<sp/>computing.<sp/>This<sp/>is<sp/>achieved<sp/>by<sp/>fitting<sp/>more<sp/>work<sp/>into<sp/>the<sp/>available<sp/>memory,<sp/>minimizing<sp/>memory<sp/>loads<sp/>required,<sp/>and<sp/>by<sp/>loading<sp/>memory<sp/>in<sp/>the<sp/>most<sp/>efficient<sp/>order.<sp/></highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Examples</highlight></codeline>
<codeline><highlight class="normal">*<sp/>[ELEMENTS](https://github.com/lanl/ELEMENTS/):<sp/><sp/><sp/>MATAR<sp/>is<sp/>a<sp/>part<sp/>of<sp/>the<sp/>ELEMENTS<sp/>Library<sp/>(LANL<sp/>C#<sp/>C20058)<sp/>and<sp/>it<sp/>underpins<sp/>the<sp/>routines<sp/>implemented<sp/>in<sp/>ELEMENTS.<sp/><sp/>MATAR<sp/>is<sp/>available<sp/>in<sp/>a<sp/>stand-alone<sp/>directory<sp/>outside<sp/>of<sp/>the<sp/>ELEMENTS<sp/>directory<sp/>because<sp/>it<sp/>can<sp/>aid<sp/>many<sp/>code<sp/>applications.<sp/><sp/>The<sp/>dense<sp/>and<sp/>sparse<sp/>storage<sp/>types<sp/>in<sp/>MATAR<sp/>are<sp/>the<sp/>foundation<sp/>for<sp/>the<sp/>ELEMENTS<sp/>library,<sp/>which<sp/>contains<sp/>mathematical<sp/>functions<sp/>to<sp/>support<sp/>a<sp/>very<sp/>broad<sp/>range<sp/>of<sp/>element<sp/>types<sp/>including:<sp/>linear,<sp/>quadratic,<sp/>and<sp/>cubic<sp/>serendipity<sp/>elements<sp/>in<sp/>2D<sp/>and<sp/>3D;<sp/>high-order<sp/>spectral<sp/>elements;<sp/>and<sp/>a<sp/>linear<sp/>4D<sp/>element.<sp/>An<sp/>unstructured<sp/>high-order<sp/>mesh<sp/>class<sp/>is<sp/>available<sp/>in<sp/>ELEMENTS<sp/>and<sp/>it<sp/>takes<sp/>advantage<sp/>of<sp/>MATAR<sp/>for<sp/>efficient<sp/>access<sp/>of<sp/>various<sp/>mesh<sp/>entities.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>[Fierro](https://github.com/lanl/Fierro):<sp/>The<sp/>MATAR<sp/>library<sp/>underpins<sp/>the<sp/>Fierro<sp/>code<sp/>that<sp/>is<sp/>designed<sp/>to<sp/>simulate<sp/>quasi-static<sp/>solid<sp/>mechanics<sp/>problems<sp/>and<sp/>material<sp/>dynamics<sp/>problems.<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">*<sp/>Simple<sp/>examples<sp/>are<sp/>in<sp/>the<sp/>/test<sp/>folder</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Descriptions</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>All<sp/>Array<sp/>MATAR<sp/>types<sp/>(e.g.,<sp/>CArray,<sp/>ViewCArray,<sp/>FArray,<sp/>RaggedRightArray,<sp/>etc.)<sp/>start<sp/>with<sp/>an<sp/>index<sp/>of<sp/>0<sp/>and<sp/>stop<sp/>at<sp/>an<sp/>index<sp/>of<sp/>N-1,<sp/>where<sp/>N<sp/>is<sp/>the<sp/>number<sp/>of<sp/>entries.<sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>All<sp/>Matrix<sp/>MATAR<sp/>types<sp/><sp/>(e.g.,<sp/>CMatrix,<sp/>ViewCMatrix,<sp/>FMatrix,<sp/>etc.)<sp/><sp/>start<sp/>with<sp/>an<sp/>index<sp/>of<sp/>1<sp/>and<sp/>stop<sp/>at<sp/>an<sp/>index<sp/>of<sp/>N,<sp/>where<sp/>N<sp/>is<sp/>the<sp/>number<sp/>of<sp/>entries.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>The<sp/>MATAR<sp/>View<sp/>types<sp/>(e.g.,<sp/>ViewCArray,<sp/>ViewCMatrix,<sp/>ViewFArray,<sp/>etc.<sp/>)<sp/>are<sp/>designed<sp/>to<sp/>accept<sp/>a<sp/>pointer<sp/>to<sp/>an<sp/>existing<sp/>1D<sp/>array<sp/>and<sp/>then<sp/>access<sp/>that<sp/>1D<sp/>data<sp/>as<sp/>a<sp/>multi-dimensional<sp/>array.<sp/><sp/>The<sp/>MATAR<sp/>View<sp/>types<sp/>can<sp/>also<sp/>be<sp/>used<sp/>to<sp/>slice<sp/>an<sp/>existing<sp/>View.<sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>The<sp/>C<sp/>dense<sp/>storage<sp/>and<sp/>View<sp/>types<sp/>(e.g.,<sp/>CArray,<sp/>ViewCArray,<sp/>CMatrix,<sp/>etc.)<sp/>access<sp/>the<sp/>data<sp/>following<sp/>the<sp/>C/C++<sp/>language<sp/>convection<sp/>of<sp/>having<sp/>the<sp/>last<sp/>index<sp/>in<sp/>a<sp/>multi-dimensional<sp/>array<sp/>vary<sp/>the<sp/>quickest.<sp/><sp/>In<sp/>a<sp/>2D<sp/>CArray<sp/>A,<sp/>the<sp/>index<sp/>j<sp/>in<sp/>A(i,j)<sp/>varies<sp/>first<sp/>followed<sp/>by<sp/>the<sp/>index<sp/>i,<sp/>so<sp/>the<sp/>optimal<sp/>performance<sp/>is<sp/>achieved<sp/>using<sp/>the<sp/>following<sp/>loop<sp/>ordering.</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Optimal<sp/>use<sp/>of<sp/>CArray</highlight></codeline>
<codeline><highlight class="normal">for<sp/>(i=0,i&lt;N,i++){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(j=0,j&lt;N,j++){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>The<sp/>F<sp/>dense<sp/>storage<sp/>and<sp/>View<sp/>types<sp/>(e.g.,<sp/>FArray,<sp/>ViewFArray,<sp/>FMatrix,<sp/>etc.)<sp/>access<sp/>the<sp/>data<sp/>following<sp/>the<sp/>Fortran<sp/>language<sp/>convection<sp/>of<sp/>having<sp/>the<sp/>first<sp/>index<sp/>in<sp/>a<sp/>multi-dimensional<sp/>array<sp/>vary<sp/>the<sp/>quickest.<sp/><sp/>In<sp/>a<sp/>2D<sp/>FMatrix<sp/>M,<sp/>the<sp/>index<sp/>i<sp/>in<sp/>M(i,j)<sp/>varies<sp/>first<sp/>followed<sp/>by<sp/>the<sp/>index<sp/>j,<sp/>so<sp/>the<sp/>optimal<sp/>performance<sp/>is<sp/>achieved<sp/>using<sp/>the<sp/>following<sp/>loop<sp/>ordering.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Optimal<sp/>use<sp/>of<sp/>FMatrix</highlight></codeline>
<codeline><highlight class="normal">for<sp/>(j=1,j&lt;=N,j++){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i=1,i&lt;=N,i++){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M(i,j)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>The<sp/>ragged<sp/>data<sp/>types<sp/>(e.g.,<sp/>RaggedRightArray,<sp/>RaggedDownArray,<sp/>etc)<sp/>in<sp/>MATAR<sp/>are<sp/>special<sp/>sparse<sp/>storage<sp/>types.<sp/><sp/>The<sp/>Right<sp/>access<sp/>types<sp/>are<sp/>for<sp/>R(i,j)<sp/>where<sp/>the<sp/>number<sp/>of<sp/>column<sp/>entries<sp/>varies<sp/>in<sp/>width<sp/>across<sp/>the<sp/>array.<sp/><sp/>The<sp/>Down<sp/>access<sp/>types<sp/>are<sp/>for<sp/>D(i,j)<sp/>where<sp/>the<sp/>number<sp/>of<sp/>row<sp/>entries<sp/>vary<sp/>in<sp/>length<sp/>across<sp/>the<sp/>array.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>The<sp/>SparseRowArray<sp/>MATAR<sp/>type<sp/>is<sp/>the<sp/>idetical<sp/>to<sp/>the<sp/>Compressed<sp/>Sparse<sp/>Row<sp/>(CSR)<sp/>or<sp/>Compressed<sp/>Row<sp/>Storage<sp/>(CSR)<sp/>respresentation.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>The<sp/>SparseColumnArray<sp/>MATAR<sp/>type<sp/>is<sp/>identical<sp/>to<sp/>the<sp/>Compressed<sp/>Sparse<sp/>Column<sp/>(CSC)<sp/>or<sp/>Compressed<sp/>Column<sp/>Storage<sp/>(CCS)<sp/>respresentation.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Usage</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">//<sp/>create<sp/>a<sp/>1D<sp/>array<sp/>of<sp/>integers<sp/>and<sp/>then<sp/>access<sp/>as<sp/>a<sp/>2D<sp/>array</highlight></codeline>
<codeline><highlight class="normal">int<sp/>A[9];</highlight></codeline>
<codeline><highlight class="normal">auto<sp/>A_array<sp/>=<sp/>ViewCArray<sp/>&lt;int&gt;<sp/>(A,<sp/>3,<sp/>3);<sp/>//<sp/>access<sp/>as<sp/>A(i,j)<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>doubles</highlight></codeline>
<codeline><highlight class="normal">auto<sp/>B<sp/>=<sp/>CArray<sp/>&lt;double&gt;<sp/>(3,3,3);<sp/>//<sp/>access<sp/>as<sp/>B(i,j,k)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>create<sp/>a<sp/>slice<sp/>of<sp/>the<sp/>3D<sp/>array<sp/>at<sp/>index<sp/>1</highlight></codeline>
<codeline><highlight class="normal">auto<sp/>C<sp/>=<sp/>ViewCArray<sp/>&lt;double&gt;<sp/>(&amp;B(1,0,0),3,3);<sp/>//<sp/>access<sp/>as<sp/>C(j,k)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>create<sp/>a<sp/>4D<sp/>matrix<sp/>of<sp/>doubles,<sp/>indices<sp/>start<sp/>at<sp/>1<sp/></highlight></codeline>
<codeline><highlight class="normal">auto<sp/>D<sp/>=<sp/>CMatrix<sp/>&lt;double&gt;<sp/>(10,9,8,7);<sp/>//<sp/>access<sp/>as<sp/>D(i,j,k,l)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>create<sp/>a<sp/>2D<sp/>view<sp/>of<sp/>a<sp/>standard<sp/>array</highlight></codeline>
<codeline><highlight class="normal">std::array&lt;int,<sp/>9&gt;<sp/>E1d;</highlight></codeline>
<codeline><highlight class="normal">auto<sp/>E<sp/>=<sp/>ViewCArray&lt;int&gt;<sp/>(&amp;E1d[0],<sp/>3,<sp/>3);</highlight></codeline>
<codeline><highlight class="normal">E(0,0)<sp/>=<sp/>1;<sp/><sp/>//<sp/>and<sp/>so<sp/>on</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>create<sp/>a<sp/>ragged-right<sp/>array<sp/>of<sp/>integers</highlight></codeline>
<codeline><highlight class="normal">//</highlight></codeline>
<codeline><highlight class="normal">//<sp/>[1,<sp/>2,<sp/>3]</highlight></codeline>
<codeline><highlight class="normal">//<sp/>[4,<sp/>5]</highlight></codeline>
<codeline><highlight class="normal">//<sp/>[6]</highlight></codeline>
<codeline><highlight class="normal">//<sp/>[7,<sp/>8,<sp/>9,<sp/>10]</highlight></codeline>
<codeline><highlight class="normal">//</highlight></codeline>
<codeline><highlight class="normal">size_t<sp/>my_strides[4]<sp/>=<sp/>{3,<sp/>2,<sp/>1,<sp/>4};</highlight></codeline>
<codeline><highlight class="normal">RaggedRightArray<sp/>&lt;int&gt;<sp/>ragged(my_strides,<sp/>4);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">int<sp/>value<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal">for<sp/>(int<sp/>i=0;<sp/>i&lt;4;<sp/>i++){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j=0;<sp/>j&lt;my_ragged.stride(i);<sp/>j++){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ragged(i,j)<sp/>=<sp/>value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">##<sp/>Cloning<sp/>the<sp/>code</highlight></codeline>
<codeline><highlight class="normal">If<sp/>your<sp/>SSH<sp/>keys<sp/>are<sp/>set<sp/>in<sp/>github,<sp/>then<sp/>from<sp/>the<sp/>terminal<sp/>type:</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">git<sp/>clone<sp/>--recursive<sp/>ssh://git@github.com/lanl/MATAR.git<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Basic<sp/>build</highlight></codeline>
<codeline><highlight class="normal">The<sp/>basic<sp/>build<sp/>is<sp/>for<sp/>users<sp/>only<sp/>interested<sp/>in<sp/>the<sp/>serial<sp/>CPU<sp/>only<sp/>MATAR<sp/>data<sp/>types.<sp/><sp/>For<sp/>this<sp/>build,<sp/>we<sp/>recommend<sp/>making<sp/>a<sp/>folder<sp/>perhaps<sp/>called<sp/>build<sp/>then<sp/>go<sp/>into<sp/>the<sp/>build<sp/>folder<sp/>and<sp/>type</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">make</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">The<sp/>compiled<sp/>code<sp/>will<sp/>be<sp/>in<sp/>the<sp/>build<sp/>folder.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Debug<sp/>basic<sp/>build<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>build<sp/>serial<sp/>CPU<sp/>only<sp/>MATAR<sp/>data<sp/>types<sp/>in<sp/>the<sp/>debug<sp/>mode,<sp/>please<sp/>use</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>-DCMAKE_BUILD_TYPE=Debug<sp/>..</highlight></codeline>
<codeline><highlight class="normal">make</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">The<sp/>debug<sp/>flag<sp/>includes<sp/>checks<sp/>on<sp/>array<sp/>and<sp/>matrix<sp/>dimensions<sp/>and<sp/>index<sp/>bounds.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Building<sp/>MATAR<sp/>with<sp/>Kokkos</highlight></codeline>
<codeline><highlight class="normal">A<sp/>suite<sp/>of<sp/>build<sp/>scripts<sp/>are<sp/>provided<sp/>to<sp/>build<sp/>MATAR<sp/>with<sp/>Kokkos<sp/>for<sp/>performance<sp/>portability<sp/>across<sp/>computer<sp/>architectures<sp/>(CPUs<sp/>and<sp/>GPUs).<sp/><sp/>The<sp/>scripts<sp/>for<sp/>various<sp/>Kokkos<sp/>backends<sp/>(e.g.,<sp/>CUDA,<sp/>HIP,<sp/>OpenMP,<sp/>and<sp/>pthreads)<sp/>are<sp/>located<sp/>within<sp/>the<sp/>scripts<sp/>folder.<sp/><sp/>The<sp/>provided<sp/>scripts<sp/>are<sp/>configured<sp/>for<sp/>particular<sp/>hardware,<sp/>the<sp/>user<sp/>will<sp/>likely<sp/>need<sp/>to<sp/>alter<sp/>the<sp/>inputs<sp/>to<sp/>reflect<sp/>their<sp/>hardware.<sp/><sp/>There<sp/>are<sp/>three<sp/>scripts<sp/>in<sp/>each<sp/>folder<sp/>that<sp/>are<sp/>sourced<sp/>to<sp/>build<sp/>MATAR<sp/>with<sp/>Kokkos.<sp/><sp/>The<sp/>scripts<sp/>are</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">sourceme-env.sh</highlight></codeline>
<codeline><highlight class="normal">kokkos-install.sh</highlight></codeline>
<codeline><highlight class="normal">backend-cmake-build.sh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">The<sp/>word<sp/>backend<sp/>denotes<sp/>cuda,<sp/>hip,<sp/>openMP,<sp/>and<sp/>so<sp/>forth.<sp/><sp/>Scripts<sp/>are<sp/>also<sp/>provided<sp/>to<sp/>build<sp/>MATAR<sp/>without<sp/>Kokkos,<sp/>and<sp/>in<sp/>that<sp/>case<sp/>there<sp/>is<sp/>no<sp/>backend<sp/>listed<sp/>since<sp/>it<sp/>doesn&apos;t<sp/>use<sp/>Kokko.<sp/><sp/>The<sp/>backend-cmake-build.sh<sp/>script<sp/>will<sp/>run<sp/>cmake<sp/>and<sp/>make<sp/>for<sp/>the<sp/>project.<sp/><sp/>Afterwords,<sp/>the<sp/>user<sp/>can<sp/>just<sp/>runs<sp/>make<sp/>inside<sp/>the<sp/>respective<sp/>build<sp/>directory<sp/>to<sp/>compile<sp/>the<sp/>project.<sp/><sp/>For<sp/>clarity,<sp/>running<sp/>all<sp/>the<sp/>scripts<sp/>is<sp/>only<sp/>necessary<sp/>to<sp/>set<sp/>up<sp/>and<sp/>compile<sp/>the<sp/>code<sp/>the<sp/>first<sp/>time,<sp/>afterwards,<sp/>the<sp/>use<sp/>can<sp/>compile<sp/>the<sp/>code<sp/>using<sp/>make<sp/>in<sp/>the<sp/>build<sp/>directory.<sp/><sp/>The<sp/>environment<sp/>variables<sp/>will<sp/>need<sp/>to<sp/>be<sp/>set<sp/>when<sp/>logging<sp/>into<sp/>a<sp/>compute<sp/>node<sp/>or<sp/>when<sp/>changing<sp/>to<sp/>a<sp/>different<sp/>kokkos<sp/>backend.<sp/>For<sp/>all<sp/>builds,<sp/>a<sp/>single<sp/>script<sp/>is<sp/>provided<sp/>in<sp/>each<sp/>script<sp/>folder<sp/>to<sp/>automate<sp/>the<sp/>entire<sp/>build<sp/>process,<sp/>it<sp/>runs<sp/>the<sp/>three<sp/>aforementioned<sp/>scripts<sp/>sequentially.<sp/></highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">build-it.sh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Before<sp/>using<sp/>the<sp/>build-it.sh<sp/>script,<sp/>the<sp/>user<sp/>must<sp/>verify<sp/>that<sp/>the<sp/>settings<sp/>in<sp/>the<sp/>other<sp/>scripts<sp/>that<sp/>build<sp/>MATAR<sp/>with<sp/>a<sp/>Kokkos<sp/>backend<sp/>are<sp/>correctly<sp/>set.<sp/><sp/>After<sp/>running<sp/>the<sp/>build-it.sh<sp/>script,<sp/>the<sp/>entire<sp/>project<sp/>is<sp/>compiled<sp/>and<sp/>stored<sp/>in<sp/>a<sp/>directory<sp/>that<sp/>is<sp/>named<sp/>with<sp/>the<sp/>respective<sp/>Kokkos<sp/>backend<sp/>e.g.,<sp/>build-kokkos-cuda.<sp/><sp/>Further<sp/>details<sp/>are<sp/>provided<sp/>on<sp/>the<sp/>three<sp/>scripts<sp/>to<sp/>configure<sp/>and<sp/>build<sp/>MATAR<sp/>with<sp/>a<sp/>Kokkos<sp/>backend.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Environment<sp/>configuration<sp/>script</highlight></codeline>
<codeline><highlight class="normal">To<sp/>start,<sp/>the<sp/>environment<sp/>variables<sp/>and<sp/>modules<sp/>must<sp/>be<sp/>configured<sp/>by<sp/>sourcing<sp/>the<sp/>following<sp/>script</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">source<sp/>sourceme-env.sh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">This<sp/>script<sp/>is<sp/>where<sp/>the<sp/>user<sp/>will<sp/>load<sp/>the<sp/>necessary<sp/>module<sp/>files<sp/>for<sp/>their<sp/>given<sp/>machine/architecture<sp/>combination.<sp/><sp/>This<sp/>script<sp/>also<sp/>creates<sp/>the<sp/>build<sp/>directory<sp/>for<sp/>the<sp/>project<sp/>e.g.,<sp/>build-kokkos-cuda,<sp/>build-kokkos-hip,<sp/>build-kokkos-openmp,<sp/>etc.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Install<sp/>Kokkos<sp/>script</highlight></codeline>
<codeline><highlight class="normal">The<sp/>next<sp/>step<sp/>is<sp/>to<sp/>install<sp/>Kokkos,<sp/>using<sp/>the<sp/>version<sp/>that<sp/>was<sp/>cloned<sp/>recursively<sp/>within<sp/>MATAR,<sp/>and<sp/>configure<sp/>the<sp/>Kokkos<sp/>build<sp/>for<sp/>specific<sp/>hardware<sp/>and<sp/>a<sp/>backend.<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">source<sp/>kokkos-install.sh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Within<sp/>this<sp/>script,<sp/>the<sp/>user<sp/>will<sp/>need<sp/>to<sp/>set<sp/>any<sp/>Kokkos<sp/>specific<sp/>variables<sp/>for<sp/>their<sp/>project.<sp/>The<sp/>architecture<sp/>variables<sp/>will<sp/>need<sp/>to<sp/>be<sp/>modified<sp/>based<sp/>on<sp/>the<sp/>architecture<sp/>being<sp/>used.<sp/>The<sp/>provided<sp/>scripts<sp/>are<sp/>set<sp/>for<sp/>a<sp/>particular<sp/>hardware<sp/>that<sp/>might<sp/>differ<sp/>from<sp/>what<sp/>a<sp/>user<sp/>might<sp/>be<sp/>using.<sp/><sp/>CPU<sp/>architecture<sp/>information<sp/>needs<sp/>to<sp/>be<sp/>listed<sp/>if<sp/>running<sp/>with<sp/>the<sp/>Kokkos<sp/>serial<sp/>or<sp/>OpenMP<sp/>backends;<sp/>GPU<sp/>architecture<sp/>information<sp/>must<sp/>be<sp/>listed<sp/>if<sp/>using<sp/>a<sp/>Kokkos<sp/>GPU<sp/>backend.<sp/><sp/>We<sp/>refer<sp/>the<sp/>user<sp/>to<sp/>Kokkos<sp/>compiling<sp/>page<sp/>to<sp/>see<sp/>the<sp/>large<sp/>list<sp/>of<sp/>compilation<sp/>options,</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">https://github.com/kokkos/kokkos/wiki/Compiling</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>CUDA<sp/>compilation<sp/>script</highlight></codeline>
<codeline><highlight class="normal">To<sp/>build<sp/>the<sp/>project<sp/>with<sp/>cuda,<sp/>the<sp/>last<sp/>step<sp/>is<sp/>to<sp/>type</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">source<sp/>cuda-cmake-build.sh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>HIP<sp/>compilation<sp/>script</highlight></codeline>
<codeline><highlight class="normal">To<sp/>build<sp/>the<sp/>project<sp/>with<sp/>hip,<sp/>the<sp/>last<sp/>step<sp/>is<sp/>to<sp/>type</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">source<sp/>hip-cmake-build.sh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>openMP<sp/>compilation<sp/>script</highlight></codeline>
<codeline><highlight class="normal">To<sp/>build<sp/>the<sp/>project<sp/>with<sp/>openMP,<sp/>the<sp/>last<sp/>step<sp/>is<sp/>to<sp/>type</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">source<sp/>openmp-cmake-build.sh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">The<sp/>sourceme-env.sh<sp/>script<sp/>(the<sp/>first<sp/>step)<sp/>sets<sp/>the<sp/>number<sp/>of<sp/>threads<sp/>to<sp/>16<sp/>by<sp/>default.<sp/><sp/>Changing<sp/>the<sp/>number<sp/>of<sp/>threads<sp/>used<sp/>with<sp/>openMP<sp/>requires<sp/>manually<sp/>setting<sp/>the<sp/>environment<sp/>variable<sp/>OMP_NUM_THREADS.<sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">###<sp/>pthreads<sp/>compilation<sp/>script</highlight></codeline>
<codeline><highlight class="normal">To<sp/>build<sp/>the<sp/>project<sp/>with<sp/>ptheads,<sp/>the<sp/>last<sp/>step<sp/>is<sp/>to<sp/>type</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">source<sp/>pthreads-cmake-build.sh</highlight></codeline>
<codeline><highlight class="normal">```<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">To<sp/>specify<sp/>number<sp/>of<sp/>threads<sp/>when<sp/>running<sp/>a<sp/>code<sp/>with<sp/>the<sp/>Kokkos<sp/>pthread<sp/>backend,<sp/>add<sp/>the<sp/>following<sp/>command<sp/>line<sp/>arguments</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">--kokkos-threads=4</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Automate<sp/>build<sp/>process</highlight></codeline>
<codeline><highlight class="normal">A<sp/>build-it.sh<sp/>script<sp/>is<sp/>provided<sp/>that<sp/>runs<sp/>all<sp/>scripts<sp/>sequentially<sp/>for<sp/>the<sp/>user.<sp/><sp/>The<sp/>build-it.sh<sp/>script<sp/>obviates<sp/>the<sp/>need<sp/>to<sp/>manually<sp/>source<sp/>each<sp/>script.<sp/><sp/>The<sp/>user<sp/>must<sp/>verify<sp/>the<sp/>settings<sp/>are<sp/>correct<sp/>in<sp/>each<sp/>script<sp/>prior<sp/>to<sp/>using<sp/>the<sp/>build-it.sh<sp/>script.<sp/><sp/>If<sp/>the<sp/>build-it.sh<sp/>script<sp/>fails<sp/>to<sp/>build<sp/>the<sp/>project<sp/>correctly,<sp/>the<sp/>user<sp/>should<sp/>carefully<sp/>look<sp/>at<sp/>the<sp/>loaded<sp/>modules<sp/>and<sp/>settings<sp/>for<sp/>building<sp/>Kokkos.<sp/><sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Contributing</highlight></codeline>
<codeline><highlight class="normal">Pull<sp/>requests<sp/>are<sp/>welcome.<sp/>For<sp/>major<sp/>changes,<sp/>please<sp/>open<sp/>an<sp/>issue<sp/>first<sp/>to<sp/>discuss<sp/>what<sp/>you<sp/>would<sp/>like<sp/>to<sp/>change.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline><highlight class="normal">This<sp/>program<sp/>is<sp/>open<sp/>source<sp/>under<sp/>the<sp/>BSD-3<sp/>License.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Citation</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@article{MATAR,</highlight></codeline>
<codeline><highlight class="normal">title<sp/>=<sp/>&quot;{MATAR:<sp/>A<sp/>Performance<sp/>Portability<sp/>and<sp/>Productivity<sp/>Implementation<sp/>of<sp/>Data-Oriented<sp/>Design<sp/>with<sp/>Kokkos}&quot;,</highlight></codeline>
<codeline><highlight class="normal">journal<sp/>=<sp/>{Journal<sp/>of<sp/>Parallel<sp/>and<sp/>Distributed<sp/>Computing},</highlight></codeline>
<codeline><highlight class="normal">pages<sp/>=<sp/>{86-104},</highlight></codeline>
<codeline><highlight class="normal">volume<sp/>=<sp/>{157},</highlight></codeline>
<codeline><highlight class="normal">year<sp/>=<sp/>{2021},</highlight></codeline>
<codeline><highlight class="normal">author<sp/>=<sp/>{Daniel<sp/>J.<sp/>Dunning<sp/>and<sp/>Nathaniel<sp/>R.<sp/>Morgan<sp/>and<sp/>Jacob<sp/>L.<sp/>Moore<sp/>and<sp/>Eappen<sp/>Nelluvelil<sp/>and<sp/>Tanya<sp/>V.<sp/>Tafolla<sp/>and<sp/>Robert<sp/>W.<sp/>Robey},</highlight></codeline>
<codeline><highlight class="normal">keywords<sp/>=<sp/>{Performance,<sp/>Portability,<sp/>Productivity,<sp/>Memory<sp/>Efficiency,<sp/>GPUs,<sp/>dense<sp/>and<sp/>sparse<sp/>storage}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
    </programlisting>
    <location file="/Users/calvinroth/paraNotes/MATAR/README.md"/>
  </compounddef>
</doxygen>
