<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1is__space" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::is_space</compoundname>
    <innerclass refid="struct_kokkos_1_1is__space_1_1dev" prot="private">Kokkos::is_space::dev</innerclass>
    <innerclass refid="struct_kokkos_1_1is__space_1_1dev_3_01_u_00_01typename_01std_1_1conditional_3_01true_00_01void_0f9e186d8af7f5a3abd56ef669471c22b" prot="private">Kokkos::is_space::dev&lt; U, typename std::conditional&lt; true, void, typename U::device_type &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1is__space_1_1exe" prot="private">Kokkos::is_space::exe</innerclass>
    <innerclass refid="struct_kokkos_1_1is__space_1_1exe_3_01_u_00_01typename_01std_1_1conditional_3_01true_00_01void_0e792418ec150792ba61b902b2a5d34df" prot="private">Kokkos::is_space::exe&lt; U, typename std::conditional&lt; true, void, typename U::execution_space &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1is__space_1_1mem" prot="private">Kokkos::is_space::mem</innerclass>
    <innerclass refid="struct_kokkos_1_1is__space_1_1mem_3_01_u_00_01typename_01std_1_1conditional_3_01true_00_01void_0ff9ca230242319737988b2fd4f19af4c" prot="private">Kokkos::is_space::mem&lt; U, typename std::conditional&lt; true, void, typename U::memory_space &gt;::type &gt;</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="struct_kokkos_1_1is__space_1a92c9192c7d2888f2d302686ab76bdc25" prot="private" static="no">
        <type>typename <ref refid="struct_kokkos_1_1is__space" kindref="compound">is_space</ref>&lt; T &gt;::template exe&lt; typename std::remove_cv&lt; T &gt;::type &gt;</type>
        <definition>using Kokkos::is_space&lt; T &gt;::is_exe =  typename is_space&lt;T&gt;::template exe&lt;typename std::remove_cv&lt;T&gt;::type&gt;</definition>
        <argsstring></argsstring>
        <name>is_exe</name>
        <qualifiedname>Kokkos::is_space::is_exe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="318" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1is__space_1a740e64c3485b2b707d96da3050e48234" prot="private" static="no">
        <type>typename <ref refid="struct_kokkos_1_1is__space" kindref="compound">is_space</ref>&lt; T &gt;::template mem&lt; typename std::remove_cv&lt; T &gt;::type &gt;</type>
        <definition>using Kokkos::is_space&lt; T &gt;::is_mem =  typename is_space&lt;T&gt;::template mem&lt;typename std::remove_cv&lt;T&gt;::type&gt;</definition>
        <argsstring></argsstring>
        <name>is_mem</name>
        <qualifiedname>Kokkos::is_space::is_mem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="320" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1is__space_1af0e4bba769049f93fc3c6e32a170af2b" prot="private" static="no">
        <type>typename <ref refid="struct_kokkos_1_1is__space" kindref="compound">is_space</ref>&lt; T &gt;::template dev&lt; typename std::remove_cv&lt; T &gt;::type &gt;</type>
        <definition>using Kokkos::is_space&lt; T &gt;::is_dev =  typename is_space&lt;T&gt;::template dev&lt;typename std::remove_cv&lt;T&gt;::type&gt;</definition>
        <argsstring></argsstring>
        <name>is_dev</name>
        <qualifiedname>Kokkos::is_space::is_dev</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="322" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1is__space_1a307a383ad0816593661a561a7ef799dd" prot="private" static="no">
        <type>std::conditional_t&lt; std::is_same&lt; memory_space, <ref refid="class_kokkos_1_1_host_space" kindref="compound">Kokkos::HostSpace</ref> &gt;::value, memory_space, <ref refid="class_kokkos_1_1_host_space" kindref="compound">Kokkos::HostSpace</ref> &gt;</type>
        <definition>using Kokkos::is_space&lt; T &gt;::do_not_use_host_memory_space =  std::conditional_t&lt; std::is_same&lt;memory_space, Kokkos::HostSpace&gt;::value , memory_space, Kokkos::HostSpace&gt;</definition>
        <argsstring></argsstring>
        <name>do_not_use_host_memory_space</name>
        <qualifiedname>Kokkos::is_space::do_not_use_host_memory_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="340" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1is__space_1a54b12c8c04a137503da89eee70100fd1" prot="private" static="no">
        <type>std::conditional_t&lt; false, Kokkos::DefaultHostExecutionSpace, execution_space &gt;</type>
        <definition>using Kokkos::is_space&lt; T &gt;::do_not_use_host_execution_space =  std::conditional_t&lt; false, Kokkos::DefaultHostExecutionSpace, execution_space&gt;</definition>
        <argsstring></argsstring>
        <name>do_not_use_host_execution_space</name>
        <qualifiedname>Kokkos::is_space::do_not_use_host_execution_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="357" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_kokkos_1_1is__space_1a40683810f0c1685fa50f4ff0d75f4670" prot="public" static="no">
        <type>typename is_exe::space</type>
        <definition>using Kokkos::is_space&lt; T &gt;::execution_space =  typename is_exe::space</definition>
        <argsstring></argsstring>
        <name>execution_space</name>
        <qualifiedname>Kokkos::is_space::execution_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="330" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1is__space_1ac97076433c6255ff59309985d4c8e23e" prot="public" static="no">
        <type>typename is_mem::space</type>
        <definition>using Kokkos::is_space&lt; T &gt;::memory_space =  typename is_mem::space</definition>
        <argsstring></argsstring>
        <name>memory_space</name>
        <qualifiedname>Kokkos::is_space::memory_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="331" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="331" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1is__space_1a6cfd552705d7a09f1dd340df5e4691ab" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Kokkos::is_space&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Kokkos::is_space::value</qualifiedname>
        <initializer>= is_exe::value || is_mem::value || is_dev::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="326" column="25" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="326" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kokkos_1_1is__space_1a51c97b5843c2f3e39a5657d3563a030d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Kokkos::is_space&lt; T &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>Kokkos::is_space::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="328" column="13" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="328" bodyend="328"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="280" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="280" bodyend="383"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1is__space_1a54b12c8c04a137503da89eee70100fd1" prot="private" virt="non-virtual"><scope>Kokkos::is_space</scope><name>do_not_use_host_execution_space</name></member>
      <member refid="struct_kokkos_1_1is__space_1a307a383ad0816593661a561a7ef799dd" prot="private" virt="non-virtual"><scope>Kokkos::is_space</scope><name>do_not_use_host_memory_space</name></member>
      <member refid="struct_kokkos_1_1is__space_1a40683810f0c1685fa50f4ff0d75f4670" prot="public" virt="non-virtual"><scope>Kokkos::is_space</scope><name>execution_space</name></member>
      <member refid="struct_kokkos_1_1is__space_1af0e4bba769049f93fc3c6e32a170af2b" prot="private" virt="non-virtual"><scope>Kokkos::is_space</scope><name>is_dev</name></member>
      <member refid="struct_kokkos_1_1is__space_1a92c9192c7d2888f2d302686ab76bdc25" prot="private" virt="non-virtual"><scope>Kokkos::is_space</scope><name>is_exe</name></member>
      <member refid="struct_kokkos_1_1is__space_1a740e64c3485b2b707d96da3050e48234" prot="private" virt="non-virtual"><scope>Kokkos::is_space</scope><name>is_mem</name></member>
      <member refid="struct_kokkos_1_1is__space_1ac97076433c6255ff59309985d4c8e23e" prot="public" virt="non-virtual"><scope>Kokkos::is_space</scope><name>memory_space</name></member>
      <member refid="struct_kokkos_1_1is__space_1a51c97b5843c2f3e39a5657d3563a030d" prot="public" virt="non-virtual"><scope>Kokkos::is_space</scope><name>operator bool</name></member>
      <member refid="struct_kokkos_1_1is__space_1a6cfd552705d7a09f1dd340df5e4691ab" prot="public" virt="non-virtual"><scope>Kokkos::is_space</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
