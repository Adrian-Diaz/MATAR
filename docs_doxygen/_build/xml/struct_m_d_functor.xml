<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_m_d_functor" kind="struct" language="C++" prot="public">
    <compoundname>MDFunctor</compoundname>
    <templateparamlist>
      <param>
        <type>class ViewType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_m_d_functor_1ac070e95764328a9cb861130b8dd43df8" prot="public" static="no">
        <type>long</type>
        <definition>using MDFunctor&lt; ViewType &gt;::value_type =  long</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>MDFunctor::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" line="65" column="3" bodyfile="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_m_d_functor_1aaaf33d51074f58535d598402b8055f35" prot="public" static="no" mutable="no">
        <type>ViewType</type>
        <definition>ViewType MDFunctor&lt; ViewType &gt;::v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <qualifiedname>MDFunctor::v</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" line="67" column="12" bodyfile="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_m_d_functor_1aa1f9cb5b90219d18cf31a0eb070ddd3e" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t MDFunctor&lt; ViewType &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <qualifiedname>MDFunctor::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" line="68" column="10" bodyfile="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_m_d_functor_1a1f990d2a6ff0c24354815bc0da0c18d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MDFunctor&lt; ViewType &gt;::MDFunctor</definition>
        <argsstring>(const ViewType &amp;v_, const size_t size_)</argsstring>
        <name>MDFunctor</name>
        <qualifiedname>MDFunctor::MDFunctor</qualifiedname>
        <param>
          <type>const ViewType &amp;</type>
          <declname>v_</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>size_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" line="70" column="3" bodyfile="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="struct_m_d_functor_1a924ad064001c38eccb9f74d346c69108" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void MDFunctor&lt; ViewType &gt;::operator()</definition>
        <argsstring>(const int i, const int j) const</argsstring>
        <name>operator()</name>
        <qualifiedname>MDFunctor::operator()</qualifiedname>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" line="74" column="8" bodyfile="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="struct_m_d_functor_1a621decc6ee6986e4043b867d0041b6e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void MDFunctor&lt; ViewType &gt;::operator()</definition>
        <argsstring>(const int i, const int j, const int k) const</argsstring>
        <name>operator()</name>
        <qualifiedname>MDFunctor::operator()</qualifiedname>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" line="80" column="8" bodyfile="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="struct_m_d_functor_1aae1834c74d2e5809509840eb762f54ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void MDFunctor&lt; ViewType &gt;::operator()</definition>
        <argsstring>(const int i, const int j, value_type &amp;incorrect_count) const</argsstring>
        <name>operator()</name>
        <qualifiedname>MDFunctor::operator()</qualifiedname>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>value_type &amp;</type>
          <declname>incorrect_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" line="86" column="8" bodyfile="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="struct_m_d_functor_1af7c11700b3538092f512f9c047ae8f3d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void MDFunctor&lt; ViewType &gt;::operator()</definition>
        <argsstring>(const int i, const int j, const int k, value_type &amp;incorrect_count) const</argsstring>
        <name>operator()</name>
        <qualifiedname>MDFunctor::operator()</qualifiedname>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>value_type &amp;</type>
          <declname>incorrect_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" line="94" column="8" bodyfile="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" bodystart="94" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" line="64" column="1" bodyfile="src/Kokkos/kokkos/example/tutorial/06_simple_mdrangepolicy/simple_mdrangepolicy.cpp" bodystart="64" bodyend="100"/>
    <listofallmembers>
      <member refid="struct_m_d_functor_1a1f990d2a6ff0c24354815bc0da0c18d4" prot="public" virt="non-virtual"><scope>MDFunctor</scope><name>MDFunctor</name></member>
      <member refid="struct_m_d_functor_1a924ad064001c38eccb9f74d346c69108" prot="public" virt="non-virtual"><scope>MDFunctor</scope><name>operator()</name></member>
      <member refid="struct_m_d_functor_1a621decc6ee6986e4043b867d0041b6e7" prot="public" virt="non-virtual"><scope>MDFunctor</scope><name>operator()</name></member>
      <member refid="struct_m_d_functor_1aae1834c74d2e5809509840eb762f54ae" prot="public" virt="non-virtual"><scope>MDFunctor</scope><name>operator()</name></member>
      <member refid="struct_m_d_functor_1af7c11700b3538092f512f9c047ae8f3d" prot="public" virt="non-virtual"><scope>MDFunctor</scope><name>operator()</name></member>
      <member refid="struct_m_d_functor_1aa1f9cb5b90219d18cf31a0eb070ddd3e" prot="public" virt="non-virtual"><scope>MDFunctor</scope><name>size</name></member>
      <member refid="struct_m_d_functor_1aaaf33d51074f58535d598402b8055f35" prot="public" virt="non-virtual"><scope>MDFunctor</scope><name>v</name></member>
      <member refid="struct_m_d_functor_1ac070e95764328a9cb861130b8dd43df8" prot="public" virt="non-virtual"><scope>MDFunctor</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
