<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_test_1_1_test_team_scan" kind="struct" language="C++" prot="public">
    <compoundname>Test::TestTeamScan</compoundname>
    <templateparamlist>
      <param>
        <type>class ExecutionSpace</type>
      </param>
      <param>
        <type>class DataType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_test_1_1_test_team_scan_1a0d9f8053b19f4c75b4078bf60b3e1979" prot="public" static="no">
        <type>ExecutionSpace</type>
        <definition>using Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::execution_space =  ExecutionSpace</definition>
        <argsstring></argsstring>
        <name>execution_space</name>
        <qualifiedname>Test::TestTeamScan::execution_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="78" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_test_team_scan_1ae526391ea75a1548b851d7dabe206596" prot="public" static="no">
        <type>DataType</type>
        <definition>using Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::value_type =  DataType</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>Test::TestTeamScan::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="79" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_test_team_scan_1a06b7f548947fa4d6f06f75a39a4178b7" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy</ref>&lt; execution_space &gt;</type>
        <definition>using Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::policy_type =  Kokkos::TeamPolicy&lt;execution_space&gt;</definition>
        <argsstring></argsstring>
        <name>policy_type</name>
        <qualifiedname>Test::TestTeamScan::policy_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="80" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_test_team_scan_1a6eda6ee9a82fa11d9d57fa371584c705" prot="public" static="no">
        <type>typename policy_type::member_type</type>
        <definition>using Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::member_type =  typename policy_type::member_type</definition>
        <argsstring></argsstring>
        <name>member_type</name>
        <qualifiedname>Test::TestTeamScan::member_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="81" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_test_team_scan_1a45e20f0e5649a58c02991d5d55e985c7" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; value_type **, execution_space &gt;</type>
        <definition>using Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::view_type =  Kokkos::View&lt;value_type**, execution_space&gt;</definition>
        <argsstring></argsstring>
        <name>view_type</name>
        <qualifiedname>Test::TestTeamScan::view_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="82" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test_1_1_test_team_scan_1a35125e385fa6f344f15f99b4ee6e0ce2" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">view_type</ref></type>
        <definition>view_type Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::a_d</definition>
        <argsstring></argsstring>
        <name>a_d</name>
        <qualifiedname>Test::TestTeamScan::a_d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="84" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_test_team_scan_1a6cc883308b276fa694086133fbf37282" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">view_type</ref></type>
        <definition>view_type Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::a_r</definition>
        <argsstring></argsstring>
        <name>a_r</name>
        <qualifiedname>Test::TestTeamScan::a_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="85" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_test_team_scan_1a1a538fb77bf2e60be3d558ca6caade9f" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::M</definition>
        <argsstring></argsstring>
        <name>M</name>
        <qualifiedname>Test::TestTeamScan::M</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="86" column="11" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_test_team_scan_1a9c7620718d2a8bff76edaa7837e94722" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <qualifiedname>Test::TestTeamScan::N</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="87" column="11" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_1_1_test_team_scan_1ab1600ab1c3505747782c475e3da84f6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION void</type>
        <definition>KOKKOS_FUNCTION void Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::operator()</definition>
        <argsstring>(const member_type &amp;team) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Test::TestTeamScan::operator()</qualifiedname>
        <param>
          <type>const member_type &amp;</type>
          <declname>team</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="90" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="90" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_test_team_scan_1a24e8dc46345c3b38eea9dc3e2a1658f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;::operator()</definition>
        <argsstring>(int32_t _M, int32_t _N)</argsstring>
        <name>operator()</name>
        <qualifiedname>Test::TestTeamScan::operator()</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>_M</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>_N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="107" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="107" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Test::TestTeamScan&lt; ExecutionSpace, DataType &gt;</label>
        <link refid="struct_test_1_1_test_team_scan"/>
        <childnode refid="2" relation="usage">
          <edgelabel>a_d</edgelabel>
          <edgelabel>a_r</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::View&lt; value_type **, execution_space &gt;</label>
        <link refid="class_kokkos_1_1_view"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Kokkos::ViewTraits&lt; value_type **, Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_view_traits"/>
      </node>
    </collaborationgraph>
    <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="77" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="77" bodyend="162"/>
    <listofallmembers>
      <member refid="struct_test_1_1_test_team_scan_1a35125e385fa6f344f15f99b4ee6e0ce2" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>a_d</name></member>
      <member refid="struct_test_1_1_test_team_scan_1a6cc883308b276fa694086133fbf37282" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>a_r</name></member>
      <member refid="struct_test_1_1_test_team_scan_1a0d9f8053b19f4c75b4078bf60b3e1979" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>execution_space</name></member>
      <member refid="struct_test_1_1_test_team_scan_1a1a538fb77bf2e60be3d558ca6caade9f" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>M</name></member>
      <member refid="struct_test_1_1_test_team_scan_1a6eda6ee9a82fa11d9d57fa371584c705" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>member_type</name></member>
      <member refid="struct_test_1_1_test_team_scan_1a9c7620718d2a8bff76edaa7837e94722" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>N</name></member>
      <member refid="struct_test_1_1_test_team_scan_1ab1600ab1c3505747782c475e3da84f6b" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>operator()</name></member>
      <member refid="struct_test_1_1_test_team_scan_1a24e8dc46345c3b38eea9dc3e2a1658f2" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>operator()</name></member>
      <member refid="struct_test_1_1_test_team_scan_1a06b7f548947fa4d6f06f75a39a4178b7" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>policy_type</name></member>
      <member refid="struct_test_1_1_test_team_scan_1ae526391ea75a1548b851d7dabe206596" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>value_type</name></member>
      <member refid="struct_test_1_1_test_team_scan_1a45e20f0e5649a58c02991d5d55e985c7" prot="public" virt="non-virtual"><scope>Test::TestTeamScan</scope><name>view_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
