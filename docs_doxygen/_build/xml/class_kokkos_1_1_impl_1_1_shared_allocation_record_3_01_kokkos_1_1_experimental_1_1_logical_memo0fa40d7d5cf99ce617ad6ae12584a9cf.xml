<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf" kind="class" language="C++" prot="public">
    <compoundname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</compoundname>
    <basecompoundref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4" prot="public" virt="non-virtual">Kokkos::Impl::SharedAllocationRecord&lt; void, void &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class BaseSpace</type>
      </param>
      <param>
        <type>class DefaultBaseExecutionSpace</type>
      </param>
      <param>
        <type>class Namer</type>
      </param>
      <param>
        <type>class SharesAccessSemanticsWithBase</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1ac6088154c0316fc40512c9d8ab9881fc" prot="private" static="no">
        <type><ref refid="class_kokkos_1_1_experimental_1_1_logical_memory_space" kindref="compound">Kokkos::Experimental::LogicalMemorySpace</ref>&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;</type>
        <definition>using Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::SpaceType =  Kokkos::Experimental::LogicalMemorySpace&lt;BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase&gt;</definition>
        <argsstring></argsstring>
        <name>SpaceType</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::SpaceType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="219" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1aa86e6cb871e35a9f17cf531beb617003" prot="private" static="no">
        <type><ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record" kindref="compound">SharedAllocationRecord</ref>&lt; void, void &gt;</type>
        <definition>using Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::RecordBase =  SharedAllocationRecord&lt;void, void&gt;</definition>
        <argsstring></argsstring>
        <name>RecordBase</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::RecordBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="223" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a1aefd58e0871ce0913debe67e9dd0f14" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_kokkos_1_1_experimental_1_1_logical_memory_space" kindref="compound">SpaceType</ref></type>
        <definition>const SpaceType Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::m_space</definition>
        <argsstring></argsstring>
        <name>m_space</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::m_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="238" column="19" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1aa001cd673a625afe0b8674dd092c3de5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::SharedAllocationRecord</definition>
        <argsstring>(const SharedAllocationRecord &amp;)=delete</argsstring>
        <name>SharedAllocationRecord</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::SharedAllocationRecord</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record" kindref="compound">SharedAllocationRecord</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="225" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a4d71542970971e14304ba80d41922584" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record" kindref="compound">SharedAllocationRecord</ref> &amp;</type>
        <definition>SharedAllocationRecord &amp; Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::operator=</definition>
        <argsstring>(const SharedAllocationRecord &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record" kindref="compound">SharedAllocationRecord</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="226" column="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1afe93499c25cefc129b6fa74d557292cb" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::deallocate</definition>
        <argsstring>(RecordBase *arg_rec)</argsstring>
        <name>deallocate</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::deallocate</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4" kindref="compound">RecordBase</ref> *</type>
          <declname>arg_rec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="228" column="15" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="228" bodyend="230"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a5fc65d88b3801a8598d4cba75aa78a19" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::~SharedAllocationRecord</definition>
        <argsstring>()</argsstring>
        <name>~SharedAllocationRecord</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::~SharedAllocationRecord</qualifiedname>
        <reimplements refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1af6281bbd7a8412f5e38b81ff17a9ccc1">~SharedAllocationRecord</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="241" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="241" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a5db5232ee7488b6a33f5292393489ff4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::SharedAllocationRecord</definition>
        <argsstring>()=default</argsstring>
        <name>SharedAllocationRecord</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::SharedAllocationRecord</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="248" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a84a48602b5b51123a6187733fbcf995c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::SharedAllocationRecord</definition>
        <argsstring>(const SpaceType &amp;arg_space, const std::string &amp;arg_label, const size_t arg_alloc_size, const RecordBase::function_type arg_dealloc=&amp;deallocate)</argsstring>
        <name>SharedAllocationRecord</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::SharedAllocationRecord</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_experimental_1_1_logical_memory_space" kindref="compound">SpaceType</ref> &amp;</type>
          <declname>arg_space</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>arg_label</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>arg_alloc_size</declname>
        </param>
        <param>
          <type>const RecordBase::function_type</type>
          <declname>arg_dealloc</declname>
          <defval>&amp;deallocate</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="250" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="250" bodyend="271"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a84b3d62052c81fa1588c01886213e8d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::get_label</definition>
        <argsstring>() const</argsstring>
        <name>get_label</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::get_label</qualifiedname>
        <reimplements refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1ada7a543fd356e81d18bd861bdf4ea10e">get_label</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="274" column="22" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="274" bodyend="276"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a5b72c9ee7f1d7c96394d9af12f1d50d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record" kindref="compound">SharedAllocationRecord</ref> *</type>
        <definition>static KOKKOS_INLINE_FUNCTION SharedAllocationRecord * Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::allocate</definition>
        <argsstring>(const SpaceType &amp;arg_space, const std::string &amp;arg_label, const size_t arg_alloc_size)</argsstring>
        <name>allocate</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::allocate</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_experimental_1_1_logical_memory_space" kindref="compound">SpaceType</ref> &amp;</type>
          <declname>arg_space</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>arg_label</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>arg_alloc_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="277" column="56" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="277" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a3e46dbf579571adec45b47481df9cd56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void * Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::allocate_tracked</definition>
        <argsstring>(const SpaceType &amp;arg_space, const std::string &amp;arg_label, const size_t arg_alloc_size)</argsstring>
        <name>allocate_tracked</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::allocate_tracked</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_experimental_1_1_logical_memory_space" kindref="compound">SpaceType</ref> &amp;</type>
          <declname>arg_space</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>arg_label</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>arg_alloc_size</declname>
        </param>
        <briefdescription>
<para>Allocate tracked memory in the space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="291" column="15" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="291" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1aa3386583e4d00f01b626e44e52476696" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void * Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::reallocate_tracked</definition>
        <argsstring>(void *const arg_alloc_ptr, const size_t arg_alloc_size)</argsstring>
        <name>reallocate_tracked</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::reallocate_tracked</qualifiedname>
        <param>
          <type>void *const</type>
          <declname>arg_alloc_ptr</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>arg_alloc_size</declname>
        </param>
        <briefdescription>
<para>Reallocate tracked memory in the space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="305" column="15" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="305" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a717d339c0dc6301ea709a3b9d10749a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::deallocate_tracked</definition>
        <argsstring>(void *const arg_alloc_ptr)</argsstring>
        <name>deallocate_tracked</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::deallocate_tracked</qualifiedname>
        <param>
          <type>void *const</type>
          <declname>arg_alloc_ptr</declname>
        </param>
        <briefdescription>
<para>Deallocate tracked memory in the space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="320" column="15" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="320" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a8d4e55f5776c4becbbfa86b75b7e1964" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record" kindref="compound">SharedAllocationRecord</ref> *</type>
        <definition>static SharedAllocationRecord * Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::get_record</definition>
        <argsstring>(void *alloc_ptr)</argsstring>
        <name>get_record</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::get_record</qualifiedname>
        <param>
          <type>void *</type>
          <declname>alloc_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="328" column="33" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="328" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a7600ff23dc7e84062b7bc812cdc632d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::print_records</definition>
        <argsstring>(std::ostream &amp;, const SpaceType &amp;, bool detail=false)</argsstring>
        <name>print_records</name>
        <qualifiedname>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;::print_records</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_kokkos_1_1_experimental_1_1_logical_memory_space" kindref="compound">SpaceType</ref> &amp;</type>
        </param>
        <param>
          <type>bool</type>
          <declname>detail</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="353" column="15" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="353" bodyend="359"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::Impl::SharedAllocationRecord&lt; void, void &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Kokkos::Impl::SharedAllocationHeader</label>
        <link refid="class_kokkos_1_1_impl_1_1_shared_allocation_header"/>
      </node>
      <node id="1">
        <label>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::Impl::SharedAllocationRecord&lt; void, void &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_alloc_ptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" line="214" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp" bodystart="217" bodyend="361"/>
    <listofallmembers>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a5b72c9ee7f1d7c96394d9af12f1d50d0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>allocate</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a3e46dbf579571adec45b47481df9cd56" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>allocate_tracked</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a65fd0175c623fd0cfdefd69092d5c366" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>data</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1afe93499c25cefc129b6fa74d557292cb" prot="private" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>deallocate</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a717d339c0dc6301ea709a3b9d10749a6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>deallocate_tracked</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a09aecc0922390da3eb3c8e0108691a55" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>decrement</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1ad9fde769dcfc28647cb52d2946ab4aa3" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>find</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1ae04dea3a53d36c0ae8e0007c44684f09" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>function_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a84b3d62052c81fa1588c01886213e8d0" prot="public" virt="virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>get_label</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a8d4e55f5776c4becbbfa86b75b7e1964" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>get_record</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1ac6efae5b8ae28d6320438b4b889628d1" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>head</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a16f998202738dc5ffb036586aab78069" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>increment</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a0889218e270802287646b01159860e7f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>is_sane</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1ae92edfd41420f525f21b622c0b121f68" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>m_alloc_ptr</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1ac01c913db288212a2b7756c1d18fda1b" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>m_alloc_size</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1ae30a86e0d3068203959a8e7a86f2b774" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>m_count</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1ad83e5f52fe115ec2511f9d1505b0ff35" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>m_dealloc</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a1aefd58e0871ce0913debe67e9dd0f14" prot="private" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>m_space</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a1b8fb5d10ad1277c3571a83c55ba9132" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>maximum_label_length</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a4d71542970971e14304ba80d41922584" prot="private" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>operator=</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a84a91a70287e686ff16fccfbcf4d0e94" prot="protected" virt="non-virtual" ambiguityscope="Kokkos::Impl::SharedAllocationRecord&lt; void, void &gt;::"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>operator=</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a5785c435c1fedb4dda3e9246f19d3b7e" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>print_host_accessible_records</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a7600ff23dc7e84062b7bc812cdc632d7" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>print_records</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1aa3386583e4d00f01b626e44e52476696" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>reallocate_tracked</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1aa86e6cb871e35a9f17cf531beb617003" prot="private" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>RecordBase</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1aa001cd673a625afe0b8674dd092c3de5" prot="private" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>SharedAllocationRecord</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a5db5232ee7488b6a33f5292393489ff4" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>SharedAllocationRecord</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a84a48602b5b51123a6187733fbcf995c" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>SharedAllocationRecord</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1ab94b7cd48b7fb8d650969e696993d09b" prot="protected" virt="non-virtual" ambiguityscope="Kokkos::Impl::SharedAllocationRecord&lt; void, void &gt;::"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>SharedAllocationRecord</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a2e68846debfc4712bd4cfb58a88b44b4" prot="protected" virt="non-virtual" ambiguityscope="Kokkos::Impl::SharedAllocationRecord&lt; void, void &gt;::"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>SharedAllocationRecord</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a10781ee7402ffbe0b131e1642c99cb04" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>size</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1ac6088154c0316fc40512c9d8ab9881fc" prot="private" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>SpaceType</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a36e6abc3798a0d6ed85b796f5c50500b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>tracking_disable</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a1127773c5af8f1eb74bce3e0c7d67df5" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>tracking_enable</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a35cf594c81cc4e424fa396b46cec3831" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>tracking_enabled</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4_1a4d73dd16dc41aa85a3904854fe670909" prot="public" virt="non-virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>use_count</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf_1a5fc65d88b3801a8598d4cba75aa78a19" prot="protected" virt="virtual"><scope>Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</scope><name>~SharedAllocationRecord</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
