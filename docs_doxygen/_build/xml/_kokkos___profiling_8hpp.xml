<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_kokkos___profiling_8hpp" kind="file" language="C++">
    <compoundname>Kokkos_Profiling.hpp</compoundname>
    <includes refid="_kokkos___core__fwd_8hpp" local="no">Kokkos_Core_fwd.hpp</includes>
    <includes refid="_kokkos___exec_policy_8hpp" local="no">Kokkos_ExecPolicy.hpp</includes>
    <includes refid="_kokkos___macros_8hpp" local="no">Kokkos_Macros.hpp</includes>
    <includes refid="_kokkos___tuners_8hpp" local="no">Kokkos_Tuners.hpp</includes>
    <includes refid="_kokkos___profiling___interface_8hpp" local="no">impl/Kokkos_Profiling_Interface.hpp</includes>
    <includes local="no">memory</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">mutex</includes>
    <includedby refid="_kokkos___logical_spaces_8hpp" local="no">src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp</includedby>
    <includedby refid="_kokkos___profiling___profile_section_8hpp" local="no">src/Kokkos/kokkos/core/src/Kokkos_Profiling_ProfileSection.hpp</includedby>
    <includedby refid="_kokkos___s_y_c_l___instance_8hpp" local="no">src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Instance.hpp</includedby>
    <includedby refid="_kokkos___s_y_c_l___space_8cpp" local="no">src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Space.cpp</includedby>
    <includedby refid="_kokkos___profiling_8cpp" local="no">src/Kokkos/kokkos/core/src/impl/Kokkos_Profiling.cpp</includedby>
    <includedby refid="_kokkos___tools_8hpp" local="no">src/Kokkos/kokkos/core/src/impl/Kokkos_Tools.hpp</includedby>
    <incdepgraph>
      <node id="38">
        <label>KokkosExp_MDRangePolicy.hpp</label>
        <link refid="_kokkos_exp___m_d_range_policy_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>Kokkos_Array.hpp</label>
        <link refid="_kokkos___array_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Kokkos_Concepts.hpp</label>
        <link refid="_kokkos___concepts_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos_Core_fwd.hpp</label>
        <link refid="_kokkos___core__fwd_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Kokkos_ExecPolicy.hpp</label>
        <link refid="_kokkos___exec_policy_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Kokkos_Layout.hpp</label>
        <link refid="_kokkos___layout_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Kokkos_Macros.hpp</label>
        <link refid="_kokkos___macros_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Kokkos_Rank.hpp</label>
        <link refid="_kokkos___rank_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Kokkos_Tuners.hpp</label>
        <link refid="_kokkos___tuners_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>impl/KokkosExp_Host_IterateTile.hpp</label>
        <link refid="_kokkos_exp___host___iterate_tile_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>impl/Kokkos_AnalyzePolicy.hpp</label>
        <link refid="_kokkos___analyze_policy_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>impl/Kokkos_BitOps.hpp</label>
        <link refid="_kokkos___bit_ops_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>impl/Kokkos_Error.hpp</label>
        <link refid="_kokkos___error_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>impl/Kokkos_GraphImpl_fwd.hpp</label>
        <link refid="_kokkos___graph_impl__fwd_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Profiling.hpp</label>
        <link refid="_kokkos___profiling_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>impl/Kokkos_Profiling_C_Interface.h</label>
        <link refid="_kokkos___profiling___c___interface_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>impl/Kokkos_Profiling_DeviceInfo.hpp</label>
        <link refid="_kokkos___profiling___device_info_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>impl/Kokkos_Profiling_Interface.hpp</label>
        <link refid="_kokkos___profiling___interface_8hpp_source"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>impl/Kokkos_Traits.hpp</label>
        <link refid="_kokkos___traits_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>impl/Kokkos_Utilities.hpp</label>
        <link refid="_kokkos___utilities_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>traits/Kokkos_ExecutionSpaceTrait.hpp</label>
        <link refid="_kokkos___execution_space_trait_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>traits/Kokkos_GraphKernelTrait.hpp</label>
        <link refid="_kokkos___graph_kernel_trait_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>traits/Kokkos_IndexTypeTrait.hpp</label>
        <link refid="_kokkos___index_type_trait_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>traits/Kokkos_IterationPatternTrait.hpp</label>
        <link refid="_kokkos___iteration_pattern_trait_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>traits/Kokkos_LaunchBoundsTrait.hpp</label>
        <link refid="_kokkos___launch_bounds_trait_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>traits/Kokkos_OccupancyControlTrait.hpp</label>
        <link refid="_kokkos___occupancy_control_trait_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>traits/Kokkos_PolicyTraitAdaptor.hpp</label>
        <link refid="_kokkos___policy_trait_adaptor_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>traits/Kokkos_ScheduleTrait.hpp</label>
        <link refid="_kokkos___schedule_trait_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>traits/Kokkos_Traits_fwd.hpp</label>
        <link refid="_kokkos___traits__fwd_8hpp_source"/>
      </node>
      <node id="34">
        <label>traits/Kokkos_WorkItemPropertyTrait.hpp</label>
        <link refid="_kokkos___work_item_property_trait_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>traits/Kokkos_WorkTagTrait.hpp</label>
        <link refid="_kokkos___work_tag_trait_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>KokkosCore_Config_FwdBackend.hpp</label>
      </node>
      <node id="5">
        <label>KokkosCore_Config_SetupBackend.hpp</label>
      </node>
      <node id="4">
        <label>KokkosCore_config.h</label>
      </node>
      <node id="40">
        <label>algorithm</label>
      </node>
      <node id="51">
        <label>array</label>
      </node>
      <node id="55">
        <label>cassert</label>
      </node>
      <node id="44">
        <label>cinttypes</label>
      </node>
      <node id="19">
        <label>climits</label>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="10">
        <label>cstdint</label>
      </node>
      <node id="45">
        <label>cstdlib</label>
      </node>
      <node id="12">
        <label>initializer_list</label>
      </node>
      <node id="8">
        <label>iosfwd</label>
      </node>
      <node id="41">
        <label>limits</label>
      </node>
      <node id="54">
        <label>map</label>
      </node>
      <node id="56">
        <label>memory</label>
      </node>
      <node id="58">
        <label>mutex</label>
      </node>
      <node id="50">
        <label>stdbool.h</label>
      </node>
      <node id="48">
        <label>stddef.h</label>
      </node>
      <node id="49">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="52">
        <label>tuple</label>
      </node>
      <node id="11">
        <label>type_traits</label>
      </node>
      <node id="36">
        <label>typeinfo</label>
      </node>
      <node id="57">
        <label>unordered_map</label>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="53">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>src/Kokkos/kokkos/algorithms/src/Kokkos_Random.hpp</label>
        <link refid="_kokkos___random_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/Kokkos/kokkos/algorithms/src/Kokkos_Sort.hpp</label>
        <link refid="_kokkos___sort_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp</label>
        <link refid="_test_random_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/Kokkos/kokkos/algorithms/unit_tests/TestRandomCommon.hpp</label>
        <link refid="_test_random_common_8hpp_source"/>
      </node>
      <node id="7">
        <label>src/Kokkos/kokkos/algorithms/unit_tests/TestSort.hpp</label>
        <link refid="_test_sort_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/Kokkos/kokkos/algorithms/unit_tests/TestSortCommon.hpp</label>
        <link refid="_test_sort_common_8hpp_source"/>
      </node>
      <node id="12">
        <label>src/Kokkos/kokkos/benchmarks/bytes_and_flops/bench.hpp</label>
        <link refid="bench_8hpp_source"/>
      </node>
      <node id="10">
        <label>src/Kokkos/kokkos/benchmarks/gather/gather.hpp</label>
        <link refid="gather_8hpp_source"/>
      </node>
      <node id="9">
        <label>src/Kokkos/kokkos/benchmarks/gather/gather_unroll.hpp</label>
        <link refid="gather__unroll_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/Kokkos/kokkos/benchmarks/policy_performance/policy_perf_test.hpp</label>
        <link refid="policy__perf__test_8hpp_source"/>
      </node>
      <node id="14">
        <label>src/Kokkos/kokkos/containers/performance_tests/TestDynRankView.hpp</label>
        <link refid="_test_dyn_rank_view_8hpp_source"/>
      </node>
      <node id="15">
        <label>src/Kokkos/kokkos/containers/performance_tests/TestGlobal2LocalIds.hpp</label>
        <link refid="_test_global2_local_ids_8hpp_source"/>
      </node>
      <node id="37">
        <label>src/Kokkos/kokkos/containers/performance_tests/TestScatterView.hpp</label>
        <link refid="performance__tests_2_test_scatter_view_8hpp_source"/>
      </node>
      <node id="16">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_Bitset.hpp</label>
        <link refid="_kokkos___bitset_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_DualView.hpp</label>
        <link refid="_kokkos___dual_view_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp</label>
        <link refid="_kokkos___dyn_rank_view_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_DynamicView.hpp</label>
        <link refid="_kokkos___dynamic_view_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_ErrorReporter.hpp</label>
        <link refid="_kokkos___error_reporter_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_OffsetView.hpp</label>
        <link refid="_kokkos___offset_view_8hpp_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_ScatterView.hpp</label>
        <link refid="_kokkos___scatter_view_8hpp"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_StaticCrsGraph.hpp</label>
        <link refid="_kokkos___static_crs_graph_8hpp_source"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_UnorderedMap.hpp</label>
        <link refid="_kokkos___unordered_map_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_Vector.hpp</label>
        <link refid="_kokkos___vector_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestBitset.hpp</label>
        <link refid="_test_bitset_8hpp_source"/>
      </node>
      <node id="25">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp</label>
        <link refid="_test_dual_view_8hpp_source"/>
      </node>
      <node id="27">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI.hpp</label>
        <link refid="_test_dyn_view_a_p_i_8hpp_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_generic.hpp</label>
        <link refid="_test_dyn_view_a_p_i__generic_8hpp_source"/>
      </node>
      <node id="29">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_rank12345.hpp</label>
        <link refid="_test_dyn_view_a_p_i__rank12345_8hpp_source"/>
      </node>
      <node id="30">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_rank67.hpp</label>
        <link refid="_test_dyn_view_a_p_i__rank67_8hpp_source"/>
      </node>
      <node id="33">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDynamicView.hpp</label>
        <link refid="_test_dynamic_view_8hpp_source"/>
      </node>
      <node id="22">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestErrorReporter.hpp</label>
        <link refid="_test_error_reporter_8hpp_source"/>
      </node>
      <node id="35">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp</label>
        <link refid="_test_offset_view_8hpp_source"/>
      </node>
      <node id="38">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestScatterView.hpp</label>
        <link refid="unit__tests_2_test_scatter_view_8hpp_source"/>
      </node>
      <node id="39">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestStaticCrsGraph.hpp</label>
        <link refid="_test_static_crs_graph_8hpp_source"/>
      </node>
      <node id="18">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp</label>
        <link refid="_test_unordered_map_8hpp_source"/>
      </node>
      <node id="24">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestVector.hpp</label>
        <link refid="_test_vector_8hpp_source"/>
      </node>
      <node id="31">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestViewCtorPropEmbeddedDim.hpp</label>
        <link refid="containers_2unit__tests_2_test_view_ctor_prop_embedded_dim_8hpp_source"/>
      </node>
      <node id="40">
        <label>src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp</label>
        <link refid="_perf_test___view_copy_8hpp_source"/>
      </node>
      <node id="41">
        <label>src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp</label>
        <link refid="_perf_test___view_fill_8hpp_source"/>
      </node>
      <node id="42">
        <label>src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp</label>
        <link refid="_perf_test___view_resize_8hpp_source"/>
      </node>
      <node id="180">
        <label>src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp</label>
        <link refid="_kokkos___cuda___instance_8hpp_source"/>
      </node>
      <node id="197">
        <label>src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Parallel_MDRange.hpp</label>
        <link refid="_kokkos___h_i_p___parallel___m_d_range_8hpp_source"/>
      </node>
      <node id="198">
        <label>src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Parallel_Range.hpp</label>
        <link refid="_kokkos___h_i_p___parallel___range_8hpp_source"/>
      </node>
      <node id="199">
        <label>src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Parallel_Team.hpp</label>
        <link refid="_kokkos___h_i_p___parallel___team_8hpp_source"/>
      </node>
      <node id="214">
        <label>src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_UniqueToken.hpp</label>
        <link refid="_kokkos___h_i_p___unique_token_8hpp_source"/>
      </node>
      <node id="193">
        <label>src/Kokkos/kokkos/core/src/KokkosExp_InterOp.hpp</label>
        <link refid="_kokkos_exp___inter_op_8hpp_source"/>
      </node>
      <node id="43">
        <label>src/Kokkos/kokkos/core/src/Kokkos_AcquireUniqueTokenImpl.hpp</label>
        <link refid="_kokkos___acquire_unique_token_impl_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Atomic.hpp</label>
        <link refid="_kokkos___atomic_8hpp"/>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Complex.hpp</label>
        <link refid="_kokkos___complex_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp</label>
        <link refid="_kokkos___copy_views_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Core.hpp</label>
        <link refid="_kokkos___core_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Crs.hpp</label>
        <link refid="_kokkos___crs_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Graph.hpp</label>
        <link refid="_kokkos___graph_8hpp_source"/>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>src/Kokkos/kokkos/core/src/Kokkos_GraphNode.hpp</label>
        <link refid="_kokkos___graph_node_8hpp_source"/>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>src/Kokkos/kokkos/core/src/Kokkos_HostSpace.hpp</label>
        <link refid="_kokkos___host_space_8hpp_source"/>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/Kokkos/kokkos/core/src/Kokkos_LogicalSpaces.hpp</label>
        <link refid="_kokkos___logical_spaces_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>src/Kokkos/kokkos/core/src/Kokkos_MathematicalSpecialFunctions.hpp</label>
        <link refid="_kokkos___mathematical_special_functions_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>src/Kokkos/kokkos/core/src/Kokkos_MemoryPool.hpp</label>
        <link refid="_kokkos___memory_pool_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Parallel.hpp</label>
        <link refid="_kokkos___parallel_8hpp"/>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Parallel_Reduce.hpp</label>
        <link refid="_kokkos___parallel___reduce_8hpp_source"/>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Profiling_ProfileSection.hpp</label>
        <link refid="_kokkos___profiling___profile_section_8hpp_source"/>
      </node>
      <node id="191">
        <label>src/Kokkos/kokkos/core/src/Kokkos_View.hpp</label>
        <link refid="_kokkos___view_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="195">
        <label>src/Kokkos/kokkos/core/src/Kokkos_WorkGraphPolicy.hpp</label>
        <link refid="_kokkos___work_graph_policy_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Exec.hpp</label>
        <link refid="_kokkos___open_m_p_target___exec_8hpp_source"/>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp</label>
        <link refid="_kokkos___open_m_p_target___instance_8hpp_source"/>
      </node>
      <node id="187">
        <label>src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp</label>
        <link refid="_kokkos___open_m_p_target___parallel_8hpp_source"/>
      </node>
      <node id="188">
        <label>src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp</label>
        <link refid="_kokkos___open_m_p_target___parallel___m_d_range_8hpp_source"/>
      </node>
      <node id="178">
        <label>src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Instance.hpp</label>
        <link refid="_kokkos___s_y_c_l___instance_8hpp_source"/>
      </node>
      <node id="201">
        <label>src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Parallel_Team.hpp</label>
        <link refid="_kokkos___s_y_c_l___parallel___team_8hpp_source"/>
      </node>
      <node id="215">
        <label>src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_UniqueToken.hpp</label>
        <link refid="_kokkos___s_y_c_l___unique_token_8hpp_source"/>
      </node>
      <node id="212">
        <label>src/Kokkos/kokkos/core/src/impl/KokkosExp_ViewMapping.hpp</label>
        <link refid="_kokkos_exp___view_mapping_8hpp_source"/>
      </node>
      <node id="189">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Compare_Exchange_Weak.hpp</label>
        <link refid="_kokkos___atomic___compare___exchange___weak_8hpp_source"/>
      </node>
      <node id="190">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_View.hpp</label>
        <link refid="_kokkos___atomic___view_8hpp_source"/>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp</label>
        <link refid="_kokkos___combined___reducer_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="213">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_ConcurrentBitset.hpp</label>
        <link refid="_kokkos___concurrent_bitset_8hpp_source"/>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
      </node>
      <node id="202">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Default_GraphNodeKernel.hpp</label>
        <link refid="_kokkos___default___graph_node_kernel_8hpp_source"/>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Default_GraphNode_Impl.hpp</label>
        <link refid="_kokkos___default___graph_node___impl_8hpp_source"/>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
      <node id="203">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Default_Graph_Impl.hpp</label>
        <link refid="_kokkos___default___graph___impl_8hpp_source"/>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="217">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_FixedBufferMemoryPool.hpp</label>
        <link refid="_kokkos___fixed_buffer_memory_pool_8hpp_source"/>
      </node>
      <node id="218">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp</label>
        <link refid="_kokkos___host_barrier_8hpp_source"/>
        <childnode refid="219" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_HostSharedPtr.hpp</label>
        <link refid="_kokkos___host_shared_ptr_8hpp_source"/>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_HostThreadTeam.hpp</label>
        <link refid="_kokkos___host_thread_team_8hpp_source"/>
      </node>
      <node id="209">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_PhysicalLayout.hpp</label>
        <link refid="_kokkos___physical_layout_8hpp_source"/>
      </node>
      <node id="1">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Profiling.hpp</label>
        <link refid="_kokkos___profiling_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="223">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_SharedAlloc_timpl.hpp</label>
        <link refid="_kokkos___shared_alloc__timpl_8hpp_source"/>
      </node>
      <node id="222">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp</label>
        <link refid="_kokkos___spinwait_8hpp_source"/>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Tools.hpp</label>
        <link refid="_kokkos___tools_8hpp_source"/>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
      </node>
      <node id="210">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp</label>
        <link refid="_kokkos___view_layout_tiled_8hpp_source"/>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp</label>
        <link refid="_kokkos___view_mapping_8hpp_source"/>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations.hpp</label>
        <link refid="_test_atomic_operations_8hpp_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_complexdouble.hpp</label>
        <link refid="_test_atomic_operations__complexdouble_8hpp_source"/>
      </node>
      <node id="47">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_complexfloat.hpp</label>
        <link refid="_test_atomic_operations__complexfloat_8hpp_source"/>
      </node>
      <node id="48">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_double.hpp</label>
        <link refid="_test_atomic_operations__double_8hpp_source"/>
      </node>
      <node id="49">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_float.hpp</label>
        <link refid="_test_atomic_operations__float_8hpp_source"/>
      </node>
      <node id="50">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_int.hpp</label>
        <link refid="_test_atomic_operations__int_8hpp_source"/>
      </node>
      <node id="51">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_longint.hpp</label>
        <link refid="_test_atomic_operations__longint_8hpp_source"/>
      </node>
      <node id="52">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_longlongint.hpp</label>
        <link refid="_test_atomic_operations__longlongint_8hpp_source"/>
      </node>
      <node id="53">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_unsignedint.hpp</label>
        <link refid="_test_atomic_operations__unsignedint_8hpp_source"/>
      </node>
      <node id="54">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_unsignedlongint.hpp</label>
        <link refid="_test_atomic_operations__unsignedlongint_8hpp_source"/>
      </node>
      <node id="56">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicViews.hpp</label>
        <link refid="_test_atomic_views_8hpp_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp</label>
        <link refid="_test_atomics_8hpp_source"/>
      </node>
      <node id="58">
        <label>src/Kokkos/kokkos/core/unit_test/TestBlockSizeDeduction.hpp</label>
        <link refid="_test_block_size_deduction_8hpp_source"/>
      </node>
      <node id="59">
        <label>src/Kokkos/kokkos/core/unit_test/TestCXX11.hpp</label>
        <link refid="_test_c_x_x11_8hpp_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>src/Kokkos/kokkos/core/unit_test/TestCXX11Deduction.hpp</label>
        <link refid="_test_c_x_x11_deduction_8hpp_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>src/Kokkos/kokkos/core/unit_test/TestCompilerMacros.hpp</label>
        <link refid="_test_compiler_macros_8hpp_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>src/Kokkos/kokkos/core/unit_test/TestComplex.hpp</label>
        <link refid="_test_complex_8hpp_source"/>
      </node>
      <node id="66">
        <label>src/Kokkos/kokkos/core/unit_test/TestConcepts.hpp</label>
        <link refid="_test_concepts_8hpp_source"/>
      </node>
      <node id="216">
        <label>src/Kokkos/kokkos/core/unit_test/TestConcurrentBitset.hpp</label>
        <link refid="_test_concurrent_bitset_8hpp_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>src/Kokkos/kokkos/core/unit_test/TestCrs.hpp</label>
        <link refid="_test_crs_8hpp_source"/>
      </node>
      <node id="68">
        <label>src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp</label>
        <link refid="_test_deep_copy_alignment_8hpp_source"/>
      </node>
      <node id="69">
        <label>src/Kokkos/kokkos/core/unit_test/TestDefaultDeviceTypeInit.hpp</label>
        <link refid="_test_default_device_type_init_8hpp_source"/>
      </node>
      <node id="70">
        <label>src/Kokkos/kokkos/core/unit_test/TestExecSpacePartitioning.hpp</label>
        <link refid="_test_exec_space_partitioning_8hpp_source"/>
      </node>
      <node id="71">
        <label>src/Kokkos/kokkos/core/unit_test/TestExecutionSpace.hpp</label>
        <link refid="_test_execution_space_8hpp_source"/>
      </node>
      <node id="72">
        <label>src/Kokkos/kokkos/core/unit_test/TestFunctorAnalysis.hpp</label>
        <link refid="_test_functor_analysis_8hpp_source"/>
      </node>
      <node id="73">
        <label>src/Kokkos/kokkos/core/unit_test/TestGraph.hpp</label>
        <link refid="_test_graph_8hpp_source"/>
      </node>
      <node id="221">
        <label>src/Kokkos/kokkos/core/unit_test/TestHostSharedPtr.hpp</label>
        <link refid="_test_host_shared_ptr_8hpp_source"/>
      </node>
      <node id="74">
        <label>src/Kokkos/kokkos/core/unit_test/TestHostSharedPtrAccessOnDevice.hpp</label>
        <link refid="_test_host_shared_ptr_access_on_device_8hpp_source"/>
      </node>
      <node id="64">
        <label>src/Kokkos/kokkos/core/unit_test/TestInit.hpp</label>
        <link refid="_test_init_8hpp_source"/>
      </node>
      <node id="75">
        <label>src/Kokkos/kokkos/core/unit_test/TestIrregularLayout.hpp</label>
        <link refid="_test_irregular_layout_8hpp_source"/>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp</label>
        <link refid="_test_local_deep_copy_8hpp_source"/>
      </node>
      <node id="78">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange.hpp</label>
        <link refid="_test_m_d_range_8hpp_source"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_a.hpp</label>
        <link refid="_test_m_d_range__a_8hpp_source"/>
      </node>
      <node id="80">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_b.hpp</label>
        <link refid="_test_m_d_range__b_8hpp_source"/>
      </node>
      <node id="81">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_c.hpp</label>
        <link refid="_test_m_d_range__c_8hpp_source"/>
      </node>
      <node id="82">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_d.hpp</label>
        <link refid="_test_m_d_range__d_8hpp_source"/>
      </node>
      <node id="83">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_e.hpp</label>
        <link refid="_test_m_d_range__e_8hpp_source"/>
      </node>
      <node id="84">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_f.hpp</label>
        <link refid="_test_m_d_range__f_8hpp_source"/>
      </node>
      <node id="85">
        <label>src/Kokkos/kokkos/core/unit_test/TestMathematicalFunctions.hpp</label>
        <link refid="_test_mathematical_functions_8hpp_source"/>
      </node>
      <node id="86">
        <label>src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp</label>
        <link refid="_test_mathematical_special_functions_8hpp_source"/>
      </node>
      <node id="87">
        <label>src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp</label>
        <link refid="_test_non_trivial_scalar_types_8hpp_source"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>src/Kokkos/kokkos/core/unit_test/TestNumericTraits.hpp</label>
        <link refid="_test_numeric_traits_8hpp_source"/>
      </node>
      <node id="60">
        <label>src/Kokkos/kokkos/core/unit_test/TestOther.hpp</label>
        <link refid="_test_other_8hpp_source"/>
      </node>
      <node id="93">
        <label>src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp</label>
        <link refid="_test_policy_construction_8hpp_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>src/Kokkos/kokkos/core/unit_test/TestRange.hpp</label>
        <link refid="_test_range_8hpp_source"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>src/Kokkos/kokkos/core/unit_test/TestRangePolicy.hpp</label>
        <link refid="_test_range_policy_8hpp_source"/>
      </node>
      <node id="96">
        <label>src/Kokkos/kokkos/core/unit_test/TestRangePolicyRequire.hpp</label>
        <link refid="_test_range_policy_require_8hpp_source"/>
      </node>
      <node id="97">
        <label>src/Kokkos/kokkos/core/unit_test/TestReduce.hpp</label>
        <link refid="_test_reduce_8hpp_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>src/Kokkos/kokkos/core/unit_test/TestReduceCombinatorical.hpp</label>
        <link refid="_test_reduce_combinatorical_8hpp_source"/>
      </node>
      <node id="99">
        <label>src/Kokkos/kokkos/core/unit_test/TestReducers.hpp</label>
        <link refid="_test_reducers_8hpp_source"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>src/Kokkos/kokkos/core/unit_test/TestReducers_a.hpp</label>
        <link refid="_test_reducers__a_8hpp_source"/>
      </node>
      <node id="101">
        <label>src/Kokkos/kokkos/core/unit_test/TestReducers_b.hpp</label>
        <link refid="_test_reducers__b_8hpp_source"/>
      </node>
      <node id="102">
        <label>src/Kokkos/kokkos/core/unit_test/TestReducers_c.hpp</label>
        <link refid="_test_reducers__c_8hpp_source"/>
      </node>
      <node id="88">
        <label>src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp</label>
        <link refid="_test_reducers__d_8hpp_source"/>
      </node>
      <node id="62">
        <label>src/Kokkos/kokkos/core/unit_test/TestReductions.hpp</label>
        <link refid="_test_reductions_8hpp_source"/>
      </node>
      <node id="103">
        <label>src/Kokkos/kokkos/core/unit_test/TestReductions_DeviceView.hpp</label>
        <link refid="_test_reductions___device_view_8hpp_source"/>
      </node>
      <node id="104">
        <label>src/Kokkos/kokkos/core/unit_test/TestResize.hpp</label>
        <link refid="_test_resize_8hpp_source"/>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>src/Kokkos/kokkos/core/unit_test/TestScan.hpp</label>
        <link refid="_test_scan_8hpp_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>src/Kokkos/kokkos/core/unit_test/TestSharedAlloc.hpp</label>
        <link refid="_test_shared_alloc_8hpp_source"/>
      </node>
      <node id="108">
        <label>src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp</label>
        <link refid="_test_stack_trace_8hpp_source"/>
      </node>
      <node id="135">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp</label>
        <link refid="_test_sub_view__a_8hpp_source"/>
      </node>
      <node id="136">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_b.hpp</label>
        <link refid="_test_sub_view__b_8hpp_source"/>
      </node>
      <node id="137">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c01.hpp</label>
        <link refid="_test_sub_view__c01_8hpp_source"/>
      </node>
      <node id="138">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c02.hpp</label>
        <link refid="_test_sub_view__c02_8hpp_source"/>
      </node>
      <node id="139">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c03.hpp</label>
        <link refid="_test_sub_view__c03_8hpp_source"/>
      </node>
      <node id="140">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c04.hpp</label>
        <link refid="_test_sub_view__c04_8hpp_source"/>
      </node>
      <node id="141">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c05.hpp</label>
        <link refid="_test_sub_view__c05_8hpp_source"/>
      </node>
      <node id="142">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c06.hpp</label>
        <link refid="_test_sub_view__c06_8hpp_source"/>
      </node>
      <node id="143">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c07.hpp</label>
        <link refid="_test_sub_view__c07_8hpp_source"/>
      </node>
      <node id="144">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c08.hpp</label>
        <link refid="_test_sub_view__c08_8hpp_source"/>
      </node>
      <node id="145">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c09.hpp</label>
        <link refid="_test_sub_view__c09_8hpp_source"/>
      </node>
      <node id="146">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c10.hpp</label>
        <link refid="_test_sub_view__c10_8hpp_source"/>
      </node>
      <node id="147">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c11.hpp</label>
        <link refid="_test_sub_view__c11_8hpp_source"/>
      </node>
      <node id="148">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c12.hpp</label>
        <link refid="_test_sub_view__c12_8hpp_source"/>
      </node>
      <node id="149">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c13.hpp</label>
        <link refid="_test_sub_view__c13_8hpp_source"/>
      </node>
      <node id="150">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c14.hpp</label>
        <link refid="_test_sub_view__c14_8hpp_source"/>
      </node>
      <node id="109">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeam.hpp</label>
        <link refid="_test_team_8hpp_source"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp</label>
        <link refid="_test_team_basic_8hpp_source"/>
      </node>
      <node id="110">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamReductionScan.hpp</label>
        <link refid="_test_team_reduction_scan_8hpp_source"/>
      </node>
      <node id="112">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp</label>
        <link refid="_test_team_scan_8hpp_source"/>
      </node>
      <node id="111">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamScratch.hpp</label>
        <link refid="_test_team_scratch_8hpp_source"/>
      </node>
      <node id="113">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp</label>
        <link refid="_test_team_team_size_8hpp_source"/>
      </node>
      <node id="89">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamVector.hpp</label>
        <link refid="_test_team_vector_8hpp_source"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamVectorRange.hpp</label>
        <link refid="_test_team_vector_range_8hpp_source"/>
      </node>
      <node id="115">
        <label>src/Kokkos/kokkos/core/unit_test/TestTemplateMetaFunctions.hpp</label>
        <link refid="_test_template_meta_functions_8hpp_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>src/Kokkos/kokkos/core/unit_test/TestUniqueToken.hpp</label>
        <link refid="_test_unique_token_8hpp_source"/>
      </node>
      <node id="117">
        <label>src/Kokkos/kokkos/core/unit_test/TestUtilities.hpp</label>
        <link refid="_test_utilities_8hpp_source"/>
      </node>
      <node id="118">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI.hpp</label>
        <link refid="_test_view_a_p_i_8hpp_source"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI_a.hpp</label>
        <link refid="_test_view_a_p_i__a_8hpp_source"/>
      </node>
      <node id="120">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI_b.hpp</label>
        <link refid="_test_view_a_p_i__b_8hpp_source"/>
      </node>
      <node id="121">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI_c.hpp</label>
        <link refid="_test_view_a_p_i__c_8hpp_source"/>
      </node>
      <node id="122">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI_d.hpp</label>
        <link refid="_test_view_a_p_i__d_8hpp_source"/>
      </node>
      <node id="123">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp</label>
        <link refid="_test_view_a_p_i__e_8hpp_source"/>
      </node>
      <node id="124">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewCopy_a.hpp</label>
        <link refid="_test_view_copy__a_8hpp_source"/>
      </node>
      <node id="125">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewCopy_b.hpp</label>
        <link refid="_test_view_copy__b_8hpp_source"/>
      </node>
      <node id="126">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewCtorPropEmbeddedDim.hpp</label>
        <link refid="core_2unit__test_2_test_view_ctor_prop_embedded_dim_8hpp_source"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewIsAssignable.hpp</label>
        <link refid="_test_view_is_assignable_8hpp_source"/>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewLayoutStrideAssignment.hpp</label>
        <link refid="_test_view_layout_stride_assignment_8hpp_source"/>
      </node>
      <node id="128">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewLayoutTiled.hpp</label>
        <link refid="_test_view_layout_tiled_8hpp_source"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp</label>
        <link refid="_test_view_mapping__a_8hpp_source"/>
      </node>
      <node id="130">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp</label>
        <link refid="_test_view_mapping__b_8hpp_source"/>
      </node>
      <node id="131">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewMapping_subview.hpp</label>
        <link refid="_test_view_mapping__subview_8hpp_source"/>
      </node>
      <node id="132">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewOfClass.hpp</label>
        <link refid="_test_view_of_class_8hpp_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewResize.hpp</label>
        <link refid="_test_view_resize_8hpp_source"/>
      </node>
      <node id="133">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewSpaceAssign.hpp</label>
        <link refid="_test_view_space_assign_8hpp_source"/>
      </node>
      <node id="134">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewSubview.hpp</label>
        <link refid="_test_view_subview_8hpp_source"/>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>src/Kokkos/kokkos/core/unit_test/TestView_64bit.hpp</label>
        <link refid="_test_view__64bit_8hpp_source"/>
      </node>
      <node id="152">
        <label>src/Kokkos/kokkos/core/unit_test/TestWorkGraph.hpp</label>
        <link refid="_test_work_graph_8hpp_source"/>
      </node>
      <node id="153">
        <label>src/Kokkos/kokkos/core/unit_test/Test_InterOp_Streams.hpp</label>
        <link refid="_test___inter_op___streams_8hpp_source"/>
      </node>
      <node id="154">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test01_execspace.hpp</label>
        <link refid="_test01__execspace_8hpp_source"/>
      </node>
      <node id="155">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test02_atomic_host.hpp</label>
        <link refid="_test02__atomic__host_8hpp_source"/>
      </node>
      <node id="156">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test03a_MemorySpace_malloc.hpp</label>
        <link refid="_test03a___memory_space__malloc_8hpp_source"/>
      </node>
      <node id="157">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test03b_MemorySpace_free.hpp</label>
        <link refid="_test03b___memory_space__free_8hpp_source"/>
      </node>
      <node id="158">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp</label>
        <link refid="_test04___parallel_for___range_policy_8hpp_source"/>
      </node>
      <node id="159">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test05_ParallelReduce_RangePolicy.hpp</label>
        <link refid="_test05___parallel_reduce___range_policy_8hpp_source"/>
      </node>
      <node id="160">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp</label>
        <link refid="_test06___parallel_for___m_d_range_policy_8hpp_source"/>
      </node>
      <node id="161">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test08_deep_copy.hpp</label>
        <link refid="_test08__deep__copy_8hpp_source"/>
      </node>
      <node id="162">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test10_HierarchicalBasics.hpp</label>
        <link refid="_test10___hierarchical_basics_8hpp_source"/>
      </node>
      <node id="163">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test11a_ParallelFor_TeamThreadRange.hpp</label>
        <link refid="_test11a___parallel_for___team_thread_range_8hpp_source"/>
      </node>
      <node id="164">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test11b_ParallelFor_TeamVectorRange.hpp</label>
        <link refid="_test11b___parallel_for___team_vector_range_8hpp_source"/>
      </node>
      <node id="165">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test11c_ParallelFor_ThreadVectorRange.hpp</label>
        <link refid="_test11c___parallel_for___thread_vector_range_8hpp_source"/>
      </node>
      <node id="166">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test12a_ThreadScratch.hpp</label>
        <link refid="_test12a___thread_scratch_8hpp_source"/>
      </node>
      <node id="167">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test12b_TeamScratch.hpp</label>
        <link refid="_test12b___team_scratch_8hpp_source"/>
      </node>
      <node id="168">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test13a_ParallelRed_TeamThreadRange.hpp</label>
        <link refid="_test13a___parallel_red___team_thread_range_8hpp_source"/>
      </node>
      <node id="169">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test13b_ParallelRed_TeamVectorRange.hpp</label>
        <link refid="_test13b___parallel_red___team_vector_range_8hpp_source"/>
      </node>
      <node id="170">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test13c_ParallelRed_ThreadVectorRange.hpp</label>
        <link refid="_test13c___parallel_red___thread_vector_range_8hpp_source"/>
      </node>
      <node id="171">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test14_MDRangeReduce.hpp</label>
        <link refid="_test14___m_d_range_reduce_8hpp_source"/>
      </node>
      <node id="172">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test16_ParallelScan.hpp</label>
        <link refid="_test16___parallel_scan_8hpp_source"/>
      </node>
      <node id="173">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test17_CompleteAtomic.hpp</label>
        <link refid="_test17___complete_atomic_8hpp_source"/>
      </node>
      <node id="55">
        <label>src/Kokkos/kokkos/core/unit_test/openmp/TestOpenMP.hpp</label>
        <link refid="_test_open_m_p_8hpp_source"/>
      </node>
      <node id="91">
        <label>src/Kokkos/kokkos/core/unit_test/openmptarget/TestOpenMPTarget.hpp</label>
        <link refid="_test_open_m_p_target_8hpp_source"/>
      </node>
      <node id="174">
        <label>src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp</label>
        <link refid="_test_event_correctness_8hpp_source"/>
      </node>
      <node id="175">
        <label>src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp</label>
        <link refid="_test_logical_spaces_8hpp_source"/>
      </node>
      <node id="176">
        <label>src/Kokkos/kokkos/example/virtual_functions/classes.hpp</label>
        <link refid="classes_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_kokkos_1_1_tools_1_1_experimental_1_1_impl_1_1_direct_fence_i_d_handle" prot="public">Kokkos::Tools::Experimental::Impl::DirectFenceIDHandle</innerclass>
    <innerclass refid="struct_kokkos_1_1_tools_1_1_impl_1_1_impl_1_1_simple_team_size_calculator" prot="public">Kokkos::Tools::Impl::Impl::SimpleTeamSizeCalculator</innerclass>
    <innerclass refid="struct_kokkos_1_1_tools_1_1_impl_1_1_impl_1_1_complex_reducer_size_calculator" prot="public">Kokkos::Tools::Impl::Impl::ComplexReducerSizeCalculator</innerclass>
    <innerclass refid="struct_kokkos_1_1_tools_1_1_impl_1_1_reduction_switcher" prot="public">Kokkos::Tools::Impl::ReductionSwitcher</innerclass>
    <innerclass refid="struct_kokkos_1_1_tools_1_1_impl_1_1_reduction_switcher_3_01_kokkos_1_1_invalid_type_01_4" prot="public">Kokkos::Tools::Impl::ReductionSwitcher&lt; Kokkos::InvalidType &gt;</innerclass>
    <innernamespace refid="namespace_kokkos">Kokkos</innernamespace>
    <innernamespace refid="namespace_kokkos_1_1_tools">Kokkos::Tools</innernamespace>
    <innernamespace refid="namespace_kokkos_1_1_tools_1_1_experimental">Kokkos::Tools::Experimental</innernamespace>
    <innernamespace refid="namespace_kokkos_1_1_tools_1_1_experimental_1_1_impl">Kokkos::Tools::Experimental::Impl</innernamespace>
    <innernamespace refid="namespace_kokkos_1_1_tools_1_1_impl">Kokkos::Tools::Impl</innernamespace>
    <innernamespace refid="namespace_kokkos_1_1_tools_1_1_impl_1_1_impl">Kokkos::Tools::Impl::Impl</innernamespace>
    <innernamespace refid="namespace_kokkos_1_1_profiling">Kokkos::Profiling</innernamespace>
    <innernamespace refid="namespace_kokkos_1_1_profiling_1_1_experimental">Kokkos::Profiling::Experimental</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos<sp/>v.<sp/>3.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(2020)<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC<sp/>(NTESS).</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>the<sp/>U.S.<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>met:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Corporation<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>NTESS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>NTESS<sp/>OR<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>Christian<sp/>R.<sp/>Trott<sp/>(crtrott@sandia.gov)</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//<sp/>************************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>KOKKOS_IMPL_KOKKOS_PROFILING_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOKKOS_IMPL_KOKKOS_PROFILING_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Kokkos_Core_fwd.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Kokkos_ExecPolicy.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Kokkos_Macros.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Kokkos_Tuners.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;impl/Kokkos_Profiling_Interface.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Kokkos<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tune_internals()<sp/>noexcept;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">namespace<sp/>Tools<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>profileLibraryLoaded();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginParallelFor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kernelPrefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>devID,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t*<sp/>kernelID);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endParallelFor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>kernelID);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginParallelScan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kernelPrefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>devID,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t*<sp/>kernelID);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endParallelScan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>kernelID);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginParallelReduce(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kernelPrefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>devID,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t*<sp/>kernelID);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endParallelReduce(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>kernelID);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pushRegion(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kName);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>popRegion();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createProfileSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sectionName,<sp/>uint32_t*<sp/>secID);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>secID);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stopSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>secID);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyProfileSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>secID);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>markEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>evName);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>allocateData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_space_handle" kindref="compound">SpaceHandle</ref><sp/>space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>label,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>size);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deallocateData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_space_handle" kindref="compound">SpaceHandle</ref><sp/>space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>label,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>size);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginDeepCopy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_space_handle" kindref="compound">SpaceHandle</ref><sp/>dst_space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>dst_label,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_space_handle" kindref="compound">SpaceHandle</ref><sp/>src_space,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>src_label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src_ptr,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>size);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endDeepCopy();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginFence(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>deviceId,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t*<sp/>handle);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endFence(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>handle);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>syncDualView(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>to_device);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>modifyDualView(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_device);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>declareMetadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>printHelp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parseArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="struct_kokkos___profiling___space_handle" kindref="compound">Kokkos_Profiling_SpaceHandle</ref><sp/>make_space_handle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>space_name);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Experimental<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="142" refid="struct_kokkos_1_1_tools_1_1_experimental_1_1_impl_1_1_direct_fence_i_d_handle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_tools_1_1_experimental_1_1_impl_1_1_direct_fence_i_d_handle" kindref="compound">DirectFenceIDHandle</ref><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>uint32_t<sp/>value;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Space&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">uint32_t<sp/>idForInstance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uintptr_t<sp/>instance)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>instance_mutex;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(instance_mutex);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">map_type<sp/>=<sp/>std::map&lt;uintptr_t,<sp/>uint32_t&gt;;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;map_type&gt;<sp/>map;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>map<sp/>=<sp/>std::make_shared&lt;map_type&gt;(map_type());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>offset<sp/>=</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Tools::Experimental::NumReservedDeviceIDs;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>find<sp/>=<sp/>map-&gt;find(instance);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find<sp/>==<sp/>map-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offset<sp/>+<sp/>value++;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>(*map)[instance]<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>find-&gt;second;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FencingFunctor&gt;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>profile_fence_event(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>DirectFenceIDHandle<sp/>devIDTag,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FencingFunctor&amp;<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>uint64_t<sp/>handle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>Kokkos::Tools::beginFence(</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Tools::Experimental::device_id_root&lt;Space&gt;()<sp/>+<sp/>devIDTag.value,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;handle);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>func();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>Kokkos::Tools::endFence(handle);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>int_for_synchronization_reason(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::Tools::Experimental::SpecialSynchronizationCases<sp/>reason)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(reason)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GlobalDeviceSynchronization:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DeepCopyResourceSynchronization:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x00ffffff;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Space,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FencingFunctor&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>profile_fence_event(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::Tools::Experimental::SpecialSynchronizationCases<sp/>reason,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FencingFunctor&amp;<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>uint64_t<sp/>handle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>Kokkos::Tools::beginFence(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>device_id_root&lt;Space&gt;()<sp/>+<sp/>int_for_synchronization_reason(reason),</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;handle);<sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>correct<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>func();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>Kokkos::Tools::endFence(handle);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_init_callback(initFunction<sp/>callback);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_finalize_callback(finalizeFunction<sp/>callback);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_parse_args_callback(parseArgsFunction<sp/>callback);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_print_help_callback(printHelpFunction<sp/>callback);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_begin_parallel_for_callback(beginFunction<sp/>callback);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_end_parallel_for_callback(endFunction<sp/>callback);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_begin_parallel_reduce_callback(beginFunction<sp/>callback);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_end_parallel_reduce_callback(endFunction<sp/>callback);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_begin_parallel_scan_callback(beginFunction<sp/>callback);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_end_parallel_scan_callback(endFunction<sp/>callback);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_push_region_callback(pushFunction<sp/>callback);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_pop_region_callback(popFunction<sp/>callback);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_allocate_data_callback(allocateDataFunction<sp/>callback);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_deallocate_data_callback(deallocateDataFunction<sp/>callback);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_create_profile_section_callback(createProfileSectionFunction<sp/>callback);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_start_profile_section_callback(startProfileSectionFunction<sp/>callback);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_stop_profile_section_callback(stopProfileSectionFunction<sp/>callback);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_destroy_profile_section_callback(</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>destroyProfileSectionFunction<sp/>callback);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_profile_event_callback(profileEventFunction<sp/>callback);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_begin_deep_copy_callback(beginDeepCopyFunction<sp/>callback);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_end_deep_copy_callback(endDeepCopyFunction<sp/>callback);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_begin_fence_callback(beginFenceFunction<sp/>callback);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_end_fence_callback(endFenceFunction<sp/>callback);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_dual_view_sync_callback(dualViewSyncFunction<sp/>callback);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_dual_view_modify_callback(dualViewModifyFunction<sp/>callback);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_declare_metadata_callback(declareMetadataFunction<sp/>callback);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_declare_output_type_callback(outputTypeDeclarationFunction<sp/>callback);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_declare_input_type_callback(inputTypeDeclarationFunction<sp/>callback);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_request_output_values_callback(requestValueFunction<sp/>callback);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_declare_optimization_goal_callback(</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizationGoalDeclarationFunction<sp/>callback);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_end_context_callback(contextEndFunction<sp/>callback);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_begin_context_callback(contextBeginFunction<sp/>callback);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pause_tools();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resume_tools();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">EventSet<sp/>get_callbacks();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_callbacks(EventSet<sp/>new_events);</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Experimental</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Experimental<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_new_context_id();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_current_context_id();</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Experimental</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>Kokkos::Tools::Experimental::TeamSizeTuner&gt;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>team_tuners;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Rank&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">MDRangeTuningMap<sp/>=</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>Kokkos::Tools::Experimental::MDRangeTuner&lt;Rank&gt;&gt;;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Rank&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MDRangeTuningMap&lt;Rank&gt;<sp/>mdrange_tuners;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>any<sp/>policies<sp/>without<sp/>a<sp/>tuning<sp/>implementation,<sp/>with<sp/>a<sp/>reducer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ReducerType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TagType&gt;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tune_policy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/>ExecPolicy&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TagType)<sp/>{}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>any<sp/>policies<sp/>without<sp/>a<sp/>tuning<sp/>implementation,<sp/>without<sp/>a<sp/>reducer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TagType&gt;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tune_policy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/>ExecPolicy&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="namespace_kokkos_1_1_tools_1_1_impl_1_1_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="struct_kokkos_1_1_tools_1_1_impl_1_1_impl_1_1_simple_team_size_calculator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_tools_1_1_impl_1_1_impl_1_1_simple_team_size_calculator" kindref="compound">SimpleTeamSizeCalculator</ref><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_max_team_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>policy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tag<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>policy.team_size_max(functor,<sp/>tag);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag&gt;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_recommended_team_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>policy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tag<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>policy.team_size_recommended(functor,<sp/>tag);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_mdrange_max_tile_size_product(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_parallel_for_tag" kindref="compound">Kokkos::ParallelForTag</ref>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">exec_space<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy::execution_space;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">driver<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="class_kokkos_1_1_impl_1_1_parallel_for" kindref="compound">Kokkos::Impl::ParallelFor&lt;Functor, Policy, exec_space&gt;</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver::max_tile_size_product(policy,<sp/>functor);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_mdrange_max_tile_size_product(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_parallel_reduce_tag" kindref="compound">Kokkos::ParallelReduceTag</ref>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">exec_space<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy::execution_space;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">driver<sp/>=</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_impl_1_1_parallel_reduce" kindref="compound">Kokkos::Impl::ParallelReduce</ref>&lt;Functor,<sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>,<sp/><ref refid="struct_kokkos_1_1_invalid_type" kindref="compound">Kokkos::InvalidType</ref>,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exec_space&gt;;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver::max_tile_size_product(policy,<sp/>functor);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>when<sp/>we<sp/>have<sp/>a<sp/>complex<sp/>reducer,<sp/>we<sp/>need<sp/>to<sp/>pass<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instance<sp/>to<sp/>team_size_recommended/max.<sp/>Reducers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>aren&apos;t<sp/>default<sp/>constructible,<sp/>but<sp/>they<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constructible<sp/>from<sp/>a<sp/>reference<sp/>to<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instance<sp/>of<sp/>their<sp/>value_type<sp/>so<sp/>we<sp/>construct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>value_type<sp/>and<sp/>temporary<sp/>reducer<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReducerType&gt;</highlight></codeline>
<codeline lineno="338" refid="struct_kokkos_1_1_tools_1_1_impl_1_1_impl_1_1_complex_reducer_size_calculator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_tools_1_1_impl_1_1_impl_1_1_complex_reducer_size_calculator" kindref="compound">ComplexReducerSizeCalculator</ref><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag&gt;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_max_team_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>policy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tag<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReducerType::value_type;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>value;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>ReducerType<sp/>reducer_example<sp/>=<sp/>ReducerType(value);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policy.team_size_max(functor,<sp/>reducer_example,<sp/>tag);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag&gt;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_recommended_team_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>policy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tag<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReducerType::value_type;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>value;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ReducerType<sp/>reducer_example<sp/>=<sp/>ReducerType(value);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policy.team_size_recommended(functor,<sp/>reducer_example,<sp/>tag);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_mdrange_max_tile_size_product(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_parallel_reduce_tag" kindref="compound">Kokkos::ParallelReduceTag</ref>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">exec_space<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy::execution_space;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">driver<sp/>=</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_impl_1_1_parallel_reduce" kindref="compound">Kokkos::Impl::ParallelReduce&lt;Functor, Policy, ReducerType, exec_space&gt;</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver::max_tile_size_product(policy,<sp/>functor);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal">};</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tuner,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TagType,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TuningPermissionFunctor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Map,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&gt;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>generic_tune_policy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label_in,<sp/>Map&amp;<sp/>map,<sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;<sp/>tag,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TuningPermissionFunctor&amp;<sp/>should_tune)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(should_tune(policy))<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>label<sp/>=<sp/>label_in;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_in.empty())<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">policy_type<sp/>=</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_reference&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(policy)&gt;::type;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">work_tag<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>policy_type::work_tag;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_parallel_construct_name" kindref="compound">Kokkos::Impl::ParallelConstructName&lt;Functor, work_tag&gt;</ref><sp/>name(label);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>=<sp/>name.get();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tuner_iter<sp/>=<sp/>[&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>my_tuner<sp/>=<sp/>map.find(label);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(my_tuner<sp/>==<sp/>map.end())<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(map.emplace(label,<sp/>Tuner(label,<sp/>policy,<sp/>functor,<sp/>tag,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Impl::SimpleTeamSizeCalculator{}))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.first);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>my_tuner;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>tuner_iter-&gt;second.tune(policy);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tuner,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ReducerType,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TagType,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TuningPermissionFunctor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Map,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&gt;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>generic_tune_policy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label_in,<sp/>Map&amp;<sp/>map,<sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;<sp/>tag,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TuningPermissionFunctor&amp;<sp/>should_tune)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(should_tune(policy))<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>label<sp/>=<sp/>label_in;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_in.empty())<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">policy_type<sp/>=</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_reference&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(policy)&gt;::type;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">work_tag<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>policy_type::work_tag;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_parallel_construct_name" kindref="compound">Kokkos::Impl::ParallelConstructName&lt;Functor, work_tag&gt;</ref><sp/>name(label);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>=<sp/>name.get();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tuner_iter<sp/>=<sp/>[&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>my_tuner<sp/>=<sp/>map.find(label);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(my_tuner<sp/>==<sp/>map.end())<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(map.emplace(</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tuner(label,<sp/>policy,<sp/>functor,<sp/>tag,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Impl::ComplexReducerSizeCalculator&lt;ReducerType&gt;{}))</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.first);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>my_tuner;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>tuner_iter-&gt;second.tune(policy);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tune<sp/>a<sp/>TeamPolicy,<sp/>without<sp/>reducer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TagType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Properties&gt;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tune_policy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label_in,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy&lt;Properties...&gt;</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>generic_tune_policy&lt;Experimental::TeamSizeTuner&gt;(</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label_in,<sp/>team_tuners,<sp/>policy,<sp/>functor,<sp/>tag,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy&lt;Properties...&gt;</ref>&amp;<sp/>candidate_policy)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(candidate_policy.<ref refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a356fbb5a36b36fb10ed22f077d16f2f2" kindref="member">impl_auto_team_size</ref>()<sp/>||</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidate_policy.<ref refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1af62f71a640153f05f01ad17c8f069063" kindref="member">impl_auto_vector_length</ref>());</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tune<sp/>a<sp/>TeamPolicy,<sp/>with<sp/>reducer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ReducerType,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TagType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Properties&gt;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tune_policy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label_in,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy&lt;Properties...&gt;</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>generic_tune_policy&lt;Experimental::TeamSizeTuner,<sp/>ReducerType&gt;(</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label_in,<sp/>team_tuners,<sp/>policy,<sp/>functor,<sp/>tag,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy&lt;Properties...&gt;</ref>&amp;<sp/>candidate_policy)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(candidate_policy.<ref refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a356fbb5a36b36fb10ed22f077d16f2f2" kindref="member">impl_auto_team_size</ref>()<sp/>||</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidate_policy.<ref refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1af62f71a640153f05f01ad17c8f069063" kindref="member">impl_auto_vector_length</ref>());</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tune<sp/>a<sp/>MDRangePolicy,<sp/>without<sp/>reducer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TagType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Properties&gt;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tune_policy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label_in,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Kokkos::MDRangePolicy&lt;Properties...&gt;</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Kokkos::MDRangePolicy</ref>&lt;Properties...&gt;;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>Policy::rank;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>generic_tune_policy&lt;Experimental::MDRangeTuner&lt;rank&gt;&gt;(</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label_in,<sp/>mdrange_tuners&lt;rank&gt;,<sp/>policy,<sp/>functor,<sp/>tag,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>candidate_policy)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidate_policy.impl_tune_tile_size();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tune<sp/>a<sp/>MDRangePolicy,<sp/>with<sp/>reducer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ReducerType,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TagType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Properties&gt;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tune_policy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label_in,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Kokkos::MDRangePolicy&lt;Properties...&gt;</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Kokkos::MDRangePolicy</ref>&lt;Properties...&gt;;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>Policy::rank;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>generic_tune_policy&lt;Experimental::MDRangeTuner&lt;rank&gt;,<sp/>ReducerType&gt;(</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label_in,<sp/>mdrange_tuners&lt;rank&gt;,<sp/>policy,<sp/>functor,<sp/>tag,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>candidate_policy)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidate_policy.impl_tune_tile_size();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ReducerType&gt;</highlight></codeline>
<codeline lineno="478" refid="struct_kokkos_1_1_tools_1_1_impl_1_1_reduction_switcher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_tools_1_1_impl_1_1_reduction_switcher" kindref="compound">ReductionSwitcher</ref><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TagType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy&gt;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tune(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tuning_context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExecPolicy&amp;<sp/>policy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::tune_internals())<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tune_policy&lt;ReducerType&gt;(tuning_context,<sp/>label,<sp/>policy,<sp/>functor,<sp/>tag);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal">};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="490" refid="struct_kokkos_1_1_tools_1_1_impl_1_1_reduction_switcher_3_01_kokkos_1_1_invalid_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_tools_1_1_impl_1_1_reduction_switcher" kindref="compound">ReductionSwitcher</ref>&lt;Kokkos::<ref refid="struct_kokkos_1_1_invalid_type" kindref="compound">InvalidType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TagType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy&gt;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tune(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tuning_context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExecPolicy&amp;<sp/>policy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::tune_internals())<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tune_policy(tuning_context,<sp/>label,<sp/>policy,<sp/>functor,<sp/>tag);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal">};</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tuner,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TagType,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TuningPermissionFunctor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Map,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&gt;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>generic_report_results(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label_in,<sp/>Map&amp;<sp/>map,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>policy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TuningPermissionFunctor&amp;<sp/>should_tune)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(should_tune(policy))<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>label<sp/>=<sp/>label_in;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_in.empty())<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">policy_type<sp/>=</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_reference&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(policy)&gt;::type;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">work_tag<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>policy_type::work_tag;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_parallel_construct_name" kindref="compound">Kokkos::Impl::ParallelConstructName&lt;Functor, work_tag&gt;</ref><sp/>name(label);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>=<sp/>name.get();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tuner_iter<sp/>=<sp/>map[label];</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>tuner_iter.end();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>report<sp/>results<sp/>for<sp/>a<sp/>policy<sp/>type<sp/>we<sp/>don&apos;t<sp/>tune<sp/>(do<sp/>nothing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TagType&gt;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>report_policy_results(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/>ExecPolicy&amp;,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>report<sp/>results<sp/>for<sp/>a<sp/>TeamPolicy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TagType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Properties&gt;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>report_policy_results(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label_in,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy&lt;Properties...&gt;</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>generic_report_results&lt;Experimental::TeamSizeTuner&gt;(</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label_in,<sp/>team_tuners,<sp/>policy,<sp/>functor,<sp/>tag,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy&lt;Properties...&gt;</ref>&amp;<sp/>candidate_policy)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(candidate_policy.<ref refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a356fbb5a36b36fb10ed22f077d16f2f2" kindref="member">impl_auto_team_size</ref>()<sp/>||</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidate_policy.<ref refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1af62f71a640153f05f01ad17c8f069063" kindref="member">impl_auto_vector_length</ref>());</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">//<sp/>report<sp/>results<sp/>for<sp/>an<sp/>MDRangePolicy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TagType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Properties&gt;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>report_policy_results(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label_in,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Kokkos::MDRangePolicy&lt;Properties...&gt;</ref>&amp;<sp/>policy,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Functor&amp;<sp/>functor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TagType&amp;<sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Kokkos::MDRangePolicy</ref>&lt;Properties...&gt;;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>Policy::rank;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>generic_report_results&lt;Experimental::MDRangeTuner&lt;rank&gt;&gt;(</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label_in,<sp/>mdrange_tuners&lt;rank&gt;,<sp/>policy,<sp/>functor,<sp/>tag,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&amp;<sp/>candidate_policy)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidate_policy.impl_tune_tile_size();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FunctorType&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>begin_parallel_for(ExecPolicy&amp;<sp/>policy,<sp/>FunctorType&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/>uint64_t&amp;<sp/>kpID)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Tools::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_parallel_construct_name" kindref="compound">Kokkos::Impl::ParallelConstructName</ref>&lt;FunctorType,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExecPolicy::work_tag&gt;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(label);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::Tools::beginParallelFor(</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.get(),<sp/>Kokkos::Profiling::Experimental::device_id(policy.space()),</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;kpID);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_ENABLE_TUNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>context_id<sp/>=<sp/>Kokkos::Tools::Experimental::get_new_context_id();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::tune_internals())<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>tune_policy(context_id,<sp/>label,<sp/>policy,<sp/>functor,<sp/><ref refid="struct_kokkos_1_1_parallel_for_tag" kindref="compound">Kokkos::ParallelForTag</ref>{});</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>(void)functor;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FunctorType&gt;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>end_parallel_for(ExecPolicy&amp;<sp/>policy,<sp/>FunctorType&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/>uint64_t&amp;<sp/>kpID)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Tools::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::Tools::endParallelFor(kpID);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_ENABLE_TUNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>context_id<sp/>=<sp/>Kokkos::Tools::Experimental::get_current_context_id();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::tune_internals())<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>report_policy_results(context_id,<sp/>label,<sp/>policy,<sp/>functor,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_parallel_for_tag" kindref="compound">Kokkos::ParallelForTag</ref>{});</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>(void)policy;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>(void)functor;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>(void)label;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FunctorType&gt;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>begin_parallel_scan(ExecPolicy&amp;<sp/>policy,<sp/>FunctorType&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/>uint64_t&amp;<sp/>kpID)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Tools::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_parallel_construct_name" kindref="compound">Kokkos::Impl::ParallelConstructName</ref>&lt;FunctorType,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExecPolicy::work_tag&gt;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(label);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::Tools::beginParallelScan(</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.get(),<sp/>Kokkos::Profiling::Experimental::device_id(policy.space()),</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;kpID);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_ENABLE_TUNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>context_id<sp/>=<sp/>Kokkos::Tools::Experimental::get_new_context_id();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::tune_internals())<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>tune_policy(context_id,<sp/>label,<sp/>policy,<sp/>functor,<sp/><ref refid="struct_kokkos_1_1_parallel_scan_tag" kindref="compound">Kokkos::ParallelScanTag</ref>{});</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>(void)functor;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FunctorType&gt;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>end_parallel_scan(ExecPolicy&amp;<sp/>policy,<sp/>FunctorType&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/>uint64_t&amp;<sp/>kpID)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Tools::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::Tools::endParallelScan(kpID);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_ENABLE_TUNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>context_id<sp/>=<sp/>Kokkos::Tools::Experimental::get_current_context_id();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::tune_internals())<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>report_policy_results(context_id,<sp/>label,<sp/>policy,<sp/>functor,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_parallel_scan_tag" kindref="compound">Kokkos::ParallelScanTag</ref>{});</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>(void)policy;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>(void)functor;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>(void)label;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ReducerType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FunctorType&gt;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>begin_parallel_reduce(ExecPolicy&amp;<sp/>policy,<sp/>FunctorType&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/>uint64_t&amp;<sp/>kpID)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Tools::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_parallel_construct_name" kindref="compound">Kokkos::Impl::ParallelConstructName</ref>&lt;FunctorType,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExecPolicy::work_tag&gt;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(label);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::Tools::beginParallelReduce(</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.get(),<sp/>Kokkos::Profiling::Experimental::device_id(policy.space()),</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;kpID);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_ENABLE_TUNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>context_id<sp/>=<sp/>Kokkos::Tools::Experimental::get_new_context_id();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>ReductionSwitcher&lt;ReducerType&gt;::tune(context_id,<sp/>label,<sp/>policy,<sp/>functor,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_parallel_reduce_tag" kindref="compound">Kokkos::ParallelReduceTag</ref>{});</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>(void)functor;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ReducerType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecPolicy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FunctorType&gt;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>end_parallel_reduce(ExecPolicy&amp;<sp/>policy,<sp/>FunctorType&amp;<sp/>functor,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/>uint64_t&amp;<sp/>kpID)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Tools::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::Tools::endParallelReduce(kpID);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_ENABLE_TUNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>context_id<sp/>=<sp/>Kokkos::Tools::Experimental::get_current_context_id();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::tune_internals())<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>report_policy_results(context_id,<sp/>label,<sp/>policy,<sp/>functor,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_parallel_reduce_tag" kindref="compound">Kokkos::ParallelReduceTag</ref>{});</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>(void)policy;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>(void)functor;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>(void)label;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Profiling<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>profileLibraryLoaded();</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginParallelFor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kernelPrefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>devID,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t*<sp/>kernelID);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginParallelReduce(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kernelPrefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>devID,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t*<sp/>kernelID);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginParallelScan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kernelPrefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>devID,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t*<sp/>kernelID);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endParallelFor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>kernelID);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endParallelReduce(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>kernelID);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endParallelScan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>kernelID);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pushRegion(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kName);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>popRegion();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createProfileSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sectionName,<sp/>uint32_t*<sp/>secID);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyProfileSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>secID);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>secID);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stopSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>secID);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>markEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>eventName);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>allocateData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_space_handle" kindref="compound">SpaceHandle</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>size);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deallocateData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_space_handle" kindref="compound">SpaceHandle</ref><sp/>space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>label,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>size);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginDeepCopy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_space_handle" kindref="compound">SpaceHandle</ref><sp/>dst_space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>dst_label,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_space_handle" kindref="compound">SpaceHandle</ref><sp/>src_space,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>src_label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src_ptr,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>size);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endDeepCopy();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><ref refid="struct_space_handle" kindref="compound">SpaceHandle</ref><sp/>make_space_handle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>space_name);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="namespace_kokkos_1_1_profiling_1_1_experimental" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Experimental<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_allocate_data_callback;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_begin_deep_copy_callback;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_begin_parallel_for_callback;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_begin_parallel_reduce_callback;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_begin_parallel_scan_callback;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_create_profile_section_callback;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_deallocate_data_callback;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_destroy_profile_section_callback;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_end_deep_copy_callback;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_end_parallel_for_callback;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_end_parallel_reduce_callback;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_end_parallel_scan_callback;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_finalize_callback;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_init_callback;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_parse_args_callback;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_pop_region_callback;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_print_help_callback;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_profile_event_callback;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_push_region_callback;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_start_profile_section_callback;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_stop_profile_section_callback;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos___profiling___event_set" kindref="compound">Kokkos::Tools::Experimental::EventSet</ref>;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::pause_tools;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::resume_tools;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::get_callbacks;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Kokkos::Tools::Experimental::set_callbacks;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Experimental</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Profiling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Tools<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Experimental<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal">VariableValue<sp/>make_variable_value(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>int64_t<sp/>val);</highlight></codeline>
<codeline lineno="751"><highlight class="normal">VariableValue<sp/>make_variable_value(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="752"><highlight class="normal">VariableValue<sp/>make_variable_value(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal">SetOrRange<sp/>make_candidate_set(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>std::string*<sp/>data);</highlight></codeline>
<codeline lineno="755"><highlight class="normal">SetOrRange<sp/>make_candidate_set(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>int64_t*<sp/>data);</highlight></codeline>
<codeline lineno="756"><highlight class="normal">SetOrRange<sp/>make_candidate_set(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>data);</highlight></codeline>
<codeline lineno="757"><highlight class="normal">SetOrRange<sp/>make_candidate_range(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>openLower,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>openUpper);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal">SetOrRange<sp/>make_candidate_range(int64_t<sp/>lower,<sp/>int64_t<sp/>upper,<sp/>int64_t<sp/>step,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>openLower,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>openUpper);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>declare_optimization_goal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>context,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OptimizationGoal&amp;<sp/>goal);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>declare_output_type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>typeName,<sp/>VariableInfo<sp/>info);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>declare_input_type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>typeName,<sp/>VariableInfo<sp/>info);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_input_values(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>contextId,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/>VariableValue*<sp/>values);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>end_context(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>contextId);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>begin_context(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>contextId);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>request_output_values(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>contextId,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VariableValue*<sp/>values);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have_tuning_tool();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_new_context_id();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_current_context_id();</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_new_variable_id();</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Experimental</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Kokkos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Profiling.hpp"/>
  </compounddef>
</doxygen>
