<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739" kind="class" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>Kokkos::Iterate</type>
        <declname>OuterP</declname>
        <defname>OuterP</defname>
      </param>
      <param>
        <type>Kokkos::Iterate</type>
        <declname>InnerP</declname>
        <defname>InnerP</defname>
      </param>
      <param>
        <type>unsigned</type>
        <declname>N0</declname>
        <defname>N0</defname>
      </param>
      <param>
        <type>unsigned</type>
        <declname>N1</declname>
        <defname>N1</defname>
      </param>
      <param>
        <type>unsigned</type>
        <declname>N2</declname>
        <defname>N2</defname>
      </param>
      <param>
        <type>unsigned</type>
        <declname>N3</declname>
        <defname>N3</defname>
      </param>
      <param>
        <type>unsigned</type>
        <declname>N4</declname>
        <defname>N4</defname>
      </param>
      <param>
        <type>unsigned</type>
        <declname>N5</declname>
        <defname>N5</defname>
      </param>
      <param>
        <type>unsigned</type>
        <declname>N6</declname>
        <defname>N6</defname>
      </param>
      <param>
        <type>unsigned</type>
        <declname>N7</declname>
        <defname>N7</defname>
      </param>
      <param>
        <type>class...</type>
        <declname>P</declname>
        <defname>P</defname>
      </param>
      <param>
        <type>typename iType0</type>
      </param>
      <param>
        <type>typename iType1</type>
      </param>
      <param>
        <type>typename iType2</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1ae8e9faba72b5963f92822fe84842c12c" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_experimental_1_1_layout_tiled" kindref="compound">Kokkos::Experimental::LayoutTiled</ref>&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::src_layout =  Kokkos::Experimental::LayoutTiled&lt;OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true&gt;</definition>
        <argsstring></argsstring>
        <name>src_layout</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::src_layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="822" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="824" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1af67db43f1f96fee5cee8aa996c2dd732" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_view_traits" kindref="compound">Kokkos::ViewTraits</ref>&lt; T ***, <ref refid="struct_kokkos_1_1_experimental_1_1_layout_tiled" kindref="compound">src_layout</ref>, P... &gt;</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::src_traits =  Kokkos::ViewTraits&lt;T***, src_layout, P...&gt;</definition>
        <argsstring></argsstring>
        <name>src_traits</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::src_traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="825" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="825" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1a49199db5e36d53cf54cd4fc6c7f006d5" prot="public" static="no">
        <type>typename std::conditional&lt; is_inner_left, <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>, <ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref> &gt;::type</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::array_layout =  typename std::conditional&lt;is_inner_left, Kokkos::LayoutLeft, Kokkos::LayoutRight&gt;::type</definition>
        <argsstring></argsstring>
        <name>array_layout</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::array_layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="829" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="831" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1a22762da0f99e4d0dd6ee4c3814329f66" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_view_traits" kindref="compound">Kokkos::ViewTraits</ref>&lt; T[N0][N1][N2], array_layout, P... &gt;</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::traits =  Kokkos::ViewTraits&lt;T[N0][N1][N2], array_layout, P...&gt;</definition>
        <argsstring></argsstring>
        <name>traits</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="832" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="832" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1afbf366369b175da978ba8e4fcf709175" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; T[N0][N1][N2], array_layout, P... &gt;</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::type =  Kokkos::View&lt;T[N0][N1][N2], array_layout, P...&gt;</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="833" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="833" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1aaa9c0129c678038eb32edee85bad8671" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::is_outer_left</definition>
        <argsstring></argsstring>
        <name>is_outer_left</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::is_outer_left</qualifiedname>
        <initializer>= (OuterP == Kokkos::Iterate::Left)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="827" column="25" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1a5ba6f480a127afe2ce7433803317ece6" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::is_inner_left</definition>
        <argsstring></argsstring>
        <name>is_inner_left</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::is_inner_left</qualifiedname>
        <initializer>= (InnerP == Kokkos::Iterate::Left)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="828" column="25" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="828" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1a7313f21075bb8a7377fb3ed542c5f38b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>static KOKKOS_INLINE_FUNCTION void Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::assign</definition>
        <argsstring>(ViewMapping&lt; traits, void &gt; &amp;dst, const ViewMapping&lt; src_traits, void &gt; &amp;src, const src_layout &amp;, const iType0 i_tile0, const iType1 i_tile1, const iType2 i_tile2)</argsstring>
        <name>assign</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;::assign</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>&lt; <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">traits</ref>, void &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>&lt; <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">src_traits</ref>, void &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_experimental_1_1_layout_tiled" kindref="compound">src_layout</ref> &amp;</type>
        </param>
        <param>
          <type>const iType0</type>
          <declname>i_tile0</declname>
        </param>
        <param>
          <type>const iType1</type>
          <declname>i_tile1</declname>
        </param>
        <param>
          <type>const iType2</type>
          <declname>i_tile2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="835" column="38" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="835" bodyend="860"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="810" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="820" bodyend="861"/>
    <listofallmembers>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1a49199db5e36d53cf54cd4fc6c7f006d5" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;</scope><name>array_layout</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1a7313f21075bb8a7377fb3ed542c5f38b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;</scope><name>assign</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1a5ba6f480a127afe2ce7433803317ece6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;</scope><name>is_inner_left</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1aaa9c0129c678038eb32edee85bad8671" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;</scope><name>is_outer_left</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1ae8e9faba72b5963f92822fe84842c12c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;</scope><name>src_layout</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1af67db43f1f96fee5cee8aa996c2dd732" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;</scope><name>src_traits</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1a22762da0f99e4d0dd6ee4c3814329f66" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;</scope><name>traits</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739_1afbf366369b175da978ba8e4fcf709175" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
