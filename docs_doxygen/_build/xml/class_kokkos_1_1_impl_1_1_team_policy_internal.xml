<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_kokkos_1_1_impl_1_1_team_policy_internal" kind="class" language="C++" prot="public">
    <compoundname>Kokkos::Impl::TeamPolicyInternal</compoundname>
    <basecompoundref refid="struct_kokkos_1_1_impl_1_1_policy_traits" prot="public" virt="non-virtual">Kokkos::Impl::PolicyTraits&lt; Properties... &gt;</basecompoundref>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_team_policy_internal_1_1member__type" prot="public">Kokkos::Impl::TeamPolicyInternal::member_type</innerclass>
    <templateparamlist>
      <param>
        <type>class ExecSpace</type>
      </param>
      <param>
        <type>class...</type>
        <declname>Properties</declname>
        <defname>Properties</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a4bfa9a79f6bacc5e398083d8d440bcc8" prot="private" static="no">
        <type><ref refid="struct_kokkos_1_1_impl_1_1_policy_traits" kindref="compound">Impl::PolicyTraits</ref>&lt; Properties... &gt;</type>
        <definition>using Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::traits =  Impl::PolicyTraits&lt;Properties...&gt;</definition>
        <argsstring></argsstring>
        <name>traits</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="291" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a33c4299b781278218013e4635fc5ef4f" prot="public" static="no">
        <type>typename traits::index_type</type>
        <definition>using Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::index_type =  typename traits::index_type</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::index_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="294" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a1913874dcb27053b157bcde223125dd8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FunctorType</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>static int Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::team_size_max</definition>
        <argsstring>(const FunctorType &amp;)</argsstring>
        <name>team_size_max</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::team_size_max</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
        </param>
        <briefdescription>
<para>Query maximum team size for a given functor. </para>
        </briefdescription>
        <detaileddescription>
<para>This size takes into account execution space concurrency limitations and scratch memory space limitations for reductions, team reduce/scan, and team shared memory.</para>
<para>This function only works for single-operator functors. With multi-operator functors it cannot be determined which operator will be called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="308" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1ad79a2ea7fea2f9116a5ff3602cf1428f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FunctorType</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>static int Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::team_size_recommended</definition>
        <argsstring>(const FunctorType &amp;)</argsstring>
        <name>team_size_recommended</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::team_size_recommended</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
        </param>
        <briefdescription>
<para>Query recommended team size for a given functor. </para>
        </briefdescription>
        <detaileddescription>
<para>This size takes into account execution space concurrency limitations and scratch memory space limitations for reductions, team reduce/scan, and team shared memory.</para>
<para>This function only works for single-operator functors. With multi-operator functors it cannot be determined which operator will be called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="321" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a2841a68b39f206e6173b71113f4e2c0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FunctorType</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>static int Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::team_size_recommended</definition>
        <argsstring>(const FunctorType &amp;, const int &amp;)</argsstring>
        <name>team_size_recommended</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::team_size_recommended</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
        </param>
        <param>
          <type>const int &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="324" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a071299e22173279f966f9282ac4b160e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::vector_length_max</definition>
        <argsstring>()</argsstring>
        <name>vector_length_max</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::vector_length_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="373" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a0a7732c89c87ef5cffd06fa8a1a7b93b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FunctorType</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::team_size_recommended</definition>
        <argsstring>(const FunctorType &amp;functor, const int vector_length)</argsstring>
        <name>team_size_recommended</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::team_size_recommended</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>functor</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>vector_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="327" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a67a6214ab908937c4701ccb3012e035f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::TeamPolicyInternal</definition>
        <argsstring>(const typename traits::execution_space &amp;, int league_size_request, int team_size_request, int vector_length_request=1)</argsstring>
        <name>TeamPolicyInternal</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::TeamPolicyInternal</qualifiedname>
        <param>
          <type>const typename traits::execution_space &amp;</type>
        </param>
        <param>
          <type>int</type>
          <declname>league_size_request</declname>
        </param>
        <param>
          <type>int</type>
          <declname>team_size_request</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vector_length_request</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Construct policy with the given instance of the execution space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="332" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a9114f440ae81dacd7eeff7d54ba2a7df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::TeamPolicyInternal</definition>
        <argsstring>(const typename traits::execution_space &amp;, int league_size_request, const Kokkos::AUTO_t &amp;, int vector_length_request=1)</argsstring>
        <name>TeamPolicyInternal</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::TeamPolicyInternal</qualifiedname>
        <param>
          <type>const typename traits::execution_space &amp;</type>
        </param>
        <param>
          <type>int</type>
          <declname>league_size_request</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_a_u_t_o__t" kindref="compound">Kokkos::AUTO_t</ref> &amp;</type>
        </param>
        <param>
          <type>int</type>
          <declname>vector_length_request</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="336" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a0ea9e601e9cffc3f99aa721dbe6e3733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::TeamPolicyInternal</definition>
        <argsstring>(int league_size_request, int team_size_request, int vector_length_request=1)</argsstring>
        <name>TeamPolicyInternal</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::TeamPolicyInternal</qualifiedname>
        <param>
          <type>int</type>
          <declname>league_size_request</declname>
        </param>
        <param>
          <type>int</type>
          <declname>team_size_request</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vector_length_request</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Construct policy with the default instance of the execution space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="342" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a126b31c304b21266a01b0849a1569614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::TeamPolicyInternal</definition>
        <argsstring>(int league_size_request, const Kokkos::AUTO_t &amp;, int vector_length_request=1)</argsstring>
        <name>TeamPolicyInternal</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::TeamPolicyInternal</qualifiedname>
        <param>
          <type>int</type>
          <declname>league_size_request</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_a_u_t_o__t" kindref="compound">Kokkos::AUTO_t</ref> &amp;</type>
        </param>
        <param>
          <type>int</type>
          <declname>vector_length_request</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="345" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a9e7535fbeec2a4db8e0737baa3cac6b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION int</type>
        <definition>KOKKOS_INLINE_FUNCTION int Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::league_size</definition>
        <argsstring>() const</argsstring>
        <name>league_size</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::league_size</qualifiedname>
        <briefdescription>
<para>The actual league size (number of teams) of the policy. </para>
        </briefdescription>
        <detaileddescription>
<para>This may be smaller than the requested league size due to limitations of the execution space. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="357" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a97be076d05c169dc6ca2f1253795b898" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION int</type>
        <definition>KOKKOS_INLINE_FUNCTION int Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::team_size</definition>
        <argsstring>() const</argsstring>
        <name>team_size</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::team_size</qualifiedname>
        <briefdescription>
<para>The actual team size (number of threads per team) of the policy. </para>
        </briefdescription>
        <detaileddescription>
<para>This may be smaller than the requested team size due to limitations of the execution space. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="364" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a356fbb5a36b36fb10ed22f077d16f2f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::impl_auto_team_size</definition>
        <argsstring>() const</argsstring>
        <name>impl_auto_team_size</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::impl_auto_team_size</qualifiedname>
        <briefdescription>
<para>Whether the policy has an automatically determined team size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="368" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1af62f71a640153f05f01ad17c8f069063" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::impl_auto_vector_length</definition>
        <argsstring>() const</argsstring>
        <name>impl_auto_vector_length</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::impl_auto_vector_length</qualifiedname>
        <briefdescription>
<para>Whether the policy has an automatically determined vector length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="371" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a08ffb2624c751c258e29a9f3cb9b126c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION int</type>
        <definition>KOKKOS_INLINE_FUNCTION int Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::impl_vector_length</definition>
        <argsstring>() const</argsstring>
        <name>impl_vector_length</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::impl_vector_length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="375" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1a9222e53ca2c4359fb097f9e802ea6ba1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>traits::index_type</type>
        <definition>traits::index_type Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::chunk_size</definition>
        <argsstring>() const</argsstring>
        <name>chunk_size</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::chunk_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="377" column="38"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_team_policy_internal_1ae5d54a87d586ca2e978ce27e80f64d0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_kokkos_1_1_impl_1_1_team_policy_internal" kindref="compound">TeamPolicyInternal</ref> &amp;</type>
        <definition>TeamPolicyInternal &amp; Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;::set_chunk_size</definition>
        <argsstring>(int chunk_size)</argsstring>
        <name>set_chunk_size</name>
        <qualifiedname>Kokkos::Impl::TeamPolicyInternal::set_chunk_size</qualifiedname>
        <param>
          <type>int</type>
          <declname>chunk_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="379" column="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Kokkos::Impl::AnalyzeExecPolicy&lt; void, Traits... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Kokkos::Impl::AnalyzeExecPolicyUseMatcher&lt; void, execution_policy_trait_specifications, Traits... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_use_matcher"/>
      </node>
      <node id="3">
        <label>Kokkos::Impl::ExecPolicyTraitsWithDefaults&lt; AnalyzeExecPolicy&lt; void, Traits... &gt; &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_exec_policy_traits_with_defaults"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_team_policy_internal"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::Impl::PolicyTraits&lt; Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_policy_traits"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Kokkos::Impl::AnalyzeExecPolicy&lt; void, Traits... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Kokkos::Impl::AnalyzeExecPolicyUseMatcher&lt; void, execution_policy_trait_specifications, Traits... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_use_matcher"/>
      </node>
      <node id="3">
        <label>Kokkos::Impl::ExecPolicyTraitsWithDefaults&lt; AnalyzeExecPolicy&lt; void, Traits... &gt; &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_exec_policy_traits_with_defaults"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Kokkos::Impl::TeamPolicyInternal&lt; ExecSpace, Properties &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_team_policy_internal"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::Impl::PolicyTraits&lt; Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_policy_traits"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="289" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" bodystart="289" bodyend="431"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_impl_1_1_policy_traits_1a24bd124fcc0bfd0f826263510bd9a239" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>base_t</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a9222e53ca2c4359fb097f9e802ea6ba1" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>chunk_size</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a356fbb5a36b36fb10ed22f077d16f2f2" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>impl_auto_team_size</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1af62f71a640153f05f01ad17c8f069063" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>impl_auto_vector_length</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a08ffb2624c751c258e29a9f3cb9b126c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>impl_vector_length</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a33c4299b781278218013e4635fc5ef4f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>index_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a9e7535fbeec2a4db8e0737baa3cac6b8" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>league_size</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1ae5d54a87d586ca2e978ce27e80f64d0e" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>set_chunk_size</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a97be076d05c169dc6ca2f1253795b898" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>team_size</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a1913874dcb27053b157bcde223125dd8" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>team_size_max</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1ad79a2ea7fea2f9116a5ff3602cf1428f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>team_size_recommended</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a2841a68b39f206e6173b71113f4e2c0b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>team_size_recommended</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a0a7732c89c87ef5cffd06fa8a1a7b93b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>team_size_recommended</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a67a6214ab908937c4701ccb3012e035f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>TeamPolicyInternal</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a9114f440ae81dacd7eeff7d54ba2a7df" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>TeamPolicyInternal</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a0ea9e601e9cffc3f99aa721dbe6e3733" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>TeamPolicyInternal</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a126b31c304b21266a01b0849a1569614" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>TeamPolicyInternal</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a4bfa9a79f6bacc5e398083d8d440bcc8" prot="private" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>traits</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_team_policy_internal_1a071299e22173279f966f9282ac4b160e" prot="public" virt="non-virtual"><scope>Kokkos::Impl::TeamPolicyInternal</scope><name>vector_length_max</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
