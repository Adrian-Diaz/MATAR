<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion" kind="struct" language="C++" prot="public">
    <compoundname>Test::Impl::TestDeepCopyScalarConversion</compoundname>
    <innerclass refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1_1_tag_compare" prot="public">Test::Impl::TestDeepCopyScalarConversion::TagCompare</innerclass>
    <innerclass refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1_1_tag_fill" prot="public">Test::Impl::TestDeepCopyScalarConversion::TagFill</innerclass>
    <templateparamlist>
      <param>
        <type>class Scalar1</type>
      </param>
      <param>
        <type>class Scalar2</type>
      </param>
      <param>
        <type>class Layout1</type>
      </param>
      <param>
        <type>class Layout2</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a7de27e4eca7346836fd19f836556e3e4" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; Scalar1 *, Layout1, TEST_EXECSPACE &gt;</type>
        <definition>using Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::view_type_s1_1d =  Kokkos::View&lt;Scalar1*, Layout1, TEST_EXECSPACE&gt;</definition>
        <argsstring></argsstring>
        <name>view_type_s1_1d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::view_type_s1_1d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="222" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a3d8752305c3c9e37f19dc7ffda9def45" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; Scalar2 *, Layout2, TEST_EXECSPACE &gt;</type>
        <definition>using Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::view_type_s2_1d =  Kokkos::View&lt;Scalar2*, Layout2, TEST_EXECSPACE&gt;</definition>
        <argsstring></argsstring>
        <name>view_type_s2_1d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::view_type_s2_1d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="223" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a861fcf2b90892a67dcf0602a305dc9b6" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; Scalar1 **, Layout1, TEST_EXECSPACE &gt;</type>
        <definition>using Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::view_type_s1_2d =  Kokkos::View&lt;Scalar1**, Layout1, TEST_EXECSPACE&gt;</definition>
        <argsstring></argsstring>
        <name>view_type_s1_2d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::view_type_s1_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="224" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1afb8f9b61a7849aa4991698795c193a3a" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; Scalar2 **, Layout2, TEST_EXECSPACE &gt;</type>
        <definition>using Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::view_type_s2_2d =  Kokkos::View&lt;Scalar2**, Layout2, TEST_EXECSPACE&gt;</definition>
        <argsstring></argsstring>
        <name>view_type_s2_2d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::view_type_s2_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="225" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a97cdefef7ad4c5db16d641406ca75367" prot="public" static="no">
        <type>typename std::conditional&lt; std::is_same&lt; Layout1, <ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref> &gt;::value, <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>, Layout1 &gt;::type</type>
        <definition>using Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::base_layout1 =  typename std::conditional&lt; std::is_same&lt;Layout1, Kokkos::LayoutStride&gt;::value, Kokkos::LayoutLeft, Layout1&gt;::type</definition>
        <argsstring></argsstring>
        <name>base_layout1</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::base_layout1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="227" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1abd9e1da6b24fc7e5bc3ce5e8ded6b218" prot="public" static="no">
        <type>typename std::conditional&lt; std::is_same&lt; Layout2, <ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref> &gt;::value, <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>, Layout2 &gt;::type</type>
        <definition>using Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::base_layout2 =  typename std::conditional&lt; std::is_same&lt;Layout2, Kokkos::LayoutStride&gt;::value, Kokkos::LayoutLeft, Layout2&gt;::type</definition>
        <argsstring></argsstring>
        <name>base_layout2</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::base_layout2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="230" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a55a54043a1b0867b32cdf429ff3b3350" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; Scalar1 *, base_layout1, TEST_EXECSPACE &gt;</type>
        <definition>using Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::base_type_s1_1d =  Kokkos::View&lt;Scalar1*, base_layout1, TEST_EXECSPACE&gt;</definition>
        <argsstring></argsstring>
        <name>base_type_s1_1d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::base_type_s1_1d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="234" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a28222b0d30b4116f72794b9249ac5207" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; Scalar2 *, base_layout2, TEST_EXECSPACE &gt;</type>
        <definition>using Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::base_type_s2_1d =  Kokkos::View&lt;Scalar2*, base_layout2, TEST_EXECSPACE&gt;</definition>
        <argsstring></argsstring>
        <name>base_type_s2_1d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::base_type_s2_1d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="235" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a63292b04f5cd63100c4babab8ed1f4b6" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; Scalar1 **, base_layout1, TEST_EXECSPACE &gt;</type>
        <definition>using Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::base_type_s1_2d =  Kokkos::View&lt;Scalar1**, base_layout1, TEST_EXECSPACE&gt;</definition>
        <argsstring></argsstring>
        <name>base_type_s1_2d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::base_type_s1_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="236" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a26f2753a124810f5f03485f6fdfd044c" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; Scalar2 **, base_layout2, TEST_EXECSPACE &gt;</type>
        <definition>using Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::base_type_s2_2d =  Kokkos::View&lt;Scalar2**, base_layout2, TEST_EXECSPACE&gt;</definition>
        <argsstring></argsstring>
        <name>base_type_s2_2d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::base_type_s2_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="237" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a7b8a9b10d7be71abda0bd5b64a053436" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">view_type_s1_1d</ref></type>
        <definition>view_type_s1_1d Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::view_s1_1d</definition>
        <argsstring></argsstring>
        <name>view_s1_1d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::view_s1_1d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="239" column="19" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a6978e1389a679b38de2c68af268a4f89" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">view_type_s2_1d</ref></type>
        <definition>view_type_s2_1d Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::view_s2_1d</definition>
        <argsstring></argsstring>
        <name>view_s2_1d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::view_s2_1d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="240" column="19" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a1e6f40bf4d6f77e2ccf9284ffd855007" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">view_type_s1_2d</ref></type>
        <definition>view_type_s1_2d Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::view_s1_2d</definition>
        <argsstring></argsstring>
        <name>view_s1_2d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::view_s1_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="241" column="19" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1aa0ecc3e6337ff589a5a20d09b2512f48" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">view_type_s2_2d</ref></type>
        <definition>view_type_s2_2d Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::view_s2_2d</definition>
        <argsstring></argsstring>
        <name>view_s2_2d</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::view_s2_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="242" column="19" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1ac27b5b0d40e12df7491ac5f1bd16660d" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; int64_t, TEST_EXECSPACE &gt;</type>
        <definition>Kokkos::View&lt;int64_t, TEST_EXECSPACE&gt; Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::error_count</definition>
        <argsstring></argsstring>
        <name>error_count</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::error_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="244" column="16" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a53013817791175dfeaa85c1c81ffb28e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::create_views</definition>
        <argsstring>(int64_t N0, int64_t N1)</argsstring>
        <name>create_views</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::create_views</qualifiedname>
        <param>
          <type>int64_t</type>
          <declname>N0</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="246" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="246" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a029798639fd533671a5bbb4a6dd785d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION void</type>
        <definition>KOKKOS_FUNCTION void Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::operator()</definition>
        <argsstring>(TagFill, const int64_t i) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::operator()</qualifiedname>
        <param>
          <type><ref refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1_1_tag_fill" kindref="compound">TagFill</ref></type>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="262" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="262" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1af4e91cd2650c4fdc32b8c50783ad44e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION void</type>
        <definition>KOKKOS_FUNCTION void Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::operator()</definition>
        <argsstring>(TagCompare, const int64_t i) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::operator()</qualifiedname>
        <param>
          <type><ref refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1_1_tag_compare" kindref="compound">TagCompare</ref></type>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="269" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="269" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1afb04cde93616127a1c49d28f25a64771" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;::run_tests</definition>
        <argsstring>(int64_t N0, int64_t N1)</argsstring>
        <name>run_tests</name>
        <qualifiedname>Test::Impl::TestDeepCopyScalarConversion::run_tests</qualifiedname>
        <param>
          <type>int64_t</type>
          <declname>N0</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="281" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="281" bodyend="322"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Test::Impl::TestDeepCopyScalarConversion&lt; Scalar1, Scalar2, Layout1, Layout2 &gt;</label>
        <link refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion"/>
        <childnode refid="2" relation="usage">
          <edgelabel>view_s1_1d</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>view_s2_1d</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>view_s1_2d</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>view_s2_2d</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>error_count</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Kokkos::View&lt; Scalar1 **, Layout1, TEST_EXECSPACE &gt;</label>
        <link refid="class_kokkos_1_1_view"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::View&lt; Scalar1 *, Layout1, TEST_EXECSPACE &gt;</label>
        <link refid="class_kokkos_1_1_view"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Kokkos::View&lt; Scalar2 **, Layout2, TEST_EXECSPACE &gt;</label>
        <link refid="class_kokkos_1_1_view"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Kokkos::View&lt; Scalar2 *, Layout2, TEST_EXECSPACE &gt;</label>
        <link refid="class_kokkos_1_1_view"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Kokkos::View&lt; int64_t, TEST_EXECSPACE &gt;</label>
        <link refid="class_kokkos_1_1_view"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Kokkos::ViewTraits&lt; Scalar1 **, Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_view_traits"/>
      </node>
      <node id="3">
        <label>Kokkos::ViewTraits&lt; Scalar1 *, Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_view_traits"/>
      </node>
      <node id="9">
        <label>Kokkos::ViewTraits&lt; Scalar2 **, Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_view_traits"/>
      </node>
      <node id="5">
        <label>Kokkos::ViewTraits&lt; Scalar2 *, Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_view_traits"/>
      </node>
      <node id="11">
        <label>Kokkos::ViewTraits&lt; int64_t, Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_view_traits"/>
      </node>
    </collaborationgraph>
    <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="218" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="218" bodyend="323"/>
    <listofallmembers>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a97cdefef7ad4c5db16d641406ca75367" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>base_layout1</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1abd9e1da6b24fc7e5bc3ce5e8ded6b218" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>base_layout2</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a55a54043a1b0867b32cdf429ff3b3350" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>base_type_s1_1d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a63292b04f5cd63100c4babab8ed1f4b6" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>base_type_s1_2d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a28222b0d30b4116f72794b9249ac5207" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>base_type_s2_1d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a26f2753a124810f5f03485f6fdfd044c" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>base_type_s2_2d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a53013817791175dfeaa85c1c81ffb28e" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>create_views</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1ac27b5b0d40e12df7491ac5f1bd16660d" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>error_count</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a029798639fd533671a5bbb4a6dd785d2" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>operator()</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1af4e91cd2650c4fdc32b8c50783ad44e2" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>operator()</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1afb04cde93616127a1c49d28f25a64771" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>run_tests</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a7b8a9b10d7be71abda0bd5b64a053436" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>view_s1_1d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a1e6f40bf4d6f77e2ccf9284ffd855007" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>view_s1_2d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a6978e1389a679b38de2c68af268a4f89" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>view_s2_1d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1aa0ecc3e6337ff589a5a20d09b2512f48" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>view_s2_2d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a7de27e4eca7346836fd19f836556e3e4" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>view_type_s1_1d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a861fcf2b90892a67dcf0602a305dc9b6" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>view_type_s1_2d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1a3d8752305c3c9e37f19dc7ffda9def45" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>view_type_s2_1d</name></member>
      <member refid="struct_test_1_1_impl_1_1_test_deep_copy_scalar_conversion_1afb8f9b61a7849aa4991698795c193a3a" prot="public" virt="non-virtual"><scope>Test::Impl::TestDeepCopyScalarConversion</scope><name>view_type_s2_2d</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
