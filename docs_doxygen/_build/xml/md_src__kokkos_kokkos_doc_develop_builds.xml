<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="md_src__kokkos_kokkos_doc_develop_builds" kind="page">
    <compoundname>md_src_Kokkos_kokkos_doc_develop_builds</compoundname>
    <title>Places to build options: architecture, device, advanced options, cuda options</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>These are the files that need to be updated when a new architecture or device is added:</para>
<para><itemizedlist>
<listitem><para>generate_makefile.bash<itemizedlist>
<listitem><para>Interface for makefile system</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>cmake/kokkos_options.cmake<itemizedlist>
<listitem><para>Interface for cmake system</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>Makefile.kokkos<itemizedlist>
<listitem><para>Main logic for build (make and cmake) and defines (KokkosCore_config.h)</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para>In general, an architecture is going to be from on of these platforms:<itemizedlist>
<listitem><para>AMD</para>
</listitem><listitem><para>ARM</para>
</listitem><listitem><para>IBM</para>
</listitem><listitem><para>Intel</para>
</listitem><listitem><para>Intel Xeon Phi</para>
</listitem><listitem><para>NVIDIA Although not strictly necessary, it is helpful to keep things organized by grouping by platform.</para>
</listitem></itemizedlist>
</para>
<sect2 id="md_src__kokkos_kokkos_doc_develop_builds_1autotoc_md93">
<title>generate_makefile.sh</title>
<para>The bash code does not do any error checking on the <computeroutput>--arch=</computeroutput> or <computeroutput>--device=</computeroutput> arguments thus strictly speaking you do not <emphasis>need</emphasis> to do anything to add a device or architecture; however, you should add it to the help menu. For the archictectures, please group by one of the platforms listed above.</para>
</sect2>
<sect2 id="md_src__kokkos_kokkos_doc_develop_builds_1autotoc_md94">
<title>cmake/kokkos_options.cmake and cmake/kokkos_settings.cmake</title>
<para>The options for the CMake build system are: <computeroutput>-DKOKKOS_HOST_ARCH:STRING=</computeroutput> and <computeroutput>-DKOKKOS_ENABLE_&lt;device&gt;:BOOL=</computeroutput>. Although any string can be passed into KOKKOS_HOST_ARCH option, it is checked against an accepted list. Likewise, the KOKKOS_ENABLE_&lt;device&gt; must have the option added AND it is formed using the list. Thus:<itemizedlist>
<listitem><para>A new architecture should be added to the KOKKOS_HOST_ARCH_LIST variable.</para>
</listitem><listitem><para>A new device should be added to the KOKKOS_DEVICES_LIST variable <bold>AND</bold> a KOKKOS_ENABLE_&lt;newdevice&gt; option specified (see KOKKOS_ENABLE_CUDA for example).</para>
</listitem><listitem><para>A new device should be added to the KOKKOS_DEVICES_LIST variable <bold>AND</bold> a</para>
</listitem></itemizedlist>
</para>
<para>The translation from option to the <computeroutput>KOKKOS_SETTINGS</computeroutput> is done in <computeroutput>kokkos_settings.cmake</computeroutput>. This translation is automated for some types if you ad to the list, but for others, it may need to be hand coded.</para>
</sect2>
<sect2 id="md_src__kokkos_kokkos_doc_develop_builds_1autotoc_md95">
<title>Makefile.kokkos</title>
<para>This is the main coding used by both the make and cmake system for defining the sources (generated makefile and cmake snippets by <computeroutput>core/src/Makefile</computeroutput>), for setting the defines in KokkosCore_config.h, and defining various internal variables. To understand how to add to this file, you should work closely with the Kokkos development team. </para>
</sect2>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/doc/develop_builds.md"/>
  </compounddef>
</doxygen>
