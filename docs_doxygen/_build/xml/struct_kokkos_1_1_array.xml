<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1_array" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::Array</compoundname>
    <includes refid="_kokkos___array_8hpp" local="no">Kokkos_Array.hpp</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
        <defval>void</defval>
      </param>
      <param>
        <type>size_t</type>
        <declname>N</declname>
        <defname>N</defname>
        <defval>KOKKOS_INVALID_INDEX</defval>
      </param>
      <param>
        <type>class Proxy</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_kokkos_1_1_array_1a45f8e839b9e7feecc80409fff881f25f" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using Kokkos::Array&lt; T, N, Proxy &gt;::reference =  T&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>Kokkos::Array::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="125" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_array_1a24a90d61e65d607c1ce5e4e16aca6b2a" prot="public" static="no">
        <type>typename std::add_const&lt; T &gt;::type &amp;</type>
        <definition>using Kokkos::Array&lt; T, N, Proxy &gt;::const_reference =  typename std::add_const&lt;T&gt;::type&amp;</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <qualifiedname>Kokkos::Array::const_reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="126" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_array_1a0bfca34579404eca82db4e1ffd27471b" prot="public" static="no">
        <type>size_t</type>
        <definition>using Kokkos::Array&lt; T, N, Proxy &gt;::size_type =  size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>Kokkos::Array::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="127" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_array_1a9cefa00dee1425cbbad94fdbad14b2b0" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>using Kokkos::Array&lt; T, N, Proxy &gt;::difference_type =  ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>Kokkos::Array::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="128" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_array_1acecab4a74d1c784b3a459bbc2f311314" prot="public" static="no">
        <type>T</type>
        <definition>using Kokkos::Array&lt; T, N, Proxy &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>Kokkos::Array::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="129" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_array_1a5f967346bddf904ad2fc1e42bb813b59" prot="public" static="no">
        <type>T *</type>
        <definition>using Kokkos::Array&lt; T, N, Proxy &gt;::pointer =  T*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>Kokkos::Array::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="130" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_array_1a39f48eac03d03f75c3e42e79b8515f74" prot="public" static="no">
        <type>typename std::add_const&lt; T &gt;::type *</type>
        <definition>using Kokkos::Array&lt; T, N, Proxy &gt;::const_pointer =  typename std::add_const&lt;T&gt;::type*</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <qualifiedname>Kokkos::Array::const_pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="131" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1_array_1a4db6da208b1ea99e4fc0a6c3979a6d44" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T Kokkos::Array&lt; T, N, Proxy &gt;::m_internal_implementation_private_member_data[N]</definition>
        <argsstring>[N]</argsstring>
        <name>m_internal_implementation_private_member_data</name>
        <qualifiedname>Kokkos::Array::m_internal_implementation_private_member_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The elements of this C array shall not be accessed directly. The data member has to be declared public to enable aggregate initialization as for std::array. We mark it as private in the documentation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="122" column="5" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_kokkos_1_1_array_1a5f780b760f2275a4bcf311427761e7e6" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>static KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Array&lt; T, N, Proxy &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>Kokkos::Array::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="133" column="53" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_array_1add466f692affa7b764b69b4926603c8c" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr bool</type>
        <definition>static KOKKOS_INLINE_FUNCTION constexpr bool Kokkos::Array&lt; T, N, Proxy &gt;::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <qualifiedname>Kokkos::Array::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="134" column="48" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kokkos_1_1_array_1a341681dd28955b3015ae4b5aff373308" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Array&lt; T, N, Proxy &gt;::max_size</definition>
        <argsstring>() const</argsstring>
        <name>max_size</name>
        <qualifiedname>Kokkos::Array::max_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="135" column="46" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_array_1a9cb1a07b3c2386e9d8a0ad11dc24e9a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename iType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION reference</type>
        <definition>KOKKOS_INLINE_FUNCTION reference Kokkos::Array&lt; T, N, Proxy &gt;::operator[]</definition>
        <argsstring>(const iType &amp;i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>Kokkos::Array::operator[]</qualifiedname>
        <param>
          <type>const iType &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="138" column="36" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="138" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_array_1a525d2168a8633cd3e29095fade689cef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename iType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION const_reference</type>
        <definition>KOKKOS_INLINE_FUNCTION const_reference Kokkos::Array&lt; T, N, Proxy &gt;::operator[]</definition>
        <argsstring>(const iType &amp;i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>Kokkos::Array::operator[]</qualifiedname>
        <param>
          <type>const iType &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="147" column="42" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="147" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_array_1afe9391725a9c5d2ff65f62787e39e493" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION pointer</type>
        <definition>KOKKOS_INLINE_FUNCTION pointer Kokkos::Array&lt; T, N, Proxy &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <qualifiedname>Kokkos::Array::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="155" column="34" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_array_1af39c82f9a68858094f888a9305d2ddf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION const_pointer</type>
        <definition>KOKKOS_INLINE_FUNCTION const_pointer Kokkos::Array&lt; T, N, Proxy &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <qualifiedname>Kokkos::Array::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="158" column="40" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="158" bodyend="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Derived from the C++17 &apos;std::array&apos;. Dropping the iterator interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" line="114" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Array.hpp" bodystart="114" bodyend="161"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_array_1a39f48eac03d03f75c3e42e79b8515f74" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>const_pointer</name></member>
      <member refid="struct_kokkos_1_1_array_1a24a90d61e65d607c1ce5e4e16aca6b2a" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>const_reference</name></member>
      <member refid="struct_kokkos_1_1_array_1afe9391725a9c5d2ff65f62787e39e493" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>data</name></member>
      <member refid="struct_kokkos_1_1_array_1af39c82f9a68858094f888a9305d2ddf2" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>data</name></member>
      <member refid="struct_kokkos_1_1_array_1a9cefa00dee1425cbbad94fdbad14b2b0" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>difference_type</name></member>
      <member refid="struct_kokkos_1_1_array_1add466f692affa7b764b69b4926603c8c" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>empty</name></member>
      <member refid="struct_kokkos_1_1_array_1a4db6da208b1ea99e4fc0a6c3979a6d44" prot="private" virt="non-virtual"><scope>Kokkos::Array</scope><name>m_internal_implementation_private_member_data</name></member>
      <member refid="struct_kokkos_1_1_array_1a341681dd28955b3015ae4b5aff373308" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>max_size</name></member>
      <member refid="struct_kokkos_1_1_array_1a9cb1a07b3c2386e9d8a0ad11dc24e9a9" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>operator[]</name></member>
      <member refid="struct_kokkos_1_1_array_1a525d2168a8633cd3e29095fade689cef" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>operator[]</name></member>
      <member refid="struct_kokkos_1_1_array_1a5f967346bddf904ad2fc1e42bb813b59" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>pointer</name></member>
      <member refid="struct_kokkos_1_1_array_1a45f8e839b9e7feecc80409fff881f25f" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>reference</name></member>
      <member refid="struct_kokkos_1_1_array_1a5f780b760f2275a4bcf311427761e7e6" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>size</name></member>
      <member refid="struct_kokkos_1_1_array_1a0bfca34579404eca82db4e1ffd27471b" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>size_type</name></member>
      <member refid="struct_kokkos_1_1_array_1acecab4a74d1c784b3a459bbc2f311314" prot="public" virt="non-virtual"><scope>Kokkos::Array</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
