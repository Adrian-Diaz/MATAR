<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespace_test" kind="namespace" language="C++">
    <compoundname>Test</compoundname>
    <innerclass refid="struct_test_1_1_access_check_kernel" prot="public">Test::AccessCheckKernel</innerclass>
    <innerclass refid="struct_test_1_1array__reduce" prot="public">Test::array_reduce</innerclass>
    <innerclass refid="struct_test_1_1_class_no_shmem_size_function" prot="public">Test::ClassNoShmemSizeFunction</innerclass>
    <innerclass refid="struct_test_1_1_class_with_shmem_size_function" prot="public">Test::ClassWithShmemSizeFunction</innerclass>
    <innerclass refid="class_test_1_1_combined_reduce_functor_same_type" prot="public">Test::CombinedReduceFunctorSameType</innerclass>
    <innerclass refid="struct_test_1_1_concurrent_bitset" prot="public">Test::ConcurrentBitset</innerclass>
    <innerclass refid="struct_test_1_1_copy_functor" prot="public">Test::CopyFunctor</innerclass>
    <innerclass refid="struct_test_1_1_count_test_functor" prot="public">Test::CountTestFunctor</innerclass>
    <innerclass refid="struct_test_1_1_dot_m" prot="public">Test::DotM</innerclass>
    <innerclass refid="struct_test_1_1_dummy_policy" prot="public">Test::DummyPolicy</innerclass>
    <innerclass refid="struct_test_1_1_error_reporter_driver" prot="public">Test::ErrorReporterDriver</innerclass>
    <innerclass refid="struct_test_1_1_error_reporter_driver_base" prot="public">Test::ErrorReporterDriverBase</innerclass>
    <innerclass refid="struct_test_1_1_fence_payload" prot="public">Test::FencePayload</innerclass>
    <innerclass refid="struct_test_1_1_functor___test_half_operators" prot="public">Test::Functor_TestHalfOperators</innerclass>
    <innerclass refid="struct_test_1_1_functor___test_half_volatile_operators" prot="public">Test::Functor_TestHalfVolatileOperators</innerclass>
    <innerclass refid="struct_test_1_1_functor_m_d_range" prot="public">Test::FunctorMDRange</innerclass>
    <innerclass refid="struct_test_1_1_functor_m_d_range_reduce" prot="public">Test::FunctorMDRangeReduce</innerclass>
    <innerclass refid="struct_test_1_1_functor_range" prot="public">Test::FunctorRange</innerclass>
    <innerclass refid="struct_test_1_1_functor_range_reduce" prot="public">Test::FunctorRangeReduce</innerclass>
    <innerclass refid="struct_test_1_1_functor_team" prot="public">Test::FunctorTeam</innerclass>
    <innerclass refid="struct_test_1_1_functor_team_reduce" prot="public">Test::FunctorTeamReduce</innerclass>
    <innerclass refid="struct_test_1_1_hex_grad" prot="public">Test::HexGrad</innerclass>
    <innerclass refid="struct_test_1_1_hierarchical___for_loop___a" prot="public">Test::Hierarchical_ForLoop_A</innerclass>
    <innerclass refid="struct_test_1_1_hierarchical___for_loop___b" prot="public">Test::Hierarchical_ForLoop_B</innerclass>
    <innerclass refid="struct_test_1_1_hierarchical___for_loop___c" prot="public">Test::Hierarchical_ForLoop_C</innerclass>
    <innerclass refid="struct_test_1_1_hierarchical___red___a" prot="public">Test::Hierarchical_Red_A</innerclass>
    <innerclass refid="struct_test_1_1_hierarchical___red___b" prot="public">Test::Hierarchical_Red_B</innerclass>
    <innerclass refid="struct_test_1_1_hierarchical___red___c" prot="public">Test::Hierarchical_Red_C</innerclass>
    <innerclass refid="struct_test_1_1_hierarchical_basics" prot="public">Test::HierarchicalBasics</innerclass>
    <innerclass refid="struct_test_1_1increment" prot="public">Test::increment</innerclass>
    <innerclass refid="class_test_1_1_inner_class" prot="public">Test::InnerClass</innerclass>
    <innerclass refid="struct_test_1_1_inv_norm2" prot="public">Test::InvNorm2</innerclass>
    <innerclass refid="struct_test_1_1long__wrapper" prot="public">Test::long_wrapper</innerclass>
    <innerclass refid="struct_test_1_1_mapping_class_value_type" prot="public">Test::MappingClassValueType</innerclass>
    <innerclass refid="struct_test_1_1_modified_gram_schmidt" prot="public">Test::ModifiedGramSchmidt</innerclass>
    <innerclass refid="struct_test_1_1_multi_dim_range_perf3_d" prot="public">Test::MultiDimRangePerf3D</innerclass>
    <innerclass refid="struct_test_1_1my__complex" prot="public">Test::my_complex</innerclass>
    <innerclass refid="struct_test_1_1_my_complex" prot="public">Test::MyComplex</innerclass>
    <innerclass refid="struct_test_1_1_nested_view" prot="public">Test::NestedView</innerclass>
    <innerclass refid="struct_test_1_1_nested_view_functor" prot="public">Test::NestedViewFunctor</innerclass>
    <innerclass refid="struct_test_1_1_non_trivial_reduce_functor" prot="public">Test::NonTrivialReduceFunctor</innerclass>
    <innerclass refid="class_test_1_1openmp" prot="public">Test::openmp</innerclass>
    <innerclass refid="class_test_1_1openmptarget" prot="public">Test::openmptarget</innerclass>
    <innerclass refid="struct_test_1_1_parallel_for_functor" prot="public">Test::ParallelForFunctor</innerclass>
    <innerclass refid="struct_test_1_1point__t" prot="public">Test::point_t</innerclass>
    <innerclass refid="struct_test_1_1_print_functor1" prot="public">Test::PrintFunctor1</innerclass>
    <innerclass refid="struct_test_1_1_print_functor2" prot="public">Test::PrintFunctor2</innerclass>
    <innerclass refid="struct_test_1_1_range_policy_collapse_all" prot="public">Test::RangePolicyCollapseAll</innerclass>
    <innerclass refid="struct_test_1_1_range_policy_collapse_two" prot="public">Test::RangePolicyCollapseTwo</innerclass>
    <innerclass refid="struct_test_1_1_reduce_functor" prot="public">Test::ReduceFunctor</innerclass>
    <innerclass refid="class_test_1_1_reduce_functor_final" prot="public">Test::ReduceFunctorFinal</innerclass>
    <innerclass refid="class_test_1_1_reduce_functor_final_tag" prot="public">Test::ReduceFunctorFinalTag</innerclass>
    <innerclass refid="struct_test_1_1_reducer_tag" prot="public">Test::ReducerTag</innerclass>
    <innerclass refid="class_test_1_1_reduce_team_functor" prot="public">Test::ReduceTeamFunctor</innerclass>
    <innerclass refid="class_test_1_1_runtime_reduce_functor" prot="public">Test::RuntimeReduceFunctor</innerclass>
    <innerclass refid="class_test_1_1_runtime_reduce_functor_final" prot="public">Test::RuntimeReduceFunctorFinal</innerclass>
    <innerclass refid="class_test_1_1_runtime_reduce_min_max" prot="public">Test::RuntimeReduceMinMax</innerclass>
    <innerclass refid="class_test_1_1_scan_team_functor" prot="public">Test::ScanTeamFunctor</innerclass>
    <innerclass refid="struct_test_1_1_scratch_team_functor" prot="public">Test::ScratchTeamFunctor</innerclass>
    <innerclass refid="struct_test_1_1_set_result_to_view_functor" prot="public">Test::SetResultToViewFunctor</innerclass>
    <innerclass refid="struct_test_1_1_set_view_to_value_functor" prot="public">Test::SetViewToValueFunctor</innerclass>
    <innerclass refid="struct_test_1_1_shared_alloc_destroy" prot="public">Test::SharedAllocDestroy</innerclass>
    <innerclass refid="struct_test_1_1_shared_team_functor" prot="public">Test::SharedTeamFunctor</innerclass>
    <innerclass refid="struct_test_1_1_some_tag" prot="public">Test::SomeTag</innerclass>
    <innerclass refid="struct_test_1_1static__assert__dummy__policy__must__be__size__of__desired__occupancy" prot="public">Test::static_assert_dummy_policy_must_be_size_of_desired_occupancy</innerclass>
    <innerclass refid="struct_test_1_1static__assert__dummy__policy__must__be__size__of__desired__occupancy_3_01sizeof_0e519afacdc6c8327aa7de3d5f887dcb" prot="public">Test::static_assert_dummy_policy_must_be_size_of_desired_occupancy&lt; sizeof(Kokkos::Experimental::DesiredOccupancy), sizeof(Kokkos::Experimental::DesiredOccupancy)&gt;</innerclass>
    <innerclass refid="struct_test_1_1static__assert__dummy__policy__must__be__size__one" prot="public">Test::static_assert_dummy_policy_must_be_size_one</innerclass>
    <innerclass refid="struct_test_1_1static__assert__dummy__policy__must__be__size__one_3_011_01_4" prot="public">Test::static_assert_dummy_policy_must_be_size_one&lt; 1 &gt;</innerclass>
    <innerclass refid="struct_test_1_1_tag_for" prot="public">Test::TagFor</innerclass>
    <innerclass refid="struct_test_1_1_tag_reduce" prot="public">Test::TagReduce</innerclass>
    <innerclass refid="struct_test_1_1_team_scratch" prot="public">Test::TeamScratch</innerclass>
    <innerclass refid="struct_test_1_1test__default__scatter__view" prot="public">Test::test_default_scatter_view</innerclass>
    <innerclass refid="struct_test_1_1test__scatter__view__config" prot="public">Test::test_scatter_view_config</innerclass>
    <innerclass refid="struct_test_1_1test__scatter__view__impl__cls" prot="public">Test::test_scatter_view_impl_cls</innerclass>
    <innerclass refid="struct_test_1_1test__scatter__view__impl__cls_3_01_device_type_00_01_layout_00_01_duplication_00176adc7c2ae694dd5eadf5ee68d57859" prot="public">Test::test_scatter_view_impl_cls&lt; DeviceType, Layout, Duplication, Contribution, Kokkos::Experimental::ScatterMax, NumberType &gt;</innerclass>
    <innerclass refid="struct_test_1_1test__scatter__view__impl__cls_3_01_device_type_00_01_layout_00_01_duplication_00281abdf4a1740155c9df14ce3d265b84" prot="public">Test::test_scatter_view_impl_cls&lt; DeviceType, Layout, Duplication, Contribution, Kokkos::Experimental::ScatterMin, NumberType &gt;</innerclass>
    <innerclass refid="struct_test_1_1test__scatter__view__impl__cls_3_01_device_type_00_01_layout_00_01_duplication_008f929320dc1a8dd2742d99a7d3793c62" prot="public">Test::test_scatter_view_impl_cls&lt; DeviceType, Layout, Duplication, Contribution, Kokkos::Experimental::ScatterProd, NumberType &gt;</innerclass>
    <innerclass refid="struct_test_1_1test__scatter__view__impl__cls_3_01_device_type_00_01_layout_00_01_duplication_00b2c90cb6619fda1048815591fad626a3" prot="public">Test::test_scatter_view_impl_cls&lt; DeviceType, Layout, Duplication, Contribution, Kokkos::Experimental::ScatterSum, NumberType &gt;</innerclass>
    <innerclass refid="class_test_1_1_test_acquire_team_unique_token" prot="public">Test::TestAcquireTeamUniqueToken</innerclass>
    <innerclass refid="struct_test_1_1_test_async_launcher" prot="public">Test::TestAsyncLauncher</innerclass>
    <innerclass refid="struct_test_1_1_test_atomic_view" prot="public">Test::TestAtomicView</innerclass>
    <innerclass refid="struct_test_1_1_test_bug_pow_and_log_complex" prot="public">Test::TestBugPowAndLogComplex</innerclass>
    <innerclass refid="struct_test_1_1_test_complex_basic_math" prot="public">Test::TestComplexBasicMath</innerclass>
    <innerclass refid="struct_test_1_1_test_complex_bessel_h1_function" prot="public">Test::TestComplexBesselH1Function</innerclass>
    <innerclass refid="struct_test_1_1_test_complex_bessel_h2_function" prot="public">Test::TestComplexBesselH2Function</innerclass>
    <innerclass refid="struct_test_1_1_test_complex_bessel_i0_k0_function" prot="public">Test::TestComplexBesselI0K0Function</innerclass>
    <innerclass refid="struct_test_1_1_test_complex_bessel_i1_k1_function" prot="public">Test::TestComplexBesselI1K1Function</innerclass>
    <innerclass refid="struct_test_1_1_test_complex_bessel_j0_y0_function" prot="public">Test::TestComplexBesselJ0Y0Function</innerclass>
    <innerclass refid="struct_test_1_1_test_complex_bessel_j1_y1_function" prot="public">Test::TestComplexBesselJ1Y1Function</innerclass>
    <innerclass refid="struct_test_1_1_test_complex_construction" prot="public">Test::TestComplexConstruction</innerclass>
    <innerclass refid="struct_test_1_1_test_complex_error_function" prot="public">Test::TestComplexErrorFunction</innerclass>
    <innerclass refid="struct_test_1_1_test_complex_special_functions" prot="public">Test::TestComplexSpecialFunctions</innerclass>
    <innerclass refid="struct_test_1_1_test_duplicated_scatter_view" prot="public">Test::TestDuplicatedScatterView</innerclass>
    <innerclass refid="struct_test_1_1_test_dynamic_view" prot="public">Test::TestDynamicView</innerclass>
    <innerclass refid="class_test_1_1_test_dyn_view_a_p_i" prot="public">Test::TestDynViewAPI</innerclass>
    <innerclass refid="struct_test_1_1_test_exponential_intergral1_function" prot="public">Test::TestExponentialIntergral1Function</innerclass>
    <innerclass refid="struct_test_1_1_test_for_functor" prot="public">Test::TestForFunctor</innerclass>
    <innerclass refid="struct_test_1_1_test_functor" prot="public">Test::TestFunctor</innerclass>
    <innerclass refid="struct_test_1_1_test_functor_analysis__03" prot="public">Test::TestFunctorAnalysis_03</innerclass>
    <innerclass refid="struct_test_1_1_test_incr_atomic" prot="public">Test::TestIncrAtomic</innerclass>
    <innerclass refid="struct_test_1_1_test_incr_exec_space" prot="public">Test::TestIncrExecSpace</innerclass>
    <innerclass refid="struct_test_1_1_test_incr_exec_space_typedef" prot="public">Test::TestIncrExecSpaceTypedef</innerclass>
    <innerclass refid="struct_test_1_1_test_incr_memory_space__free" prot="public">Test::TestIncrMemorySpace_free</innerclass>
    <innerclass refid="struct_test_1_1_test_incr_memory_space__malloc" prot="public">Test::TestIncrMemorySpace_malloc</innerclass>
    <innerclass refid="struct_test_1_1_test_large_arg_tag" prot="public">Test::TestLargeArgTag</innerclass>
    <innerclass refid="struct_test_1_1_test_layout" prot="public">Test::TestLayout</innerclass>
    <innerclass refid="struct_test_1_1_test_m_d_range_reduce" prot="public">Test::TestMDRangeReduce</innerclass>
    <innerclass refid="struct_test_1_1_test_none" prot="public">Test::TestNone</innerclass>
    <innerclass refid="struct_test_1_1_test_parallel___for" prot="public">Test::TestParallel_For</innerclass>
    <innerclass refid="class_test_1_1_test_range_policy_construction" prot="public">Test::TestRangePolicyConstruction</innerclass>
    <innerclass refid="struct_test_1_1_test_real_erfcx_tag" prot="public">Test::TestRealErfcxTag</innerclass>
    <innerclass refid="struct_test_1_1_test_red_functor" prot="public">Test::TestRedFunctor</innerclass>
    <innerclass refid="struct_test_1_1_test_reduce_combinatorical_instantiation" prot="public">Test::TestReduceCombinatoricalInstantiation</innerclass>
    <innerclass refid="struct_test_1_1_test_reducers" prot="public">Test::TestReducers</innerclass>
    <innerclass refid="struct_test_1_1_test_reduction" prot="public">Test::TestReduction</innerclass>
    <innerclass refid="struct_test_1_1_test_scan" prot="public">Test::TestScan</innerclass>
    <innerclass refid="struct_test_1_1_test_scan_functor" prot="public">Test::TestScanFunctor</innerclass>
    <innerclass refid="class_test_1_1_test_scan_team" prot="public">Test::TestScanTeam</innerclass>
    <innerclass refid="struct_test_1_1_test_shmem_size" prot="public">Test::TestShmemSize</innerclass>
    <innerclass refid="struct_test_1_1_test_space_namer" prot="public">Test::TestSpaceNamer</innerclass>
    <innerclass refid="struct_test_1_1_test_space_namer_three" prot="public">Test::TestSpaceNamerThree</innerclass>
    <innerclass refid="struct_test_1_1_test_space_namer_two" prot="public">Test::TestSpaceNamerTwo</innerclass>
    <innerclass refid="struct_test_1_1_test_spiller" prot="public">Test::TestSpiller</innerclass>
    <innerclass refid="class_test_1_1_test_team_policy_construction" prot="public">Test::TestTeamPolicyConstruction</innerclass>
    <innerclass refid="struct_test_1_1_test_team_scan" prot="public">Test::TestTeamScan</innerclass>
    <innerclass refid="class_test_1_1_test_triple_nested_reduce" prot="public">Test::TestTripleNestedReduce</innerclass>
    <innerclass refid="class_test_1_1_test_unique_token" prot="public">Test::TestUniqueToken</innerclass>
    <innerclass refid="class_test_1_1_test_view_a_p_i" prot="public">Test::TestViewAPI</innerclass>
    <innerclass refid="struct_test_1_1_test_view_cuda_accessible" prot="public">Test::TestViewCudaAccessible</innerclass>
    <innerclass refid="struct_test_1_1_test_view_cuda_texture" prot="public">Test::TestViewCudaTexture</innerclass>
    <innerclass refid="struct_test_1_1_test_view_h_i_p_accessible" prot="public">Test::TestViewHIPAccessible</innerclass>
    <innerclass refid="struct_test_1_1_test_view_map_operator" prot="public">Test::TestViewMapOperator</innerclass>
    <innerclass refid="struct_test_1_1_test_view_mapping_atomic" prot="public">Test::TestViewMappingAtomic</innerclass>
    <innerclass refid="struct_test_1_1_test_view_mapping_subview" prot="public">Test::TestViewMappingSubview</innerclass>
    <innerclass refid="struct_test_1_1_test_view_mirror" prot="public">Test::TestViewMirror</innerclass>
    <innerclass refid="struct_test_1_1_test_view_operator" prot="public">Test::TestViewOperator</innerclass>
    <innerclass refid="struct_test_1_1_test_view_operator___left_and_right" prot="public">Test::TestViewOperator_LeftAndRight</innerclass>
    <innerclass refid="struct_test_1_1_test_view_operator___left_and_right_3_01_data_type_00_01_device_type_00_011_01_4" prot="public">Test::TestViewOperator_LeftAndRight&lt; DataType, DeviceType, 1 &gt;</innerclass>
    <innerclass refid="struct_test_1_1_test_view_operator___left_and_right_3_01_data_type_00_01_device_type_00_012_01_4" prot="public">Test::TestViewOperator_LeftAndRight&lt; DataType, DeviceType, 2 &gt;</innerclass>
    <innerclass refid="struct_test_1_1_test_view_operator___left_and_right_3_01_data_type_00_01_device_type_00_013_01_4" prot="public">Test::TestViewOperator_LeftAndRight&lt; DataType, DeviceType, 3 &gt;</innerclass>
    <innerclass refid="struct_test_1_1_test_view_operator___left_and_right_3_01_data_type_00_01_device_type_00_014_01_4" prot="public">Test::TestViewOperator_LeftAndRight&lt; DataType, DeviceType, 4 &gt;</innerclass>
    <innerclass refid="struct_test_1_1_test_view_operator___left_and_right_3_01_data_type_00_01_device_type_00_015_01_4" prot="public">Test::TestViewOperator_LeftAndRight&lt; DataType, DeviceType, 5 &gt;</innerclass>
    <innerclass refid="struct_test_1_1_test_view_operator___left_and_right_3_01_data_type_00_01_device_type_00_016_01_4" prot="public">Test::TestViewOperator_LeftAndRight&lt; DataType, DeviceType, 6 &gt;</innerclass>
    <innerclass refid="struct_test_1_1_test_view_operator___left_and_right_3_01_data_type_00_01_device_type_00_017_01_4" prot="public">Test::TestViewOperator_LeftAndRight&lt; DataType, DeviceType, 7 &gt;</innerclass>
    <innerclass refid="struct_test_1_1_test_view_operator___left_and_right_3_01_data_type_00_01_device_type_00_018_01_4" prot="public">Test::TestViewOperator_LeftAndRight&lt; DataType, DeviceType, 8 &gt;</innerclass>
    <innerclass refid="struct_test_1_1_test_view_overload_resolution" prot="public">Test::TestViewOverloadResolution</innerclass>
    <innerclass refid="struct_test_1_1_test_view_s_y_c_l_accessible" prot="public">Test::TestViewSYCLAccessible</innerclass>
    <innerclass refid="struct_test_1_1_thread_scratch" prot="public">Test::ThreadScratch</innerclass>
    <innerclass refid="struct_test_1_1_three_val_report" prot="public">Test::ThreeValReport</innerclass>
    <innernamespace refid="namespace_test_1_1_impl">Test::Impl</innernamespace>
    <innernamespace refid="namespace_test_1_1_reduce_combinatorical">Test::ReduceCombinatorical</innernamespace>
    <innernamespace refid="namespace_test_1_1_test_static_crs_graph">Test::TestStaticCrsGraph</innernamespace>
    <innernamespace refid="namespace_test_1_1_vector_scan_reducer">Test::VectorScanReducer</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_test_1ab2d62903a997c2636c1c71177e980007" prot="public" static="no" strong="no">
        <type></type>
        <name>@33</name>
        <qualifiedname>Test::@33</qualifiedname>
        <enumvalue id="namespace_test_1ab2d62903a997c2636c1c71177e980007a90a544c4bcf9bd4c8cf42ace1b1ea88b" prot="public">
          <name>NUMBER_OF_TRIALS</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTestDriver.hpp" line="62" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTestDriver.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_test_1a3720b4b00779405c5d2a6de23c136760" prot="public" static="no" strong="no">
        <type></type>
        <name>OP_TESTS</name>
        <qualifiedname>Test::OP_TESTS</qualifiedname>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a9b2e2fbd3c214c1cc18101916277ef7a" prot="public">
          <name>ASSIGN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a9f87c5d3d7be1aa389276f9dac22e7ec" prot="public">
          <name>ASSIGN_CHAINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a181f1d2912bacfd0ac1ca11a6a615691" prot="public">
          <name>UNA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a2a6f341adc903b3b6a77f8cdf986e081" prot="public">
          <name>UNS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a93e6147d21058040f6ed81ab84923421" prot="public">
          <name>PREFIX_INC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac7206b720e3fa1b0bb1698b538ab06b5" prot="public">
          <name>PREFIX_DEC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760af94ae5fe7bd9d697331b2cb9828d6f8f" prot="public">
          <name>POSTFIX_INC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aab756c7e1c463553768cac52bf61b638" prot="public">
          <name>POSTFIX_DEC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a80b4e82dd06593ecad1574c54dd0e787" prot="public">
          <name>CADD_H_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac8b37ce1801804e6025b67264407420f" prot="public">
          <name>CADD_H_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ae15ea0f820461ed93a242350c187858c" prot="public">
          <name>CADD_S_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a804864d2b641fd5f7cd8edf5af795c48" prot="public">
          <name>CADD_H_D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760af7ef1e0439413aea7f0474a120dc1741" prot="public">
          <name>CADD_D_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760adc5f7524ebc404adfdbd58abce598491" prot="public">
          <name>CSUB_H_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aee35812d0c8e6d4d13c8559a53111861" prot="public">
          <name>CSUB_H_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a6de9ce0a306bb3291feed0a21534153e" prot="public">
          <name>CSUB_S_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a29a3e3653ab3f151ea7ae09a8c7db3ab" prot="public">
          <name>CSUB_H_D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a2e0164e2f8c767331538a6542ece76c3" prot="public">
          <name>CSUB_D_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ad5abee34a6d8f24bc94710ce43933dfe" prot="public">
          <name>CMUL_H_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a63bc3b4fb4900f899ef2bdf9a77dd83f" prot="public">
          <name>CMUL_H_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760abede0b4ef1b904322c83f4c353fffebd" prot="public">
          <name>CMUL_S_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aa0548c0dd16fb279853e4267bc1c510b" prot="public">
          <name>CMUL_H_D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a65fa5ec408bf94cfbba1a35be4fc45a7" prot="public">
          <name>CMUL_D_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a6834c5c8b468d2b8f448d5e537ffcbe4" prot="public">
          <name>CDIV_H_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aaae078735029702daace6c29b8c1d4f2" prot="public">
          <name>CDIV_H_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a350dd98eaf210ae7e12add93f6fec35e" prot="public">
          <name>CDIV_S_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a462e2e0b3c8cf15958839d63746bbecb" prot="public">
          <name>CDIV_H_D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a2699fbff4f298aa7b981ac32f514692d" prot="public">
          <name>CDIV_D_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a1cb41a66066cb646e6a7061daaf9e76d" prot="public">
          <name>ADD_H_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ae723a768a1b335a0669fb8be48192669" prot="public">
          <name>ADD_H_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a664844f1b809821f7a74ab34e12138dd" prot="public">
          <name>ADD_S_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ab594877b260c81df36705690cd39a096" prot="public">
          <name>ADD_H_D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760acaa83095809534e17c369d306bb4bd3d" prot="public">
          <name>ADD_D_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a77eb04ab78b505243687729dbd9e4087" prot="public">
          <name>ADD_H_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aac0255cbea4447120d51ad3ccdd48de0" prot="public">
          <name>ADD_H_S_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a12020bcb845c945002b68bf78b46e210" prot="public">
          <name>ADD_S_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a0575fff2c14caeccfe2f5580c5a56f7f" prot="public">
          <name>ADD_H_D_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aab6c07e763a7573960486a05b02a3595" prot="public">
          <name>ADD_D_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760acd1b187690bdadacca6e10e63b116271" prot="public">
          <name>ADD_SI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a1a0d577a335dd1e05e26c6d4f8e9b4dc" prot="public">
          <name>ADD_SI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aab56de4aeb3f7b0fb6ebb2da83022637" prot="public">
          <name>ADD_I_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a8e61624aad8a7bb6997f45ebbea5cd39" prot="public">
          <name>ADD_I_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a1184f661d3c3f41f042c779404773c28" prot="public">
          <name>ADD_LI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a6c5cfc02301033955f9acc0de7e2afae" prot="public">
          <name>ADD_LI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a30c9ec31d8b71394014af4a05188fbc7" prot="public">
          <name>ADD_LLI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aa272c1646f66b4eb645e0883dcf3f655" prot="public">
          <name>ADD_LLI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac39108099955c07ba1dab5b2dd88b780" prot="public">
          <name>ADD_USI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a0f6157b39e0f47417549b7cc483e1ff2" prot="public">
          <name>ADD_USI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a4e8dce87d20ffd6c7cf02090685d50a9" prot="public">
          <name>ADD_UI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ab2a03eb51943660f37673ccb6e5fc6ff" prot="public">
          <name>ADD_UI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a099edbf6178f28038c90b1042bbfab81" prot="public">
          <name>ADD_ULI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a7d76ccc5001d4ecbaf16699bf542e446" prot="public">
          <name>ADD_ULI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aa3df21684b85907f00110a28cb0364ec" prot="public">
          <name>ADD_ULLI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ae7531a22d975288c4bee4ca8ed87f354" prot="public">
          <name>ADD_ULLI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a636b0472db806597cb9c45b8097e5e22" prot="public">
          <name>ADD_H_SI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac1b838ec610f7b57d771b86ba544b658" prot="public">
          <name>ADD_H_SI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a9012158ffdfdc2d56d3cdea249538a9d" prot="public">
          <name>ADD_H_I</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a3ce97c70d4b1d450229bfdf46353eec9" prot="public">
          <name>ADD_H_I_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a4fe1a7795bc2e21fd36aa00b4db1c0e9" prot="public">
          <name>ADD_H_LI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a1ddee29bef8711a33244179e5b03bbca" prot="public">
          <name>ADD_H_LI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ae35bc2b53766b71024e2c7291085b519" prot="public">
          <name>ADD_H_LLI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a6f87f3e546e544d5864f0a7e86ad3412" prot="public">
          <name>ADD_H_LLI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a4c907af205e24ea33f35dc9c596bb63a" prot="public">
          <name>ADD_H_USI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a8dcdea9d180429807fdaf297e10e9611" prot="public">
          <name>ADD_H_USI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a891c6a19a14e07eb3195e6617f5c4b42" prot="public">
          <name>ADD_H_UI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ad8aa6c23261c837167e3e129bed9dbc6" prot="public">
          <name>ADD_H_UI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a3b0574b60c0999dbd6c8e7509c62ee0d" prot="public">
          <name>ADD_H_ULI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a67a2f401f32e1dde0a9de898fc840ee4" prot="public">
          <name>ADD_H_ULI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ad7476b805dc957105b32107f2fb225a5" prot="public">
          <name>ADD_H_ULLI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a5972880e90fec85bf9b68bd85f515ce1" prot="public">
          <name>ADD_H_ULLI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ae430b6337e89281d184dee83c968bd62" prot="public">
          <name>SUB_H_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a7e85cf19dfc52cc017a2bab462aae6eb" prot="public">
          <name>SUB_H_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a018601b58d7287dfd26ed78368ee00ee" prot="public">
          <name>SUB_S_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ae69339cfee49f0be39c279caaabd93c7" prot="public">
          <name>SUB_H_D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aa6de3cd21d8b932bdcd39b4a886fc1f1" prot="public">
          <name>SUB_D_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a408556606a484a97471bccc3d80cae8a" prot="public">
          <name>SUB_H_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a89ba7304f7d6f35eddcf389b18103ff3" prot="public">
          <name>SUB_H_S_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760af66f31ec9fd971c398501680c62135b3" prot="public">
          <name>SUB_S_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a420dafe36ef676eb9fe0a6f14fdb23d4" prot="public">
          <name>SUB_H_D_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a3ea2339e49739c80cafca15b6851fe10" prot="public">
          <name>SUB_D_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a13cba7142082d2c3f305ea44bdb091ef" prot="public">
          <name>SUB_SI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ae845705c803eec08c32dc8118a5e5359" prot="public">
          <name>SUB_SI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760af2299488b86fbcd9b34042079ba46376" prot="public">
          <name>SUB_I_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a93a47d6f5964dee3234453549e8a4f57" prot="public">
          <name>SUB_I_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a216dba5ca77ef666a56b086280f7f78f" prot="public">
          <name>SUB_LI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a5e8eb9968d7495ee7a697c2f41fe8d30" prot="public">
          <name>SUB_LI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a8bc657c115d16a4a2f38b108c1448cfa" prot="public">
          <name>SUB_LLI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aeaeace2c7e7f58522bd5761e71ca6032" prot="public">
          <name>SUB_LLI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a4e821243602bc132ef05deba53d83275" prot="public">
          <name>SUB_USI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aa4a227543ecd2ec8ea6f419023845314" prot="public">
          <name>SUB_USI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760abc694549edc35eb376cac1d2f3819093" prot="public">
          <name>SUB_UI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a1ee0d43ac4f54474b0c8585001c66d72" prot="public">
          <name>SUB_UI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a87a99fcda372e7c7adcbe37105852280" prot="public">
          <name>SUB_ULI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac24d2e82ea76d046b4fc7cfbd037cc96" prot="public">
          <name>SUB_ULI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760abd75c74a237e9d10d5ac11af2fae4fda" prot="public">
          <name>SUB_ULLI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a413e1d00481add6fc5421497cbed2d70" prot="public">
          <name>SUB_ULLI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a13ffac9e50a4520f641dd0571d426755" prot="public">
          <name>SUB_H_SI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a16c9f064ce9451539c338282314db437" prot="public">
          <name>SUB_H_SI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760acafa313ab7f4035c14be9b796dc8b215" prot="public">
          <name>SUB_H_I</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760af068dbd4abf985b586ae108b6913e21b" prot="public">
          <name>SUB_H_I_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a70b039afa0fa0e59dfddd6ceec97bdfd" prot="public">
          <name>SUB_H_LI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a94375b196bcaa1f0ba6b1a9a5ba7fa43" prot="public">
          <name>SUB_H_LI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a5803bfcf25494881cda533636bf2f625" prot="public">
          <name>SUB_H_LLI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a45d08b22fee230e1dc15e8665e7045cf" prot="public">
          <name>SUB_H_LLI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aa87c7757d54263bc2d803dea62993ff5" prot="public">
          <name>SUB_H_USI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a62a1b1608481dcb73285efd5b65e184e" prot="public">
          <name>SUB_H_USI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a5ac1c94f102b04361986a01dac673c0f" prot="public">
          <name>SUB_H_UI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a882c5d526a1977862622430dc1fd180d" prot="public">
          <name>SUB_H_UI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a06898de0cff3220389d50d0204346e1e" prot="public">
          <name>SUB_H_ULI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a9530fb4c363d704d9b69c31a6e2ea03d" prot="public">
          <name>SUB_H_ULI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a25d69cb57aebe7afa2a76c72e8b1fa01" prot="public">
          <name>SUB_H_ULLI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a2ebc97ace9d1692620b50c483f00a981" prot="public">
          <name>SUB_H_ULLI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a98ddd07223a21cf7911e1064a5c245da" prot="public">
          <name>MUL_H_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a649934e2d5f841c075e4151649781c6c" prot="public">
          <name>MUL_H_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a365db2b24e73f18dae3931517a6ad8c4" prot="public">
          <name>MUL_S_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760addf9b90ed14f5452b53d9a120669a144" prot="public">
          <name>MUL_H_D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a91569232dfbeff4c56415d7e4bfd89b0" prot="public">
          <name>MUL_D_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a78279e9f7a79815f93187f107baf4808" prot="public">
          <name>MUL_H_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac566affdb3da49c3726aec9b1e9e438a" prot="public">
          <name>MUL_H_S_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a81921b0ee625abba13778838f12376fb" prot="public">
          <name>MUL_S_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760afbd78fedbb735f140cc3cd1f7bc1de69" prot="public">
          <name>MUL_H_D_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ad7e0c417448ead833ab01284cec7f6a8" prot="public">
          <name>MUL_D_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a1c1dbb9034a8fa4cb35899645da7f63f" prot="public">
          <name>MUL_SI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a7114e87953a73424397f4dae89fda79f" prot="public">
          <name>MUL_SI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aa8be89e39f5895bbb8051783c4090e29" prot="public">
          <name>MUL_I_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a5d745924188f66f4639efb30a2c1f764" prot="public">
          <name>MUL_I_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aa4459a9091d3f4d300895769de372359" prot="public">
          <name>MUL_LI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a70f67b351215f2d842534be6f3dc774a" prot="public">
          <name>MUL_LI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aa57f084e95e81dfd18bfaa81360cc498" prot="public">
          <name>MUL_LLI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a644806f83db9c8c2f4eb0160796e65db" prot="public">
          <name>MUL_LLI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a9290f91a7775524eb6675be94e843185" prot="public">
          <name>MUL_USI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac63218177979ed2b425750b51ebe4411" prot="public">
          <name>MUL_USI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760acb9a807788ffe3469e111b42f4840ea4" prot="public">
          <name>MUL_UI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a1373fa4dc496ddbbaface650fdfd82f2" prot="public">
          <name>MUL_UI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a4f772f3488f8b0cd27693408b58e3921" prot="public">
          <name>MUL_ULI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a082f5669d903b1d1d4ac1cd2e6958d85" prot="public">
          <name>MUL_ULI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a360bdd9017d3cd327b6c2c9150d79832" prot="public">
          <name>MUL_ULLI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a40cd1d8a0194994b0e5bb32c80bb4855" prot="public">
          <name>MUL_ULLI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ab1bbeaf4c4173606f5291d4356416848" prot="public">
          <name>MUL_H_SI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a653969a767426bc14f64ed40a4d48021" prot="public">
          <name>MUL_H_SI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a47d722b5ffd4621aca6c7d3805f56e42" prot="public">
          <name>MUL_H_I</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a24c5b075e0f8374ffe16fac02fbee996" prot="public">
          <name>MUL_H_I_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a2f47f068291dfb8eb39e84c0ff5c29dd" prot="public">
          <name>MUL_H_LI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aca50533573cebe7daa68880c91addfa8" prot="public">
          <name>MUL_H_LI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a020ff54a26648587f30d4a623dff8baf" prot="public">
          <name>MUL_H_LLI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a4f4a429aeec135e8d3220b7e6f1da02d" prot="public">
          <name>MUL_H_LLI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a3c35bb7e998b04df2f8ba0d13e88c728" prot="public">
          <name>MUL_H_USI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a24b38fa087beaa2a13528ee48b0d2490" prot="public">
          <name>MUL_H_USI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760af81bd39c0a089a27a576454aa8f583a4" prot="public">
          <name>MUL_H_UI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a2696b855008ffa85439d6def301ba4fd" prot="public">
          <name>MUL_H_UI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a58a3d335277681a7b4c380420f134a46" prot="public">
          <name>MUL_H_ULI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a41e0ffc25a038d4e5af55c5c13923916" prot="public">
          <name>MUL_H_ULI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760adafdf14162f7634cb19d522bbe35426c" prot="public">
          <name>MUL_H_ULLI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a2cbb48f029b604c1f0d9c9524be36106" prot="public">
          <name>MUL_H_ULLI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ad9598c5f14813ed7f3bcc9982f0a0bc4" prot="public">
          <name>DIV_H_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ad4d0bf1117b2e73e651168a045836b89" prot="public">
          <name>DIV_H_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aa0dfa7f172356c12b6a203968983b66f" prot="public">
          <name>DIV_S_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ab1ee74b68967ebc6fe1818697c1cc779" prot="public">
          <name>DIV_H_D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a912728fa38fcb2e8ec149a9eb52bf9cf" prot="public">
          <name>DIV_D_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aaf88642fc8015021535496ac3cf9a21c" prot="public">
          <name>DIV_H_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760afee362491e5157903074c1800df60712" prot="public">
          <name>DIV_H_S_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ab087a2974230bb3ad61854bdcb0755e3" prot="public">
          <name>DIV_S_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aaa17c3989b7012cde6d6f2129acd1d26" prot="public">
          <name>DIV_H_D_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a3b5ad58d07e5f0ae06b94c7a7ad0a8d4" prot="public">
          <name>DIV_D_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a610688a99c4b5292b18dce1053e76479" prot="public">
          <name>DIV_SI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a9d27065f1d1061e8482bb3acb78d0a3b" prot="public">
          <name>DIV_SI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a5b671ae301741d557c578fa9577f7f26" prot="public">
          <name>DIV_I_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a3330277f3d33b3cafe8e6fa74c196444" prot="public">
          <name>DIV_I_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a68fc3343c939ee7e23eee31c5f507edf" prot="public">
          <name>DIV_LI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a8667c04537eb8986d1989ad6012ce8dd" prot="public">
          <name>DIV_LI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a57a07b24057c3e3d83c5de3f212ee70f" prot="public">
          <name>DIV_LLI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a23d24dee2cf43bb0fb4a96def161d546" prot="public">
          <name>DIV_LLI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ab5a8e6faba53c94c7d6f85ea39ace842" prot="public">
          <name>DIV_USI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac06a7690b045aad7569fbbb8f8fd9785" prot="public">
          <name>DIV_USI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a98855668ce44437e8fcee5cbd4e4c4ad" prot="public">
          <name>DIV_UI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ae098acae1abf47ae640074d82d20975b" prot="public">
          <name>DIV_UI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ae1cf8b1f48abcf01cb283d3a33175b6f" prot="public">
          <name>DIV_ULI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ad8ed6acfe55d788fd16926ade293a325" prot="public">
          <name>DIV_ULI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760afa5413ca9e0bbd2dd7f383ac166b37e1" prot="public">
          <name>DIV_ULLI_H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ad70ffc95ff8cf7474ea0cdb2b8349381" prot="public">
          <name>DIV_ULLI_H_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a4995c73208bf71a6ef31c2dee05a0030" prot="public">
          <name>DIV_H_SI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac9af6009511079da906c419de9ce3c51" prot="public">
          <name>DIV_H_SI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a5d88927d207138cbb64cad7666e8b98b" prot="public">
          <name>DIV_H_I</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a9eb0ac444b5ea683c674cce408f1d654" prot="public">
          <name>DIV_H_I_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac2b96496594b27f5d82ec48289ec2891" prot="public">
          <name>DIV_H_LI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a7eebeb00bba42bf3ddf82218a3c13e70" prot="public">
          <name>DIV_H_LI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a9f4f3656f4f3e73bc58ef88bebf505d5" prot="public">
          <name>DIV_H_LLI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a177db734e981c6cdb379108cbce1690b" prot="public">
          <name>DIV_H_LLI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a85df654b20ba8cada96040a05e54bbe1" prot="public">
          <name>DIV_H_USI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a4cbab549f473e1c96773431fe3573a78" prot="public">
          <name>DIV_H_USI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a2093b2798ebae5ae5b18d3f97843ed2f" prot="public">
          <name>DIV_H_UI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a841a03c1b19e55ac0d4acc7e62141d54" prot="public">
          <name>DIV_H_UI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a85b80ef3f290c2bd27b5732c605d3002" prot="public">
          <name>DIV_H_ULI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ac2a5e0af57398c71811eb8616095237b" prot="public">
          <name>DIV_H_ULI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760abd2bcd53ce099fd6f75fd4c544d9a2d4" prot="public">
          <name>DIV_H_ULLI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a87cbb42f6f4825f13d8295f13b2fca89" prot="public">
          <name>DIV_H_ULLI_SZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a7fcb5d6adac47a1e938a496f24ef2e94" prot="public">
          <name>NEG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a26fedc2bd373aa940ee6a45d7c0ad8e6" prot="public">
          <name>AND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760ab2e2f7dd4d543e8751c4a7cb23a14b18" prot="public">
          <name>OR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760adafdea20179be8b4733b7f4be730c1dd" prot="public">
          <name>EQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a913785189846e5b56da87796bca2cb69" prot="public">
          <name>NEQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760acf4c9180f5894f922189556c8d4728fa" prot="public">
          <name>LT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aea3115b16b42b56ea3ee9da61e5645ca" prot="public">
          <name>GT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a4e308d682c1ad0e643624671bfa5d382" prot="public">
          <name>LE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a7f6cc17ea3423cf291e364f23e35540c" prot="public">
          <name>GE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760aea78257faeee7b01108544ac5f01a279" prot="public">
          <name>PASS_BY_REF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a37e1330f3687aba44f01a451f9bac28a" prot="public">
          <name>AO_IMPL_HALF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760abb6de1c577a46542d7f0163ebc89311d" prot="public">
          <name>AO_HALF_T</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_test_1a3720b4b00779405c5d2a6de23c136760a57207669dbc869bd6f427042dfdbd64d" prot="public">
          <name>N_OP_TESTS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" line="60" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" bodystart="60" bodyend="270"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_test_1ab33ba4b8e3e577ab78702917033a8ac2" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; double * &gt;</type>
        <definition>typedef Kokkos::View&lt; ScalarType *, ExecutionSpace &gt; Test::ViewType</definition>
        <argsstring></argsstring>
        <name>ViewType</name>
        <qualifiedname>Test::ViewType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_DebugSerialExecution.cpp" line="50" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_DebugSerialExecution.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_test_1a2e449d3f10c4596aeaf00f00270e035b" prot="public" static="no">
        <type>double</type>
        <definition>typedef int Test::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>Test::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test03a_MemorySpace_malloc.hpp" line="55" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test03a_MemorySpace_malloc.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_test_1ab6606e6da62af27d65a7b775244cfaf7" prot="public" static="no">
        <type>TEST_EXECSPACE</type>
        <definition>using Test::ExecutionSpace = typedef TEST_EXECSPACE</definition>
        <argsstring></argsstring>
        <name>ExecutionSpace</name>
        <qualifiedname>Test::ExecutionSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" line="53" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_test_1a7ee14b741c736f07422412590cd61d01" prot="public" static="no">
        <type>double</type>
        <definition>using Test::ScalarType = typedef double</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <qualifiedname>Test::ScalarType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" line="54" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_test_1a24ae9755e49082cb4041a9dd6d3b9bd1" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; ScalarType *, <ref refid="class_kokkos_1_1_host_space" kindref="compound">Kokkos::HostSpace</ref> &gt;</type>
        <definition>using Test::ViewTypeHost = typedef Kokkos::View&lt;ScalarType*, Kokkos::HostSpace&gt;</definition>
        <argsstring></argsstring>
        <name>ViewTypeHost</name>
        <qualifiedname>Test::ViewTypeHost</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_test_1ab4b71efb6721ae49e918b7b69869e7ac" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy</ref>&lt; TEST_EXECSPACE &gt;</type>
        <definition>using Test::policy_type = typedef Kokkos::TeamPolicy&lt;TEST_EXECSPACE&gt;</definition>
        <argsstring></argsstring>
        <name>policy_type</name>
        <qualifiedname>Test::policy_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" line="94" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_test_1aac9674769cca114c420a68597c8fbe98" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy</ref>&lt; TEST_EXECSPACE, <ref refid="struct_kokkos_1_1_launch_bounds" kindref="compound">Kokkos::LaunchBounds</ref>&lt; 128, 8 &gt; &gt;</type>
        <definition>using Test::policy_type_128_8 = typedef Kokkos::TeamPolicy&lt;TEST_EXECSPACE, Kokkos::LaunchBounds&lt;128, 8&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>policy_type_128_8</name>
        <qualifiedname>Test::policy_type_128_8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" line="95" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_test_1ae4fe59576fa6c7cda5270caad751b3d0" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy</ref>&lt; TEST_EXECSPACE, <ref refid="struct_kokkos_1_1_launch_bounds" kindref="compound">Kokkos::LaunchBounds</ref>&lt; 1024, 2 &gt; &gt;</type>
        <definition>using Test::policy_type_1024_2 = typedef Kokkos::TeamPolicy&lt;TEST_EXECSPACE, Kokkos::LaunchBounds&lt;1024, 2&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>policy_type_1024_2</name>
        <qualifiedname>Test::policy_type_1024_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" line="97" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_test_1afa50f0a9b5832f11e1ba555040c6972d" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_experimental_1_1_logical_memory_space" kindref="compound">Kokkos::Experimental::LogicalMemorySpace</ref>&lt; <ref refid="class_kokkos_1_1_host_space" kindref="compound">Kokkos::HostSpace</ref>, Kokkos::DefaultHostExecutionSpace, <ref refid="struct_test_1_1_test_space_namer" kindref="compound">TestSpaceNamer</ref>, <ref refid="struct_kokkos_1_1_experimental_1_1_logical_space_shares_access_1_1shared__access" kindref="compound">Kokkos::Experimental::LogicalSpaceSharesAccess::shared_access</ref> &gt;</type>
        <definition>using Test::fake_memory_space = typedef Kokkos::Experimental::LogicalMemorySpace&lt; Kokkos::HostSpace, Kokkos::DefaultHostExecutionSpace, TestSpaceNamer, Kokkos::Experimental::LogicalSpaceSharesAccess::shared_access&gt;</definition>
        <argsstring></argsstring>
        <name>fake_memory_space</name>
        <qualifiedname>Test::fake_memory_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="116" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_test_1a37c748c0540556293bb0fbb12652afce" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_experimental_1_1_logical_memory_space" kindref="compound">Kokkos::Experimental::LogicalMemorySpace</ref>&lt; <ref refid="class_kokkos_1_1_host_space" kindref="compound">Kokkos::HostSpace</ref>, Kokkos::DefaultHostExecutionSpace, <ref refid="struct_test_1_1_test_space_namer_three" kindref="compound">TestSpaceNamerThree</ref>, <ref refid="struct_kokkos_1_1_experimental_1_1_logical_space_shares_access_1_1no__shared__access" kindref="compound">Kokkos::Experimental::LogicalSpaceSharesAccess::no_shared_access</ref> &gt;</type>
        <definition>using Test::semantically_independent_logical_space = typedef Kokkos::Experimental::LogicalMemorySpace&lt; Kokkos::HostSpace, Kokkos::DefaultHostExecutionSpace, TestSpaceNamerThree, Kokkos::Experimental::LogicalSpaceSharesAccess::no_shared_access&gt;</definition>
        <argsstring></argsstring>
        <name>semantically_independent_logical_space</name>
        <qualifiedname>Test::semantically_independent_logical_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="178" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_test_1a710f178589656c8405aa2d12ddedef25" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>int Test::num_elements</definition>
        <argsstring></argsstring>
        <name>num_elements</name>
        <qualifiedname>Test::num_elements</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test03a_MemorySpace_malloc.hpp" line="56" column="11" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test03a_MemorySpace_malloc.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_test_1a4981a62b2d9a6b2a3305666f470a7696" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Test::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <qualifiedname>Test::N</qualifiedname>
        <initializer>= 100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test03b_MemorySpace_free.hpp" line="59" column="11" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test03b_MemorySpace_free.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_test_1ad4e13145ae70e7729889858422c818b0" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Test::M</definition>
        <argsstring></argsstring>
        <name>M</name>
        <qualifiedname>Test::M</qualifiedname>
        <initializer>= 100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test03b_MemorySpace_free.hpp" line="60" column="11" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test03b_MemorySpace_free.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_test_1a35cc084db3990ff4096952af3435b18d" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double Test::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Test::value</qualifiedname>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test05_ParallelReduce_RangePolicy.hpp" line="56" column="18" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test05_ParallelReduce_RangePolicy.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_test_1ad631a62b6d1a48fdca2edf35cddab60c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Test::num_buckets</definition>
        <argsstring></argsstring>
        <name>num_buckets</name>
        <qualifiedname>Test::num_buckets</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test17_CompleteAtomic.hpp" line="61" column="11" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test17_CompleteAtomic.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_test_1a926e71f91f2076828c8c505de1ac9b74" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_test_1_1_fence_payload" kindref="compound">FencePayload</ref> &gt;</type>
        <definition>std::vector&lt;FencePayload&gt; Test::found_payloads</definition>
        <argsstring></argsstring>
        <name>found_payloads</name>
        <qualifiedname>Test::found_payloads</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" line="71" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_test_1ac3e139a2b7d7c1f0113d2d82fd8cb711" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Test::num_instances</definition>
        <argsstring></argsstring>
        <name>num_instances</name>
        <qualifiedname>Test::num_instances</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" line="120" column="5" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_test_1a28463656c30372f378799d26fa5ad554" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Test::expected_view_name</definition>
        <argsstring></argsstring>
        <name>expected_view_name</name>
        <qualifiedname>Test::expected_view_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="73" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_test_1a34cdbb7b20ca616dd900602eddab6d39" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Test::expected_space_name</definition>
        <argsstring></argsstring>
        <name>expected_space_name</name>
        <qualifiedname>Test::expected_space_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="74" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_test_1a6b66204d597c10a89553169e6680aa3f" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Test::error_message</definition>
        <argsstring></argsstring>
        <name>error_message</name>
        <qualifiedname>Test::error_message</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="75" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_test_1ac4998884f4929c99fd91512458aa8e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionSpace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_random_xorshift64</definition>
        <argsstring>()</argsstring>
        <name>test_random_xorshift64</name>
        <qualifiedname>Test::test_random_xorshift64</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="585" column="6" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="585" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afe4cb7e42979e3df556f27714ac3a159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionSpace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_random_xorshift1024</definition>
        <argsstring>()</argsstring>
        <name>test_random_xorshift1024</name>
        <qualifiedname>Test::test_random_xorshift1024</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="599" column="6" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" bodystart="599" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a3c4cb4f76eee6ca50c2a1c88d73b6adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, Random_XorShift64)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type><ref refid="class_kokkos_1_1_random___xor_shift64" kindref="compound">Random_XorShift64</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandomCommon.hpp" line="52" column="1" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandomCommon.hpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2540dc9c730b4f4fce1a0462abdcfebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, Random_XorShift1024_0)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>Random_XorShift1024_0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandomCommon.hpp" line="55" column="1" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestRandomCommon.hpp" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acb28299c3738af66b5ffb595efcfa3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, SortUnsigned)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>SortUnsigned</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestSortCommon.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/algorithms/unit_tests/TestSortCommon.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae2decbea0bf526b3237c7e9847e5a9dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_bitset</definition>
        <argsstring>()</argsstring>
        <name>test_bitset</name>
        <qualifiedname>Test::test_bitset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestBitset.hpp" line="184" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestBitset.hpp" bodystart="184" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a451a82fea0f2b8d8a29eff83979872a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, bitset)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>bitset</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestBitset.hpp" line="271" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestBitset.hpp" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6c50f8203bedb2cc14fe9a1b85ee7142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_dualview_combinations</definition>
        <argsstring>(unsigned int size, bool with_init)</argsstring>
        <name>test_dualview_combinations</name>
        <qualifiedname>Test::test_dualview_combinations</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="390" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acc94ebfeec040c3e3c7d54b4d620a205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_dualview_alloc</definition>
        <argsstring>(unsigned int size)</argsstring>
        <name>test_dualview_alloc</name>
        <qualifiedname>Test::test_dualview_alloc</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="396" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab783d68822f122cdeb271ac6dfd1c65d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_dualview_deep_copy</definition>
        <argsstring>()</argsstring>
        <name>test_dualview_deep_copy</name>
        <qualifiedname>Test::test_dualview_deep_copy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="402" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="402" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a100e5b7ef9556062fab016202edcfe03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_dualview_realloc</definition>
        <argsstring>()</argsstring>
        <name>test_dualview_realloc</name>
        <qualifiedname>Test::test_dualview_realloc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="407" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="407" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1abe10017dc7ade1f5ba7dbd909c418e52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_dualview_resize</definition>
        <argsstring>()</argsstring>
        <name>test_dualview_resize</name>
        <qualifiedname>Test::test_dualview_resize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="412" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="412" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a72b3ab26453be89df7e46ec7df08d2a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, dualview_combination)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>dualview_combination</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="416" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="416" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad6872a72d4141cc64150d5ec2a026dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, dualview_alloc)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>dualview_alloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="420" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="420" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2daeeee281dd68ae74fa7d4c1b48b949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, dualview_combinations_without_init)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>dualview_combinations_without_init</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="424" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="424" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5c011b1e1d7eedfed75fe84519c092d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, dualview_deep_copy)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>dualview_deep_copy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="428" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="428" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a74d3b25bac7fb0364e777dd5fc586653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, dualview_realloc)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>dualview_realloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="433" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="433" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a57513dd4bbeb926614379ab722a695f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, dualview_resize)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>dualview_resize</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" line="437" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp" bodystart="437" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1c71e921ca1b262e8a19e38222c21f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, dynamic_view)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>dynamic_view</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDynamicView.hpp" line="246" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDynamicView.hpp" bodystart="246" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a8f22e6044deb76f785275f9e9f33957c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t Test::allocation_count</definition>
        <argsstring>(const Kokkos::DynRankView&lt; T, P... &gt; &amp;view)</argsstring>
        <name>allocation_count</name>
        <qualifiedname>Test::allocation_count</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_dyn_rank_view" kindref="compound">Kokkos::DynRankView</ref>&lt; T, P... &gt; &amp;</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI.hpp" line="60" column="8" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI.hpp" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a3b13f1d1b2a616f3623311353a58726e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, dyn_rank_view_api_generic)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>dyn_rank_view_api_generic</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_generic.hpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_generic.hpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac4c2a97cba8633cc8b3bcc379bb2ff1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, dyn_rank_view_api_operator_rank12345)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>dyn_rank_view_api_operator_rank12345</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_rank12345.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_rank12345.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a9b8861403b0537e94356849f65190bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, dyn_rank_view_api_operator_rank67)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>dyn_rank_view_api_operator_rank67</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_rank67.hpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_rank67.hpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ada516404d361460c27e3b6f52e7670f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType1</type>
          </param>
          <param>
            <type>typename DataType2</type>
          </param>
          <param>
            <type>typename DataType3</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; Test::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ThreeValReport&lt; DataType1, DataType2, DataType3 &gt; &amp;val)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>Test::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="struct_test_1_1_three_val_report" kindref="compound">ThreeValReport</ref>&lt; DataType1, DataType2, DataType3 &gt; &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestErrorReporter.hpp" line="69" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestErrorReporter.hpp" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a545bc4b314e74915916fe721ec28f75a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ReportType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::checkReportersAndReportsAgree</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;reporters, const std::vector&lt; ReportType &gt; &amp;reports)</argsstring>
        <name>checkReportersAndReportsAgree</name>
        <qualifiedname>Test::checkReportersAndReportsAgree</qualifiedname>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>reporters</declname>
        </param>
        <param>
          <type>const std::vector&lt; ReportType &gt; &amp;</type>
          <declname>reports</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestErrorReporter.hpp" line="77" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestErrorReporter.hpp" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7d1ef76ff84040438f805ed67cbdf96a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ErrorReporterDriverType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::TestErrorReporter</definition>
        <argsstring>()</argsstring>
        <name>TestErrorReporter</name>
        <qualifiedname>Test::TestErrorReporter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestErrorReporter.hpp" line="115" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestErrorReporter.hpp" bodystart="115" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a755e2cb5da40c661cfe7c7e6f55209b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, ErrorReporter)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type><ref refid="class_kokkos_1_1_experimental_1_1_error_reporter" kindref="compound">ErrorReporter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestErrorReporter.hpp" line="245" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestErrorReporter.hpp" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab209b145569fa24cc986f2e961682d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_offsetview_construction</definition>
        <argsstring>()</argsstring>
        <name>test_offsetview_construction</name>
        <qualifiedname>Test::test_offsetview_construction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="63" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="63" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a234a8a18e2ddd926ddcb572b7cb33fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_offsetview_unmanaged_construction</definition>
        <argsstring>()</argsstring>
        <name>test_offsetview_unmanaged_construction</name>
        <qualifiedname>Test::test_offsetview_unmanaged_construction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="296" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="296" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4e21207297dec7c8a0bce8f60c5f25bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_offsetview_subview</definition>
        <argsstring>()</argsstring>
        <name>test_offsetview_subview</name>
        <qualifiedname>Test::test_offsetview_subview</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="404" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="404" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aefc6541b649a19b37ce9c752036079d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIt</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class BinaryOperation</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION T</type>
        <definition>KOKKOS_INLINE_FUNCTION T Test::std_accumulate</definition>
        <argsstring>(InputIt first, InputIt last, T init, BinaryOperation op)</argsstring>
        <name>std_accumulate</name>
        <qualifiedname>Test::std_accumulate</qualifiedname>
        <param>
          <type>InputIt</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>last</declname>
        </param>
        <param>
          <type>T</type>
          <declname>init</declname>
        </param>
        <param>
          <type>BinaryOperation</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="586" column="26" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="586" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7eb4b0a4ce6480ccfa37ec3e5d7aedaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION int</type>
        <definition>KOKKOS_INLINE_FUNCTION int Test::element</definition>
        <argsstring>(std::initializer_list&lt; int &gt; il)</argsstring>
        <name>element</name>
        <qualifiedname>Test::element</qualifiedname>
        <param>
          <type>std::initializer_list&lt; int &gt;</type>
          <declname>il</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="594" column="28" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="594" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5722cda3b3d829412efd162468259d71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DEVICE</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_offsetview_offsets_rank1</definition>
        <argsstring>()</argsstring>
        <name>test_offsetview_offsets_rank1</name>
        <qualifiedname>Test::test_offsetview_offsets_rank1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="600" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="600" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acb5d5995a513767456a019cdf359356f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DEVICE</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_offsetview_offsets_rank2</definition>
        <argsstring>()</argsstring>
        <name>test_offsetview_offsets_rank2</name>
        <qualifiedname>Test::test_offsetview_offsets_rank2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="625" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="625" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae97efb07591d836caf4c3427eee850f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DEVICE</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_offsetview_offsets_rank3</definition>
        <argsstring>()</argsstring>
        <name>test_offsetview_offsets_rank3</name>
        <qualifiedname>Test::test_offsetview_offsets_rank3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="655" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="655" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afa6bcdd3087515d7f8dd57768ba4bf1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, offsetview_construction)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>offsetview_construction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="689" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="689" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af269f7052b15ddf69d3d15cd36dfcce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, offsetview_unmanaged_construction)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>offsetview_unmanaged_construction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="693" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="693" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a63ff306b81344abc62a232a8b3daa753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, offsetview_subview)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>offsetview_subview</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="697" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="697" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1adfaf0ee153fe4da2b8cfe90aedd97ac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, offsetview_offsets_rank1)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>offsetview_offsets_rank1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="702" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="702" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa6a908fb99fcf76487cc655393d6699b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, offsetview_offsets_rank2)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>offsetview_offsets_rank2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="706" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="706" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af5cb886a5c0c374e0080750ba9ab2020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, offsetview_offsets_rank3)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>offsetview_offsets_rank3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" line="710" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp" bodystart="710" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a82f0ec180d504ec8147e0de8fb9251b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DeviceType</type>
          </param>
          <param>
            <type>typename ScatterType</type>
          </param>
          <param>
            <type>typename NumberType</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_scatter_view</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>test_scatter_view</name>
        <qualifiedname>Test::test_scatter_view</qualifiedname>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestScatterView.hpp" line="632" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestScatterView.hpp" bodystart="632" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a8fa5429fd8a7a499549b4757253a6711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, scatterview)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>scatterview</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestScatterView.hpp" line="680" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestScatterView.hpp" bodystart="680" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae6791ddaa927e62ed263598765bf2bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, scatterview_devicetype)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>scatterview_devicetype</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestScatterView.hpp" line="710" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestScatterView.hpp" bodystart="710" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1adffb09edbb635e9af9253b24dd116883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, staticcrsgraph)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>staticcrsgraph</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestStaticCrsGraph.hpp" line="280" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestStaticCrsGraph.hpp" bodystart="280" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a741baf5dc333b7a4883ff296b98ed70d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_insert</definition>
        <argsstring>(uint32_t num_nodes, uint32_t num_inserts, uint32_t num_duplicates, bool near)</argsstring>
        <name>test_insert</name>
        <qualifiedname>Test::test_insert</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>num_nodes</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>num_inserts</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>num_duplicates</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>near</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" line="182" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" bodystart="182" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2e6f73bda3ae6ed5786a426682189240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_failed_insert</definition>
        <argsstring>(uint32_t num_nodes)</argsstring>
        <name>test_failed_insert</name>
        <qualifiedname>Test::test_failed_insert</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>num_nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" line="235" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" bodystart="235" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a47f7db5471ade09d44ac36cf4bdad5fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_deep_copy</definition>
        <argsstring>(uint32_t num_nodes)</argsstring>
        <name>test_deep_copy</name>
        <qualifiedname>Test::test_deep_copy</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>num_nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" line="247" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" bodystart="247" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa098ccbae7922be09c7fcecfc032c71e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, UnorderedMap_insert)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>UnorderedMap_insert</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" line="300" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" bodystart="300" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1abed804a872c99803c82cc13981cfa310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, UnorderedMap_failed_insert)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>UnorderedMap_failed_insert</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" line="308" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" bodystart="308" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a51791392ca5122de6340aeffa429eefd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, UnorderedMap_deep_copy)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>UnorderedMap_deep_copy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" line="312" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" bodystart="312" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6007dfbffe6107a44847796afbbe69b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, UnorderedMap_valid_empty)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>UnorderedMap_valid_empty</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" line="316" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" bodystart="316" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aea59db8db0cea8ea7c74a682f2a3bc9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, UnorderedMap_clear_zero_size)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>UnorderedMap_clear_zero_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" line="330" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp" bodystart="330" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab532f03f59a2400a38927aa10877d956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_vector_combinations</definition>
        <argsstring>(unsigned int size)</argsstring>
        <name>test_vector_combinations</name>
        <qualifiedname>Test::test_vector_combinations</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestVector.hpp" line="263" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestVector.hpp" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6af3e09ec76faf5824e5746503915c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
          <param>
            <type>typename Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_vector_allocate</definition>
        <argsstring>(unsigned int size)</argsstring>
        <name>test_vector_allocate</name>
        <qualifiedname>Test::test_vector_allocate</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestVector.hpp" line="269" column="6" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestVector.hpp" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acb0fdd18706e7608209478e6f2bef2d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, vector_combination)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>vector_combination</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestVector.hpp" line="274" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestVector.hpp" bodystart="274" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af587e880d2937af42fe819847ce8631f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, vector_insert)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>vector_insert</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestVector.hpp" line="280" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestVector.hpp" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a984ffb9a2f1bdca5ed4cac0783156ad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, viewctorprop_embedded_dim)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>viewctorprop_embedded_dim</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/unit_tests/TestViewCtorPropEmbeddedDim.hpp" line="210" column="1" bodyfile="src/Kokkos/kokkos/containers/unit_tests/TestViewCtorPropEmbeddedDim.hpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af6d8fae1d49e0c844cd56e00d6b49cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Test::command_line_num_args</definition>
        <argsstring>(int n=0)</argsstring>
        <name>command_line_num_args</name>
        <qualifiedname>Test::command_line_num_args</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTestMain.cpp" line="51" column="5" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTestMain.cpp" bodystart="51" bodyend="55" declfile="src/Kokkos/kokkos/core/perf_test/PerfTest_Category.hpp" declline="52" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a9d17c2cbd22572a9577c044bca7521a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * Test::command_line_arg</definition>
        <argsstring>(int k, char **input_args=nullptr)</argsstring>
        <name>command_line_arg</name>
        <qualifiedname>Test::command_line_arg</qualifiedname>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>input_args</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTestMain.cpp" line="57" column="12" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTestMain.cpp" bodystart="57" bodyend="64" declfile="src/Kokkos/kokkos/core/perf_test/PerfTest_Category.hpp" declline="53" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab43d6869d5300fd791348e8871b46821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, overlap_range_policy)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>overlap_range_policy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ExecSpacePartitioning.cpp" line="130" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ExecSpacePartitioning.cpp" bodystart="130" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a756869b0d28af918959d92dc05ea0172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, overlap_mdrange_policy)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>overlap_mdrange_policy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ExecSpacePartitioning.cpp" line="291" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ExecSpacePartitioning.cpp" bodystart="291" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7be8f658e30ece61e4310b40a5586fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, overlap_team_policy)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>overlap_team_policy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ExecSpacePartitioning.cpp" line="470" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ExecSpacePartitioning.cpp" bodystart="470" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a806e24ceafd5326876c744e6ac5c4d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_allocateview_tests</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_allocateview_tests</name>
        <qualifiedname>Test::run_allocateview_tests</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewAllocate.cpp" line="53" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewAllocate.cpp" bodystart="53" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a998fa9f04641fc27d85677a4273dbd26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewCreate)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewCreate</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewAllocate.cpp" line="154" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewAllocate.cpp" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ada6f89dbffd9a0a3f2682e099b08d56d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ViewTypeA</type>
          </param>
          <param>
            <type>class ViewTypeB</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Test::deepcopy_view</definition>
        <argsstring>(ViewTypeA &amp;a, ViewTypeB &amp;b, int repeat)</argsstring>
        <name>deepcopy_view</name>
        <qualifiedname>Test::deepcopy_view</qualifiedname>
        <param>
          <type>ViewTypeA &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ViewTypeB &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>repeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" line="53" column="8" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a963fe0c7f8e84aeaaae8a3aed0214b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LayoutA</type>
          </param>
          <param>
            <type>class LayoutB</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_deepcopyview_tests123</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_deepcopyview_tests123</name>
        <qualifiedname>Test::run_deepcopyview_tests123</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" line="63" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" bodystart="63" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1accc70145a5bc76e664309295a5d99c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LayoutA</type>
          </param>
          <param>
            <type>class LayoutB</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_deepcopyview_tests45</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_deepcopyview_tests45</name>
        <qualifiedname>Test::run_deepcopyview_tests45</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" line="113" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" bodystart="113" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a526dcea47eee3456221fecccdede1b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LayoutA</type>
          </param>
          <param>
            <type>class LayoutB</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_deepcopyview_tests6</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_deepcopyview_tests6</name>
        <qualifiedname>Test::run_deepcopyview_tests6</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" line="155" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" bodystart="155" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a369edbb9a556ea164bd7968d97f67b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LayoutA</type>
          </param>
          <param>
            <type>class LayoutB</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_deepcopyview_tests7</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_deepcopyview_tests7</name>
        <qualifiedname>Test::run_deepcopyview_tests7</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" line="190" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" bodystart="190" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1d8678c6226e3834b11817f19a088943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LayoutA</type>
          </param>
          <param>
            <type>class LayoutB</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_deepcopyview_tests8</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_deepcopyview_tests8</name>
        <qualifiedname>Test::run_deepcopyview_tests8</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" line="225" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp" bodystart="225" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a950259825549222b787931310004b931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_LeftLeft_Rank123)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_LeftLeft_Rank123</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_a123.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_a123.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7324b631223d4806660ba9c1709a9938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_LeftLeft_Rank45)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_LeftLeft_Rank45</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_a45.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_a45.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a74684fac06f100217492d90a59f28b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_LeftLeft_Rank6)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_LeftLeft_Rank6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_a6.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_a6.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a8f68f83ec3f3902079834a2fd701c717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_LeftLeft_Rank7)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_LeftLeft_Rank7</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_a7.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_a7.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a316c0c2ab3d99de73498374a1cde3576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_LeftLeft_Rank8)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_LeftLeft_Rank8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_a8.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_a8.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae16f8439dff78ace59b337faf8ff8c14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_RightRight_Rank123)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_RightRight_Rank123</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_b123.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_b123.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab478c74e3ef1672546286f9d3b451305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_RightRight_Rank45)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_RightRight_Rank45</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_b45.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_b45.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4754abe9997041d82ce166023201d3a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_RightRight_Rank6)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_RightRight_Rank6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_b6.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_b6.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab70d58727a5dbdad22c4c84f20e7145e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_RightRight_Rank7)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_RightRight_Rank7</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_b7.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_b7.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a9fd4788ec79abf8c0aaf291c2cb09406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_RightRight_Rank8)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_RightRight_Rank8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_b8.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_b8.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a76a0168fe6f03c243ee15e26da37d2c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_LeftRight_Rank123)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_LeftRight_Rank123</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_c123.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_c123.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa83b8b82a5ab8345a8cb126bba9c96fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_LeftRight_Rank45)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_LeftRight_Rank45</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_c45.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_c45.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab67b2aac49cdb1fa62f18082416b3325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_LeftRight_Rank6)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_LeftRight_Rank6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_c6.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_c6.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2353222c7d05fa5b58d95ad63b737004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_LeftRight_Rank7)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_LeftRight_Rank7</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_c7.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_c7.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a0576c83383848ab611153ddd0b56c207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_LeftRight_Rank8)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_LeftRight_Rank8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_c8.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_c8.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a9f4487864a7836a8579faa8ac386f971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_RightLeft_Rank123)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_RightLeft_Rank123</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_d123.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_d123.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac90ef1ca3f2ae69a7accdfb8e736f5c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_RightLeft_Rank45)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_RightLeft_Rank45</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_d45.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_d45.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a71bcb8be7d7cabe905f5705e795ed9b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_RightLeft_Rank6)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_RightLeft_Rank6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_d6.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_d6.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2d447b283f959a3cf27d075fd95ba09a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_RightLeft_Rank7)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_RightLeft_Rank7</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_d7.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_d7.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a9bb3debc83e00ea74acaa35ca8177a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewDeepCopy_RightLeft_Rank8)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewDeepCopy_RightLeft_Rank8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_d8.cpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy_d8.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab8f89aa1c2b4a771009568dd801c3f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ViewType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Test::fill_view</definition>
        <argsstring>(ViewType &amp;a, typename ViewType::const_value_type &amp;val, int repeat)</argsstring>
        <name>fill_view</name>
        <qualifiedname>Test::fill_view</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_view" kindref="compound">ViewType</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>typename ViewType::const_value_type &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>repeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" line="53" column="8" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" bodystart="53" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a0cda771e252bd9fde76dc34d7cc6bbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_fillview_tests123</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_fillview_tests123</name>
        <qualifiedname>Test::run_fillview_tests123</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" line="64" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" bodystart="64" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a912813692797788fd0bd36a7f17e8095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_fillview_tests45</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_fillview_tests45</name>
        <qualifiedname>Test::run_fillview_tests45</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" line="109" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" bodystart="109" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a64eecd4739d21cf1233639714c400c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_fillview_tests6</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_fillview_tests6</name>
        <qualifiedname>Test::run_fillview_tests6</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" line="147" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" bodystart="147" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a522d801f9b8766ac58d85ad32a951a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_fillview_tests7</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_fillview_tests7</name>
        <qualifiedname>Test::run_fillview_tests7</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" line="179" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" bodystart="179" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad59d7d99e0ad904205150435468f9838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_fillview_tests8</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_fillview_tests8</name>
        <qualifiedname>Test::run_fillview_tests8</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" line="211" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp" bodystart="211" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a95b8f7e65df008f568bd1be3c24cf3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewFill_Rank123)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewFill_Rank123</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill_123.cpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill_123.cpp" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a64ace7cc3f10954f7ef4ae9773198271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewFill_Rank45)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewFill_Rank45</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill_45.cpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill_45.cpp" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a181a67a4e6933d6a7db4ea6d78e8656b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewFill_Rank6)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewFill_Rank6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill_6.cpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill_6.cpp" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a63a0b69961a1f8871d807f2c9cf2e9c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewFill_Rank7)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewFill_Rank7</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill_7.cpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill_7.cpp" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a34f3aad851f8e62b3133415f2fe1ed41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewFill_Rank8)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewFill_Rank8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill_8.cpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill_8.cpp" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7757fc1e3b66c27f3c3d6c125738d485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_resizeview_tests123</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_resizeview_tests123</name>
        <qualifiedname>Test::run_resizeview_tests123</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp" line="53" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp" bodystart="53" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa339a342161d5ddb73c3c5f93936f378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_resizeview_tests45</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_resizeview_tests45</name>
        <qualifiedname>Test::run_resizeview_tests45</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp" line="151" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp" bodystart="151" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aad9d8ffcdc4e17dc77e146cef69c2b0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_resizeview_tests6</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_resizeview_tests6</name>
        <qualifiedname>Test::run_resizeview_tests6</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp" line="228" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp" bodystart="228" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afd323b752047cbc7c45b90880f5a9378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_resizeview_tests7</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_resizeview_tests7</name>
        <qualifiedname>Test::run_resizeview_tests7</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp" line="281" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp" bodystart="281" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aafae525f418fb90cfd45f0222f23bb96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_resizeview_tests8</definition>
        <argsstring>(int N, int R)</argsstring>
        <name>run_resizeview_tests8</name>
        <qualifiedname>Test::run_resizeview_tests8</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp" line="334" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp" bodystart="334" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1adaf3c5de5b8db7a0a54e2a590a890684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewResize_Rank123)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewResize_Rank123</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize_123.cpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize_123.cpp" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1abea15d38e48fd9bf65a730961f183e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewResize_Rank_45)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewResize_Rank_45</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize_45.cpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize_45.cpp" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afd779218a14279f47170f21fb2c43ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewResize_Rank6)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewResize_Rank6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize_6.cpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize_6.cpp" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a15be7375b7212f1c3ba67a06ff0c638d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewResize_Rank7)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewResize_Rank7</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize_7.cpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize_7.cpp" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a45a4feb36d61f0396248674a8fc9e21c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, ViewResize_Rank8)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>ViewResize_Rank8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize_8.cpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize_8.cpp" bodystart="49" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6c0a217766f36094c9f2fb0ffebd9393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DeviceType</type>
          </param>
          <param>
            <type>class LayoutType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_test_mdrange</definition>
        <argsstring>(int exp_beg, int exp_end, const char deviceTypeName[], int range_offset=0, int tile_offset=0)</argsstring>
        <name>run_test_mdrange</name>
        <qualifiedname>Test::run_test_mdrange</qualifiedname>
        <param>
          <type>int</type>
          <declname>exp_beg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exp_end</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>deviceTypeName</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>range_offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>tile_offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTestDriver.hpp" line="65" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTestDriver.hpp" bodystart="65" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a60f24e8fd044efc556ff0351c01b5d3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VectorView</type>
          </param>
          <param>
            <type>class ValueView</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::invnorm2</definition>
        <argsstring>(const VectorView &amp;x, const ValueView &amp;r, const ValueView &amp;r_inv)</argsstring>
        <name>invnorm2</name>
        <qualifiedname>Test::invnorm2</qualifiedname>
        <param>
          <type>const VectorView &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const ValueView &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const ValueView &amp;</type>
          <declname>r_inv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTestGramSchmidt.cpp" line="79" column="13" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTestGramSchmidt.cpp" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aeeb9675943da6b7be63cb416f9ce2e88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VectorView</type>
          </param>
          <param>
            <type>class ValueView</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::dot_neg</definition>
        <argsstring>(const VectorView &amp;x, const VectorView &amp;y, const ValueView &amp;r, const ValueView &amp;r_neg)</argsstring>
        <name>dot_neg</name>
        <qualifiedname>Test::dot_neg</qualifiedname>
        <param>
          <type>const VectorView &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const VectorView &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const ValueView &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const ValueView &amp;</type>
          <declname>r_neg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTestGramSchmidt.cpp" line="105" column="13" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTestGramSchmidt.cpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4360054b4a27a7dbfee8df2ec5b0a4d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DeviceType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_test_gramschmidt</definition>
        <argsstring>(int exp_beg, int exp_end, int num_trials, const char deviceTypeName[])</argsstring>
        <name>run_test_gramschmidt</name>
        <qualifiedname>Test::run_test_gramschmidt</qualifiedname>
        <param>
          <type>int</type>
          <declname>exp_beg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exp_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_trials</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>deviceTypeName</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTestGramSchmidt.cpp" line="203" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTestGramSchmidt.cpp" bodystart="203" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1abd59a9bc9b7e1b4a817166cc688ebd36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, gramschmidt)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>gramschmidt</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTestGramSchmidt.cpp" line="238" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTestGramSchmidt.cpp" bodystart="238" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a8201a6420f6545a2df11c78735aaa8ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DeviceType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::run_test_hexgrad</definition>
        <argsstring>(int exp_beg, int exp_end, int num_trials, const char deviceTypeName[])</argsstring>
        <name>run_test_hexgrad</name>
        <qualifiedname>Test::run_test_hexgrad</qualifiedname>
        <param>
          <type>int</type>
          <declname>exp_beg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exp_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_trials</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>deviceTypeName</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTestHexGrad.cpp" line="253" column="6" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTestHexGrad.cpp" bodystart="253" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2e1db67d4e4b93dca336d6c3ebf0416e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(default_exec, hexgrad)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>default_exec</type>
        </param>
        <param>
          <type>hexgrad</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/perf_test/PerfTestHexGrad.cpp" line="287" column="1" bodyfile="src/Kokkos/kokkos/core/perf_test/PerfTestHexGrad.cpp" bodystart="287" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a34543bd4421202a93a6901593747661a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(cuda, debug_pin_um_to_host)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>cuda</type>
        </param>
        <param>
          <type>debug_pin_um_to_host</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_DebugPinUVMSpace.cpp" line="72" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_DebugPinUVMSpace.cpp" bodystart="72" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acd8af8b7c70242b46e9347b758d7c65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(cuda, debug_serial_execution)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>cuda</type>
        </param>
        <param>
          <type>debug_serial_execution</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_DebugSerialExecution.cpp" line="111" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_DebugSerialExecution.cpp" bodystart="111" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afaa0571753ffdc5bcbb2e430f134a692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void Test::offset</definition>
        <argsstring>(int *p)</argsstring>
        <name>offset</name>
        <qualifiedname>Test::offset</qualifiedname>
        <param>
          <type>int *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_InterOp_Init.cpp" line="52" column="17" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_InterOp_Init.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acf6af9a944b246d977feb95af277247f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(cuda, raw_cuda_interop)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>cuda</type>
        </param>
        <param>
          <type>raw_cuda_interop</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_InterOp_Init.cpp" line="61" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_InterOp_Init.cpp" bodystart="61" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad25c09207aa0b8d2a5b123b267ad97ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(cuda, raw_cuda_streams)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>cuda</type>
        </param>
        <param>
          <type>raw_cuda_streams</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_InterOp_Streams.cpp" line="50" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_InterOp_Streams.cpp" bodystart="50" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a222ca150353fb39198595c67c4c29f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void Test::test_abort</definition>
        <argsstring>()</argsstring>
        <name>test_abort</name>
        <qualifiedname>Test::test_abort</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" line="50" column="17" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5987271116183571aed93d1e200f17fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void Test::test_cuda_spaces_int_value</definition>
        <argsstring>(int *ptr)</argsstring>
        <name>test_cuda_spaces_int_value</name>
        <qualifiedname>Test::test_cuda_spaces_int_value</qualifiedname>
        <param>
          <type>int *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" line="52" column="17" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a35f92621c57292ffbf0bb831746afd0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(cuda, space_access)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>cuda</type>
        </param>
        <param>
          <type>space_access</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" line="58" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" bodystart="58" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aaf13d6243b88507fd167cedab350536d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(cuda, uvm)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>cuda</type>
        </param>
        <param>
          <type>uvm</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" line="262" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" bodystart="262" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a01fa3c40a1147678988e1cd111cc32ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(cuda, impl_view_accessible)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>cuda</type>
        </param>
        <param>
          <type>impl_view_accessible</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" line="315" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" bodystart="315" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1abc0a7b92ef35772d1a46b762949dace3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(cuda, impl_view_texture)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>cuda</type>
        </param>
        <param>
          <type>impl_view_texture</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" line="370" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_Spaces.cpp" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a82478b50508a4bad2e46a7daa6ee04a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(cuda, team_scratch_1_streams)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>cuda</type>
        </param>
        <param>
          <type>team_scratch_1_streams</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_TeamScratchStreams.cpp" line="134" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/cuda/TestCuda_TeamScratchStreams.cpp" bodystart="134" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7f76cdd0d58b089b5e1126a075629314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, development_test)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>development_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceDevelop.cpp" line="54" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceDevelop.cpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6dbf98f816698d216b32777142033d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, host_space_access)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>host_space_access</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType.cpp" bodystart="56" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a306eec549d45625a23bcec4030f07cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, reduce_instantiation_a1)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>reduce_instantiation_a1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_a1.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_a1.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a40d3f1308af24366ea99ac024bbce02a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, reduce_instantiation_a2)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>reduce_instantiation_a2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_a2.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_a2.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a19f64dd219bfe6fa5b9b617c3b140542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, reduce_instantiation_a3)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>reduce_instantiation_a3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_a3.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_a3.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aea34bd9e6f21791175d6f6045166fdde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, reduce_instantiation_b1)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>reduce_instantiation_b1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_b1.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_b1.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a496dc7bda3c663410f5170e54f834d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, reduce_instantiation_b2)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>reduce_instantiation_b2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_b2.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_b2.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae727969d316890766793b3884e45747c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, reduce_instantiation_b3)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>reduce_instantiation_b3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_b3.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_b3.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2407eafecae85c4e931d005664999416" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, reduce_instantiation_c1)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>reduce_instantiation_c1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_c1.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_c1.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aaa125190dc65aa6785c426d0ee90fe0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, reduce_instantiation_c2)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>reduce_instantiation_c2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_c2.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_c2.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a327d41da8f4fcd9530dac3ec37c0fb79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, reduce_instantiation_c3)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>reduce_instantiation_c3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_c3.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_c3.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa05b241395bca35136f0978526f676dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, malloc)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>malloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_d.cpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceType_d.cpp" bodystart="56" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a191852c2636dbf03bb17ea88216d82c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(kokkosresize, host_space_access)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>kokkosresize</type>
        </param>
        <param>
          <type>host_space_access</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceTypeResize.cpp" line="50" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/default/TestDefaultDeviceTypeResize.cpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac4c1f20c0896c37e2789020e3183345d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(hip, async_launcher)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>hip</type>
        </param>
        <param>
          <type>async_launcher</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_AsyncLauncher.cpp" line="67" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_AsyncLauncher.cpp" bodystart="67" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1abdfe1a2353e3f04aaf33f02e0c3a5755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(hip, preferred_blocksize_deduction)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>hip</type>
        </param>
        <param>
          <type>preferred_blocksize_deduction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_BlocksizeDeduction.cpp" line="80" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_BlocksizeDeduction.cpp" bodystart="80" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a72392b53b90c8cb17603d3d24ac7503c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(hip, raw_hip_interop)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>hip</type>
        </param>
        <param>
          <type>raw_hip_interop</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_InterOp_Init.cpp" line="61" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_InterOp_Init.cpp" bodystart="61" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afc6076f94b0dd9ca7a1b8648afc1f9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(hip, raw_hip_streams)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>hip</type>
        </param>
        <param>
          <type>raw_hip_streams</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_InterOp_Streams.cpp" line="52" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_InterOp_Streams.cpp" bodystart="52" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad7c1132cecd256e45f26dc490906127c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void Test::test_hip_spaces_int_value</definition>
        <argsstring>(int *ptr)</argsstring>
        <name>test_hip_spaces_int_value</name>
        <qualifiedname>Test::test_hip_spaces_int_value</qualifiedname>
        <param>
          <type>int *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_Spaces.cpp" line="52" column="17" bodyfile="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_Spaces.cpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a987d045eb52b10b34c903db2e653851e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(hip, space_access)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>hip</type>
        </param>
        <param>
          <type>space_access</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_Spaces.cpp" line="58" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_Spaces.cpp" bodystart="58" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a3552063a1a329a258b76a0e87d34c6f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(hip, impl_view_accessible)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>hip</type>
        </param>
        <param>
          <type>impl_view_accessible</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_Spaces.cpp" line="222" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_Spaces.cpp" bodystart="222" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a641db32297e9365de8da85130bd88729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(hip, team_scratch_1_streams)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>hip</type>
        </param>
        <param>
          <type>team_scratch_1_streams</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_TeamScratchStreams.cpp" line="139" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/hip/TestHIP_TeamScratchStreams.cpp" bodystart="139" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af55a4cffa487e491cdc411d9c1545d4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(hpx, raw_hpx_interop)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>hpx</type>
        </param>
        <param>
          <type>raw_hpx_interop</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/hpx/TestHPX_InterOp.cpp" line="52" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/hpx/TestHPX_InterOp.cpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa9c9f950bf18d448891330540824bd21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_01_execspace_typedef)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_01_execspace_typedef</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test01_execspace.hpp" line="101" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test01_execspace.hpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa8f05ce30750b2f36884e8939cee24b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_01_execspace)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_01_execspace</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test01_execspace.hpp" line="106" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test01_execspace.hpp" bodystart="106" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7fe711e15e2ec02aca9d1cdc418a65fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_02_AtomicExchange)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_02_AtomicExchange</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test02_atomic_host.hpp" line="81" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test02_atomic_host.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a964659b060d82a0e8f87f40c8793b8a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_02_AtomicAdd)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_02_AtomicAdd</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test02_atomic_host.hpp" line="86" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test02_atomic_host.hpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a31dc944410314880af8f14bc1d90190d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_02_AtomicSub)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_02_AtomicSub</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test02_atomic_host.hpp" line="91" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test02_atomic_host.hpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a0ec7a60cebe815273f93d070432bd8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_03a_memspace_malloc)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_03a_memspace_malloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test03a_MemorySpace_malloc.hpp" line="75" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test03a_MemorySpace_malloc.hpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af0340f12db5d3e98926e60feb841247f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_03b_memspace_free)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_03b_memspace_free</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test03b_MemorySpace_free.hpp" line="78" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test03b_MemorySpace_free.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aafdf2256f5fd094a523e287639eda97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_04_simple_parallelFor)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_04_simple_parallelFor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="160" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="160" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afc9ee1535677984c903c39f9e8d9ccb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_04_RangePolicy_parallelFor)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_04_RangePolicy_parallelFor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="167" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acb0bb7c65e3b44c099d12a8e489fe3ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_05_reduction)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_05_reduction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test05_ParallelReduce_RangePolicy.hpp" line="138" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test05_ParallelReduce_RangePolicy.hpp" bodystart="138" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a38a6ac0195a273dbd7f2ec5f1f259e88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_06_mdrange2D)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_06_mdrange2D</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="250" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad9cf213c91a277f25b4fb7c39f894d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_06_mdrange3D)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_06_mdrange3D</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="256" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4e100968d038c6f61b1c9b0d5fa00fbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_06_mdrange4D)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_06_mdrange4D</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" line="262" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acc359f1deee979b2bbba44731ebce8f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_08_deep_copy_2D)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_08_deep_copy_2D</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test08_deep_copy.hpp" line="184" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test08_deep_copy.hpp" bodystart="184" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a9cf1b2544eb662b83ecbd7057d2c6e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_08_deep_copy_3D)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_08_deep_copy_3D</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test08_deep_copy.hpp" line="192" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test08_deep_copy.hpp" bodystart="192" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac65754ed54ab9cbfe8fb5f2e5d9a697c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_08_deep_copy_4D)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_08_deep_copy_4D</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test08_deep_copy.hpp" line="200" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test08_deep_copy.hpp" bodystart="200" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5bf3d02ef82810db48fa19fa10ab84c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_10_Hierarchical_Basics)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_10_Hierarchical_Basics</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test10_HierarchicalBasics.hpp" line="95" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test10_HierarchicalBasics.hpp" bodystart="95" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa7a0ff59b0a73ffef144cc2ef000260e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_11a_Hierarchical_ForLoop)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_11a_Hierarchical_ForLoop</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test11a_ParallelFor_TeamThreadRange.hpp" line="92" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test11a_ParallelFor_TeamThreadRange.hpp" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af8954c1f847180f21925f8f333cacff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_11b_Hierarchical_ForLoop)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_11b_Hierarchical_ForLoop</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test11b_ParallelFor_TeamVectorRange.hpp" line="92" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test11b_ParallelFor_TeamVectorRange.hpp" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aed3fed098f4449c47fe2700abf8be66b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_11c_Hierarchical_ForLoop)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_11c_Hierarchical_ForLoop</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test11c_ParallelFor_ThreadVectorRange.hpp" line="98" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test11c_ParallelFor_ThreadVectorRange.hpp" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5ad0dd4dd0d26bae3d3670fb02d1dbbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_12a_ThreadScratch)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_12a_ThreadScratch</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test12a_ThreadScratch.hpp" line="127" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test12a_ThreadScratch.hpp" bodystart="127" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1affaf7a77585f1da09ec356d97229f983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_12b_TeamScratch)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_12b_TeamScratch</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test12b_TeamScratch.hpp" line="117" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test12b_TeamScratch.hpp" bodystart="117" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1adfca22d9b3977311a1f2c4ee8952cbfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_13a_Hierarchical_Red)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_13a_Hierarchical_Red</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test13a_ParallelRed_TeamThreadRange.hpp" line="98" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test13a_ParallelRed_TeamThreadRange.hpp" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6e183a38a00f3defd295762a3e5c702c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_13b_Hierarchical_Red)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_13b_Hierarchical_Red</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test13b_ParallelRed_TeamVectorRange.hpp" line="95" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test13b_ParallelRed_TeamVectorRange.hpp" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afe034a09edf3771a62a5f0afd702b770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_13c_Hierarchical_Red)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_13c_Hierarchical_Red</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test13c_ParallelRed_ThreadVectorRange.hpp" line="105" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test13c_ParallelRed_ThreadVectorRange.hpp" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2575708175182a5d735b523633be7c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, incr_14_MDrangeReduce)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>incr_14_MDrangeReduce</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test14_MDRangeReduce.hpp" line="176" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test14_MDRangeReduce.hpp" bodystart="176" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4ba0625ed1d34199a8eac97970a2e7c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, IncrTest_16_parallelscan)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>IncrTest_16_parallelscan</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test16_ParallelScan.hpp" line="94" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test16_ParallelScan.hpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a9ce7c2667d4b889942fc676b335e1886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, incr_17_atomicView)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>incr_17_atomicView</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test17_CompleteAtomic.hpp" line="121" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test17_CompleteAtomic.hpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a9636240168da15334bb5521e7b75f502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(openmp, raw_openmp_interop)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type><ref refid="class_test_1_1openmp" kindref="compound">openmp</ref></type>
        </param>
        <param>
          <type>raw_openmp_interop</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/openmp/TestOpenMP_InterOp.cpp" line="53" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/openmp/TestOpenMP_InterOp.cpp" bodystart="53" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a345eeb252972bea6a7db7d190fe73c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(openmp, partition_master)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type><ref refid="class_test_1_1openmp" kindref="compound">openmp</ref></type>
        </param>
        <param>
          <type>partition_master</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/openmp/TestOpenMP_PartitionMaster.cpp" line="53" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/openmp/TestOpenMP_PartitionMaster.cpp" bodystart="53" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4abc5e411dab235563d0662e66b8c7ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(sycl, raw_sycl_interop)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>sycl</type>
        </param>
        <param>
          <type>raw_sycl_interop</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_InterOp_Init.cpp" line="54" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_InterOp_Init.cpp" bodystart="54" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a602beaaeb7bda78062fde9b12c0966ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(sycl, raw_sycl_interop_context_1)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>sycl</type>
        </param>
        <param>
          <type>raw_sycl_interop_context_1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_InterOp_Init_Context.cpp" line="53" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_InterOp_Init_Context.cpp" bodystart="53" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab26488a994b39e0afa551885f45ce93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(sycl, raw_sycl_interop_context_2)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>sycl</type>
        </param>
        <param>
          <type>raw_sycl_interop_context_2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_InterOp_Init_Context.cpp" line="87" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_InterOp_Init_Context.cpp" bodystart="87" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ada92ff126f865fbc556034892d38e6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(sycl, raw_sycl_queues)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>sycl</type>
        </param>
        <param>
          <type>raw_sycl_queues</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_InterOp_Streams.cpp" line="50" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_InterOp_Streams.cpp" bodystart="50" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae138b7faaabbbe7e6b8c19d18ad4dc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(sycl, space_access)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>sycl</type>
        </param>
        <param>
          <type>space_access</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_Spaces.cpp" line="50" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_Spaces.cpp" bodystart="50" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2f649326118e4161177043eff8accfde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(sycl, uvm)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>sycl</type>
        </param>
        <param>
          <type>uvm</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_Spaces.cpp" line="283" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_Spaces.cpp" bodystart="283" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a47ee913b010fb1582652336e3bec70ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(sycl, impl_view_accessible)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>sycl</type>
        </param>
        <param>
          <type>impl_view_accessible</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_Spaces.cpp" line="341" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_Spaces.cpp" bodystart="341" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab85b8bb63daa9dcde4ddb72a167fe584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(sycl, team_scratch_1_queues)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>sycl</type>
        </param>
        <param>
          <type>team_scratch_1_queues</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_TeamScratchStreams.cpp" line="141" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/sycl/TestSYCL_TeamScratchStreams.cpp" bodystart="141" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af4ac84b8137b3f936215bcd8bae49e88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void Test::offset_streams</definition>
        <argsstring>(int *p)</argsstring>
        <name>offset_streams</name>
        <qualifiedname>Test::offset_streams</qualifiedname>
        <param>
          <type>int *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/Test_InterOp_Streams.hpp" line="50" column="17" bodyfile="src/Kokkos/kokkos/core/unit_test/Test_InterOp_Streams.hpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a46cef566b412062e06ecec839035d75e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DeviceType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::TestViewAggregate</definition>
        <argsstring>()</argsstring>
        <name>TestViewAggregate</name>
        <qualifiedname>Test::TestViewAggregate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAggregate.hpp" line="59" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAggregate.hpp" bodystart="59" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2178ea09affff82b6d02d20ce8e57cd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_aggregate)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_aggregate</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAggregate.hpp" line="143" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAggregate.hpp" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab1f84549442af4a904f93bb0dba2281e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_operations_complexdouble)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_operations_complexdouble</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_complexdouble.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_complexdouble.hpp" bodystart="48" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a0c7af8cf7f0eb327e46ce1231b4bb0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_operations_complexfloat)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_operations_complexfloat</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_complexfloat.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_complexfloat.hpp" bodystart="48" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a79b1f64bf9006f1a4d39eec14c5e087d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_operations_double)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_operations_double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_double.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_double.hpp" bodystart="48" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7ae7b821e5791ab923164d6b931602e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_operations_float)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_operations_float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_float.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_float.hpp" bodystart="48" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afb223594a5700b0d036c5d4144a2e828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_operations_int)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_operations_int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_int.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_int.hpp" bodystart="48" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6696a58838d0d6ddee8301b356a91628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_operations_long)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_operations_long</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_longint.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_longint.hpp" bodystart="48" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1ad146e388b4a1f4341816fb04809925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_operations_longlong)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_operations_longlong</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_longlongint.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_longlongint.hpp" bodystart="48" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4ca94c0996c1becb6177e007cf9ff937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_operations_unsigned)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_operations_unsigned</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_unsignedint.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_unsignedint.hpp" bodystart="48" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad4eb200449e85659df578a631e276159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_operations_unsignedlong)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_operations_unsignedlong</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_unsignedlongint.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_unsignedlongint.hpp" bodystart="48" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4c10adf67e7c89d3eb655090c23345b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomics)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomics</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="495" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="495" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a43ff238b9c9f7e7010700008bb4108ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_views_integral)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_views_integral</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicViews.hpp" line="1408" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicViews.hpp" bodystart="1408" bodyend="1437"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a92c73fe981cb8e3be7873e32f2bc2f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_views_nonintegral)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_views_nonintegral</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicViews.hpp" line="1439" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicViews.hpp" bodystart="1439" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a3319f36f6afc7cf5d6343aecc1292aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, atomic_view_api)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>atomic_view_api</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomicViews.hpp" line="1458" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomicViews.hpp" bodystart="1458" bodyend="1460"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a05b0eca80de3933e2e7909898d5bab19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, compiler_macros)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>compiler_macros</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestCompilerMacros.hpp" line="111" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestCompilerMacros.hpp" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1532842809070c3be1bceddccc01b033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, complex_construction)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>complex_construction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" line="127" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aca2f117033400f75a54a2962d39b43b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, complex_basic_math)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>complex_basic_math</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" line="281" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a8549552c85e95163ba66214b4269e79e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::testComplexIO</definition>
        <argsstring>()</argsstring>
        <name>testComplexIO</name>
        <qualifiedname>Test::testComplexIO</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" line="393" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" bodystart="393" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a83622ed1d40cee919b2eb25afa54c9a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, complex_special_funtions)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>complex_special_funtions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" line="409" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" bodystart="409" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a806f5d48d89b9e10b7381a29d5d36494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, complex_io)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>complex_io</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" line="414" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" bodystart="414" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a42865aebeca92c53915e4ad4c9d0cc4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, complex_trivially_copyable)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>complex_trivially_copyable</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" line="416" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" bodystart="416" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acdbb6b3bf5fc25e55e5f3e7ecb9d86b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, complex_issue_3865)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>complex_issue_3865</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" line="458" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" bodystart="458" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae76fedf312862af9a0f964211ea7a18d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, complex_issue_3867)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>complex_issue_3867</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" line="462" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" bodystart="462" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aea8b5a88883bff0f9435f43665d310cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, complex_operations_arithmetic_types_overloads)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>complex_operations_arithmetic_types_overloads</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" line="518" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestComplex.hpp" bodystart="518" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a15edbcb80e8871237fb9cdc9db586944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DeviceType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_concurrent_bitset</definition>
        <argsstring>(int bit_count)</argsstring>
        <name>test_concurrent_bitset</name>
        <qualifiedname>Test::test_concurrent_bitset</qualifiedname>
        <param>
          <type>int</type>
          <declname>bit_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestConcurrentBitset.hpp" line="119" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestConcurrentBitset.hpp" bodystart="119" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa23ed76ec06ebca2990f50c1995faacc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, crs_count_fill)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>crs_count_fill</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestCrs.hpp" line="204" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestCrs.hpp" bodystart="204" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a11cef388a196b31acd34b2439d81c255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, crs_copy_constructor)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>crs_copy_constructor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestCrs.hpp" line="215" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestCrs.hpp" bodystart="215" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a177749982ba8a724275ca5f0ad224bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, cxx11)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>cxx11</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestCXX11.hpp" line="374" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestCXX11.hpp" bodystart="374" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acd9898c62404afbac02b288733bd5699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reduction_deduction)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reduction_deduction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestCXX11Deduction.hpp" line="104" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestCXX11Deduction.hpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5606746c3ed1ad99db202edb1450126c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, deep_copy_conversion)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>deep_copy_conversion</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" line="326" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp" bodystart="326" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afaf624e774d364d8e5fbf5228f245267" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::test_partitioning</definition>
        <argsstring>(std::vector&lt; TEST_EXECSPACE &gt; &amp;instances)</argsstring>
        <name>test_partitioning</name>
        <qualifiedname>Test::test_partitioning</qualifiedname>
        <param>
          <type>std::vector&lt; TEST_EXECSPACE &gt; &amp;</type>
          <declname>instances</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestExecSpacePartitioning.hpp" line="82" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestExecSpacePartitioning.hpp" bodystart="82" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa9e128fbcf24347f24ea558db898c392" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, partitioning_by_args)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>partitioning_by_args</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestExecSpacePartitioning.hpp" line="115" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestExecSpacePartitioning.hpp" bodystart="115" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa5d50c8c16f2ad8deaa472c1f11f5de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, partitioning_by_vector)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>partitioning_by_vector</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestExecSpacePartitioning.hpp" line="122" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestExecSpacePartitioning.hpp" bodystart="122" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad7eb83d97d633b122988506a781440b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, copy_structure)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>copy_structure</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestExecutionSpace.hpp" line="79" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestExecutionSpace.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af31ec7ce76ea5d19fc529d45f8e1878f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ExecSpace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_functor_analysis</definition>
        <argsstring>()</argsstring>
        <name>test_functor_analysis</name>
        <qualifiedname>Test::test_functor_analysis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestFunctorAnalysis.hpp" line="70" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestFunctorAnalysis.hpp" bodystart="70" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a13066b099fd7f971dee7327edea2d0bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, functor_analysis)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>functor_analysis</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestFunctorAnalysis.hpp" line="142" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestFunctorAnalysis.hpp" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa95622b8ecdddc4ce1417f8c8809f83c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct TEST_CATEGORY_FIXTURE(count_bugs)</type>
        <definition>struct TEST_CATEGORY_FIXTURE(count_bugs) Test::TEST_F</definition>
        <argsstring>(TEST_CATEGORY_FIXTURE(count_bugs), launch_one)</argsstring>
        <name>TEST_F</name>
        <qualifiedname>Test::TEST_F</qualifiedname>
        <param>
          <type>TEST_CATEGORY_FIXTURE(count_bugs)</type>
        </param>
        <param>
          <type>launch_one</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" line="119" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" bodystart="119" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a427d59af49f0d2e5c4be154e8ffc05b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST_F</definition>
        <argsstring>(TEST_CATEGORY_FIXTURE(count_bugs), launch_one_rvalue)</argsstring>
        <name>TEST_F</name>
        <qualifiedname>Test::TEST_F</qualifiedname>
        <param>
          <type>TEST_CATEGORY_FIXTURE(count_bugs)</type>
        </param>
        <param>
          <type>launch_one_rvalue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" line="132" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" bodystart="132" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a85ef25b2069224bcf3eb0bd94969c1f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST_F</definition>
        <argsstring>(TEST_CATEGORY_FIXTURE(count_bugs), launch_six)</argsstring>
        <name>TEST_F</name>
        <qualifiedname>Test::TEST_F</qualifiedname>
        <param>
          <type>TEST_CATEGORY_FIXTURE(count_bugs)</type>
        </param>
        <param>
          <type>launch_six</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" line="143" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" bodystart="143" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac61b0a21796453b5508e720a3a584afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST_F</definition>
        <argsstring>(TEST_CATEGORY_FIXTURE(count_bugs), when_all_cycle)</argsstring>
        <name>TEST_F</name>
        <qualifiedname>Test::TEST_F</qualifiedname>
        <param>
          <type>TEST_CATEGORY_FIXTURE(count_bugs)</type>
        </param>
        <param>
          <type>when_all_cycle</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" line="176" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" bodystart="176" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af3652c18255408ef78ed91a0201a0ed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST_F</definition>
        <argsstring>(TEST_CATEGORY_FIXTURE(count_bugs), DISABLED_repeat_chain)</argsstring>
        <name>TEST_F</name>
        <qualifiedname>Test::TEST_F</qualifiedname>
        <param>
          <type>TEST_CATEGORY_FIXTURE(count_bugs)</type>
        </param>
        <param>
          <type>DISABLED_repeat_chain</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" line="203" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" bodystart="203" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aaf618cea585d63a14ac7f3a810912eaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST_F</definition>
        <argsstring>(TEST_CATEGORY_FIXTURE(count_bugs), zero_work_reduce)</argsstring>
        <name>TEST_F</name>
        <qualifiedname>Test::TEST_F</qualifiedname>
        <param>
          <type>TEST_CATEGORY_FIXTURE(count_bugs)</type>
        </param>
        <param>
          <type>zero_work_reduce</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" line="229" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestGraph.hpp" bodystart="229" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac96d53ebde76f8c838ea55a3e4694627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_half_conversion_type</definition>
        <argsstring>()</argsstring>
        <name>test_half_conversion_type</name>
        <qualifiedname>Test::test_half_conversion_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfConversion.hpp" line="51" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfConversion.hpp" bodystart="51" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac4968a4ffa7f9306843262b4c1f48ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::test_half_conversion</definition>
        <argsstring>()</argsstring>
        <name>test_half_conversion</name>
        <qualifiedname>Test::test_half_conversion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfConversion.hpp" line="75" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfConversion.hpp" bodystart="75" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a48060ce5d542b834a30d90b42d7fc9ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, half_conversion)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>half_conversion</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfConversion.hpp" line="88" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfConversion.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a3fcb9e1115d090b43e3f012c25615657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FUNCTION const half_t &amp;</type>
        <definition>KOKKOS_FUNCTION const half_t &amp; Test::accept_ref</definition>
        <argsstring>(const half_t &amp;a)</argsstring>
        <name>accept_ref</name>
        <qualifiedname>Test::accept_ref</qualifiedname>
        <param>
          <type>const half_t &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" line="58" column="14" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa8999ae9b197d5bfdcfb38f3fbe97fa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::__test_half_operators</definition>
        <argsstring>(half_t h_lhs, half_t h_rhs)</argsstring>
        <name>__test_half_operators</name>
        <qualifiedname>Test::__test_half_operators</qualifiedname>
        <param>
          <type>half_t</type>
          <declname>h_lhs</declname>
        </param>
        <param>
          <type>half_t</type>
          <declname>h_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" line="902" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" bodystart="902" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2eebe67dccfd601c047e806f9bd87094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::test_half_operators</definition>
        <argsstring>()</argsstring>
        <name>test_half_operators</name>
        <qualifiedname>Test::test_half_operators</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" line="968" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" bodystart="968" bodyend="977"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5b16fd0daf7744dd583d54af6c0e00cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, half_operators)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>half_operators</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" line="979" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHalfOperators.hpp" bodystart="979" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a52c4868f7f9db759437967d1e25f0110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(hwloc, query)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>hwloc</type>
        </param>
        <param>
          <type>query</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestHWLOC.cpp" line="53" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestHWLOC.cpp" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a27fad615b2afd3abcb6576b19df92183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, init)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>init</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestInit.hpp" line="53" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestInit.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a64fbc6fa3642086a80b5c4ffec25d05b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_irregular_layout)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_irregular_layout</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestIrregularLayout.hpp" line="259" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestIrregularLayout.hpp" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac5021b2eb11d965829034df2f28f2936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_teampolicy_rank_1</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_teampolicy_rank_1</name>
        <qualifiedname>Test::impl_test_local_deepcopy_teampolicy_rank_1</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="57" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="57" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad8332e5ac702dfde68efa14edd57e542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_teampolicy_rank_2</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_teampolicy_rank_2</name>
        <qualifiedname>Test::impl_test_local_deepcopy_teampolicy_rank_2</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="119" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="119" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ada43faf5620c0c1880d1d705a233a3c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_teampolicy_rank_3</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_teampolicy_rank_3</name>
        <qualifiedname>Test::impl_test_local_deepcopy_teampolicy_rank_3</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="184" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="184" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac2a68ed9482e9fae26e74d311b7b077a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_teampolicy_rank_4</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_teampolicy_rank_4</name>
        <qualifiedname>Test::impl_test_local_deepcopy_teampolicy_rank_4</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="249" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="249" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a72f0be1ad2c9ab21fdcf8ee9bfc14531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_teampolicy_rank_5</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_teampolicy_rank_5</name>
        <qualifiedname>Test::impl_test_local_deepcopy_teampolicy_rank_5</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="317" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="317" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5838d7a0b3a387b343c40cc82dad9a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_teampolicy_rank_6</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_teampolicy_rank_6</name>
        <qualifiedname>Test::impl_test_local_deepcopy_teampolicy_rank_6</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="386" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="386" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aedcfacee3f71d12004acb46fc5ded0b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_teampolicy_rank_7</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_teampolicy_rank_7</name>
        <qualifiedname>Test::impl_test_local_deepcopy_teampolicy_rank_7</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="455" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="455" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5b2efb2db39599e2e0ed91f86008654d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_rangepolicy_rank_1</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_rangepolicy_rank_1</name>
        <qualifiedname>Test::impl_test_local_deepcopy_rangepolicy_rank_1</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="521" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="521" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a34fc1d87fc7fe1013b3e5690fa03c528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_rangepolicy_rank_2</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_rangepolicy_rank_2</name>
        <qualifiedname>Test::impl_test_local_deepcopy_rangepolicy_rank_2</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="576" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="576" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aea159e37cefbbe3b92bb8ddeddab72f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_rangepolicy_rank_3</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_rangepolicy_rank_3</name>
        <qualifiedname>Test::impl_test_local_deepcopy_rangepolicy_rank_3</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="634" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="634" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa08d7951399c1c234abdb5297f99d21b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_rangepolicy_rank_4</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_rangepolicy_rank_4</name>
        <qualifiedname>Test::impl_test_local_deepcopy_rangepolicy_rank_4</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="692" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="692" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af5ef4783a851dda0593528423a840220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_rangepolicy_rank_5</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_rangepolicy_rank_5</name>
        <qualifiedname>Test::impl_test_local_deepcopy_rangepolicy_rank_5</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="753" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="753" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab661b651d1dddd53c77b254bd48b0c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_rangepolicy_rank_6</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_rangepolicy_rank_6</name>
        <qualifiedname>Test::impl_test_local_deepcopy_rangepolicy_rank_6</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="815" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="815" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa0e5a13bf5d1d585070b29c6ec1a4707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecSpace</type>
          </param>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::impl_test_local_deepcopy_rangepolicy_rank_7</definition>
        <argsstring>(const int N)</argsstring>
        <name>impl_test_local_deepcopy_rangepolicy_rank_7</name>
        <qualifiedname>Test::impl_test_local_deepcopy_rangepolicy_rank_7</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="877" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="877" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab382676ae52ed638756e43a59cdf6d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, deep_copy_scratch)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>deep_copy_scratch</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" line="1086" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp" bodystart="1086" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab1d00c099a6258b4e912b2af91b360cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mathspecialfunc_expint1)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mathspecialfunc_expint1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="1855" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="1855" bodyend="1858"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab83efa2d454b4ab906a9a3f2a2515153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mathspecialfunc_errorfunc)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mathspecialfunc_errorfunc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="1860" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="1860" bodyend="1863"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1e286e93fbd291a48bf1edabbec7912e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mathspecialfunc_cbesselj0y0)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mathspecialfunc_cbesselj0y0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="1865" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="1865" bodyend="1868"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a74d1953f98b76307a77b9cff2e9cbab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mathspecialfunc_cbesselj1y1)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mathspecialfunc_cbesselj1y1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="1870" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="1870" bodyend="1873"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a3051eb537f4ef9a5fa1b87fca16f5150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mathspecialfunc_cbesseli0k0)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mathspecialfunc_cbesseli0k0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="1875" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="1875" bodyend="1878"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aec5f1c2f366e52b2828a79cb21b28178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mathspecialfunc_cbesseli1k1)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mathspecialfunc_cbesseli1k1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="1880" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="1880" bodyend="1883"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a76c3234d3434237cca61b962f8bd6829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mathspecialfunc_cbesselh1stkind)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mathspecialfunc_cbesselh1stkind</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="1885" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="1885" bodyend="1888"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ade37bc036f48863ac4cc0e652ce18c16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mathspecialfunc_cbesselh2ndkind)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mathspecialfunc_cbesselh2ndkind</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="1890" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="1890" bodyend="1893"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aaf63ba3c0116327698259072f4f3dc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mdrange_5d)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mdrange_5d</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMDRange_a.hpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMDRange_a.hpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a29992cd9546bfca84b70ec1ea908ebe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mdrange_6d)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mdrange_6d</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMDRange_b.hpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMDRange_b.hpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afd5b8d382fe06efea8d853370322eb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mdrange_2d)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mdrange_2d</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMDRange_c.hpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMDRange_c.hpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a9539796f77353e125dfd86ae84c87d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mdrange_array_reduce)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mdrange_array_reduce</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMDRange_c.hpp" line="58" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMDRange_c.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aff3dcae38bb3fb0dd1856938d8ed3f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mdrange_3d)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mdrange_3d</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMDRange_d.hpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMDRange_d.hpp" bodystart="49" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6c1aaf078b632a052b6f5aacc76a27be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mdrange_neg_idx)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mdrange_neg_idx</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMDRange_d.hpp" line="60" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMDRange_d.hpp" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a83acbecec6690c2dc1895743ac908a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mdrange_4d)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mdrange_4d</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMDRange_e.hpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMDRange_e.hpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af51cf1a8c27ed236b741b6ef7d6a19ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mdrange_scalar)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mdrange_scalar</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMDRange_f.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMDRange_f.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1e4d8909b4621cdbcfa6933c4c71de6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, memory_pool)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>memory_pool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" line="564" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMemoryPool.hpp" bodystart="564" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1adf82b40eb03af907ea9b024de7fc5620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::check_semiregular</definition>
        <argsstring>()</argsstring>
        <name>check_semiregular</name>
        <qualifiedname>Test::check_semiregular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="684" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="684" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a20142b8c6c2f5a63d6002a75f6578c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, policy_construction)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>policy_construction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="693" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="693" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac85906bd7840c935caeba0e7a51eca09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; class... &gt; class</type>
            <declname>Policy</declname>
            <defname>Policy</defname>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::check_converting_constructor_add_work_tag</definition>
        <argsstring>(Policy&lt; Args... &gt; const &amp;policy)</argsstring>
        <name>check_converting_constructor_add_work_tag</name>
        <qualifiedname>Test::check_converting_constructor_add_work_tag</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref>&lt; Args... &gt; const &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="703" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="703" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a74ca643dbe21978841075b9e4a9084ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, policy_converting_constructor_from_other_policy)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>policy_converting_constructor_from_other_policy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="710" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="710" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a17e197a7524019ebe2e64c80be0549b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY_DEATH, policy_bounds_unsafe_narrowing_conversions)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY_DEATH</type>
        </param>
        <param>
          <type>policy_bounds_unsafe_narrowing_conversions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="720" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="720" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a21f2316466e2a0c2ce017bd7b685fb08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_prefer_desired_occupancy</definition>
        <argsstring>(Policy const &amp;policy)</argsstring>
        <name>test_prefer_desired_occupancy</name>
        <qualifiedname>Test::test_prefer_desired_occupancy</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref> const &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="734" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="734" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad269543b963497c05eb5a0aff0714940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, desired_occupancy_prefer)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>desired_occupancy_prefer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="773" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="773" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5109bc71057287d76ce92be999cc2a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, desired_occupancy_empty_base_optimization)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>desired_occupancy_empty_base_optimization</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="793" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="793" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af063a1f64cb6dd06e0f777900ae9ac0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_desired_occupancy_converting_constructors</definition>
        <argsstring>(Policy const &amp;policy)</argsstring>
        <name>test_desired_occupancy_converting_constructors</name>
        <qualifiedname>Test::test_desired_occupancy_converting_constructors</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref> const &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="812" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="812" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a0489679a1dd656d8f5ff5ba156a29aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, desired_occupancy_converting_constructors)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>desired_occupancy_converting_constructors</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="822" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="822" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a368834a3d51b4ab458ecd6299d433565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::more_md_range_policy_construction_test</definition>
        <argsstring>()</argsstring>
        <name>more_md_range_policy_construction_test</name>
        <qualifiedname>Test::more_md_range_policy_construction_test</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="832" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="832" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a02f03a60d99f89d86f49040de8e2b834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, md_range_policy_construction_from_arrays)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>md_range_policy_construction_from_arrays</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="843" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="843" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a158651c5293bd56c12fe2620879ec08d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class WorkTag</type>
          </param>
          <param>
            <type>class <ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref></type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto Test::set_worktag</definition>
        <argsstring>(Policy const &amp;policy)</argsstring>
        <name>set_worktag</name>
        <qualifiedname>Test::set_worktag</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref> const &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="892" column="16" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="892" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aae4a076e4f1f7e91eaf124cff80b20fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, policy_set_worktag)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>policy_set_worktag</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" line="899" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp" bodystart="899" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5ddc43219a4cbd48b7cb19a7fa7dea2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, range_for)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>range_for</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestRange.hpp" line="377" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestRange.hpp" bodystart="377" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1e86d1be220fe9fc924f8f9860518c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, range_reduce)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>range_reduce</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestRange.hpp" line="406" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestRange.hpp" bodystart="406" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a91c269f3fe22966c531361cb11f230f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, range_scan)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>range_scan</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestRange.hpp" line="436" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestRange.hpp" bodystart="436" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a338ea05d3c0dc66014f3f4c642b7550f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, range_for_require)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>range_for_require</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestRangePolicyRequire.hpp" line="369" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestRangePolicyRequire.hpp" bodystart="369" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a92c2daecfc903831fd1f90bc4dd442a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, range_reduce_require)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>range_reduce_require</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestRangePolicyRequire.hpp" line="408" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestRangePolicyRequire.hpp" bodystart="408" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1abd0f7cb6175e5f7cfc72a0df72e1f1ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, range_scan_require)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>range_scan_require</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestRangePolicyRequire.hpp" line="448" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestRangePolicyRequire.hpp" bodystart="448" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa7a2f95a6b318d8707f8ef57a1ac7976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, int_combined_reduce)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>int_combined_reduce</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReduce.hpp" line="574" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReduce.hpp" bodystart="574" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa18b37ede3a3fe457c2bd40c11f6611e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, mdrange_combined_reduce)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>mdrange_combined_reduce</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReduce.hpp" line="593" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReduce.hpp" bodystart="593" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af61f158ab6fb693732788886d8a28809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, int_combined_reduce_mixed)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>int_combined_reduce_mixed</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReduce.hpp" line="614" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReduce.hpp" bodystart="614" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a0220f02b1e58046a779b749c49ff5c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reducers_int)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reducers_int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReducers_a.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReducers_a.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a06f44bb86e96aaee190245209d75c316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reducers_size_t)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reducers_size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReducers_b.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReducers_b.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aba7d2f57ba6007b518e34e89211ef30f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reducers_double)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reducers_double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReducers_c.hpp" line="48" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReducers_c.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a10ce4042cfcd9b4907507e67bbe9d3a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reducers_complex_double)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reducers_complex_double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp" line="50" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5f71ea122ea078f1493787ab22d5f3f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reducers_struct)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reducers_struct</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp" line="54" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp" bodystart="54" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ade55eb355e4336db998f2bd8e4eff57b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reducers_half_t)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reducers_half_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp" line="68" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp" bodystart="68" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad00e709febcf8fb0dd149d3181dc12e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reducers_int8_t)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reducers_int8_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp" line="82" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp" bodystart="82" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a36d5e5095073e9dead4dff65b14a31c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reducers_point_t)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reducers_point_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp" line="102" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp" bodystart="102" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a210e10a0cf6c84bd10a0c0eeca3e9c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reduce_device_view_range_policy)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reduce_device_view_range_policy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReductions_DeviceView.hpp" line="117" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReductions_DeviceView.hpp" bodystart="117" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a76c49e84c2cc5ef9d850fdf26018074b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reduce_device_view_mdrange_policy)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reduce_device_view_mdrange_policy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReductions_DeviceView.hpp" line="128" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReductions_DeviceView.hpp" bodystart="128" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac1f74dacf39790f2f10963c2129520d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, reduce_device_view_team_policy)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>reduce_device_view_team_policy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestReductions_DeviceView.hpp" line="137" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestReductions_DeviceView.hpp" bodystart="137" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae213617a4b3cc0da2a9a45ccee86d8a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, scan)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>scan</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestScan.hpp" line="138" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestScan.hpp" bodystart="138" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af60cd93f35fdd3116776923cb08c7e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MemorySpace</type>
          </param>
          <param>
            <type>class ExecutionSpace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_shared_alloc</definition>
        <argsstring>()</argsstring>
        <name>test_shared_alloc</name>
        <qualifiedname>Test::test_shared_alloc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSharedAlloc.hpp" line="67" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSharedAlloc.hpp" bodystart="67" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2be3672ac9a17132da048486a1bac581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, impl_shared_alloc)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>impl_shared_alloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSharedAlloc.hpp" line="230" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSharedAlloc.hpp" bodystart="230" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a9b1e8904b0732d9e7edb3e2ef7eacf63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::my_fancy_handler</definition>
        <argsstring>()</argsstring>
        <name>my_fancy_handler</name>
        <qualifiedname>Test::my_fancy_handler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestStackTrace.cpp" line="52" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace.cpp" bodystart="52" bodyend="55" declfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" declline="62" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7dde5bb854e78d30c710c69da624f57a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::stacktrace_test_f0</definition>
        <argsstring>(std::ostream &amp;out)</argsstring>
        <name>stacktrace_test_f0</name>
        <qualifiedname>Test::stacktrace_test_f0</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f0.cpp" line="52" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f0.cpp" bodystart="52" bodyend="52" declfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f1.cpp" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa9d273fdf1de4282944a78f3e3be642f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Test::stacktrace_test_f1</definition>
        <argsstring>(std::ostream &amp;out)</argsstring>
        <name>stacktrace_test_f1</name>
        <qualifiedname>Test::stacktrace_test_f1</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f1.cpp" line="54" column="5" bodyfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f1.cpp" bodystart="54" bodyend="61" declfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f3.cpp" declline="52" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a16962fa0421a84837f6409c11596acf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::stacktrace_test_f2</definition>
        <argsstring>(std::ostream &amp;out)</argsstring>
        <name>stacktrace_test_f2</name>
        <qualifiedname>Test::stacktrace_test_f2</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f2.cpp" line="54" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f2.cpp" bodystart="54" bodyend="58" declfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4d5ec45ca0023f284abc9783bb1c2daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Test::stacktrace_test_f3</definition>
        <argsstring>(std::ostream &amp;out, const int level)</argsstring>
        <name>stacktrace_test_f3</name>
        <qualifiedname>Test::stacktrace_test_f3</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f3.cpp" line="54" column="5" bodyfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f3.cpp" bodystart="54" bodyend="61" declfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" declline="58" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a66b77a9869b815338aa6e6ec986815d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::stacktrace_test_f4</definition>
        <argsstring>()</argsstring>
        <name>stacktrace_test_f4</name>
        <qualifiedname>Test::stacktrace_test_f4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f4.cpp" line="52" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace_f4.cpp" bodystart="52" bodyend="52" declfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af9ebaece1367699e22df565187b40f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::test_stacktrace</definition>
        <argsstring>(bool bTerminate, bool bCustom=true)</argsstring>
        <name>test_stacktrace</name>
        <qualifiedname>Test::test_stacktrace</qualifiedname>
        <param>
          <type>bool</type>
          <declname>bTerminate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bCustom</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" line="64" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" bodystart="64" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a43457c404f0d7d75db879fc53313343b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, stacktrace_normal)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>stacktrace_normal</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" line="157" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab7ca7f6215f86349ffb62c58a709b9dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype_DeathTest, stacktrace_terminate)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype_DeathTest</type>
        </param>
        <param>
          <type>stacktrace_terminate</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" line="159" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a89590e6c3797d642c4b8146ed78aee38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype_DeathTest, stacktrace_generic_term)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype_DeathTest</type>
        </param>
        <param>
          <type>stacktrace_generic_term</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" line="164" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a46f6a433efab9937bff440a886ae4ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_auto_1d_left)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_auto_1d_left</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="52" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a8a048c984821972048438f01d88b5ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_auto_1d_right)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_auto_1d_right</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a42b224cdd0be5f76014905dfa1b9d655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_auto_1d_stride)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_auto_1d_stride</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="60" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a72c71739df3a63dda2a876366c1d72c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_assign_strided)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_assign_strided</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="65" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a938f7695c66f957df6c68d9dd95f9cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_left_0)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_left_0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="69" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a31304ba140bb7d1634c11d329c817a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_left_1)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_left_1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="73" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af902d9c1f2a3eb35c999d1ffcac06c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_left_2)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_left_2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="77" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa4fb49dfa703d400451b989f65095b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_left_3)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_left_3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="81" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1b79c185436e1c0e1b326593a7b1249a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_right_0)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_right_0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="85" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a57e1af1d8d6d0108cee36c3a33505c41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_right_1)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_right_1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="89" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad34fd91ef3cbe7192bbd56c7614fed6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_right_3)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_right_3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="93" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a3a5825559a620b53ab49adca5f10e298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_static_tests)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_static_tests</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" line="97" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp" bodystart="97" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a804fdf5cc9fdfb6e214fe2602bfe7ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_layoutleft_to_layoutleft)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_layoutleft_to_layoutleft</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_b.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_b.hpp" bodystart="51" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afd09c739cef1d5a7322aaad32b5b5080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_layoutright_to_layoutright)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_layoutright_to_layoutright</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_b.hpp" line="59" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_b.hpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5624bd09cdc841c1d44b680d49fc7514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_1d_assign)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_1d_assign</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c01.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c01.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6bc2540beea4f608048a55d63bf63339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_1d_assign_atomic)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_1d_assign_atomic</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c02.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c02.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7ec82c9581e18df6d6cd39ca72863e02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_1d_assign_randomaccess)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_1d_assign_randomaccess</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c03.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c03.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ace49c883e661c1a287244e8247f94bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_2d_from_3d)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_2d_from_3d</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c04.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c04.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa1d46378835f3d49826ebe303f8a6470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_2d_from_3d_atomic)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_2d_from_3d_atomic</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c05.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c05.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acc62ded4c70f288c24715e66404d54be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_2d_from_3d_randomaccess)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_2d_from_3d_randomaccess</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c06.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c06.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac29775e9c8ad7504fc5051be63d20f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_3d_from_5d_left)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_3d_from_5d_left</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c07.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c07.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a97b48bf323009b6b78393dcbbe5519e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_3d_from_5d_left_atomic)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_3d_from_5d_left_atomic</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c08.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c08.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afddba7825e68ed209b3315b6b397f362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_3d_from_5d_left_randomaccess)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_3d_from_5d_left_randomaccess</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c09.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c09.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acb6761ce9b7c6eebd2996260ff33bd5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_3d_from_5d_right)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_3d_from_5d_right</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c10.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c10.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a310a0214c9ab32c75e805db099f7dbf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_3d_from_5d_right_atomic)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_3d_from_5d_right_atomic</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c11.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c11.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a82ba78b1a2a981e522b9bbd70020a722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_3d_from_5d_right_randomaccess)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_3d_from_5d_right_randomaccess</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c12.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c12.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a882e8998740133aa2aa2846360f4d0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_test_unmanaged_subview_reset)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_test_unmanaged_subview_reset</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c13.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c13.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa2e207a43b2ba3dd528177863effffc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_subview_memory_traits_construction)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_subview_memory_traits_construction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestSubView_c14.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestSubView_c14.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aaf0f17635739532dd14e8c5d1db48b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, KOKKOS_TEST_WITH_SUFFIX(task_fib, TEST_SCHEDULER_SUFFIX))</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>KOKKOS_TEST_WITH_SUFFIX(task_fib, TEST_SCHEDULER_SUFFIX)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" line="47" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af0cd706d74bf7b4190c3642d93f5dcdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, KOKKOS_TEST_WITH_SUFFIX(task_depend, TEST_SCHEDULER_SUFFIX))</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>KOKKOS_TEST_WITH_SUFFIX(task_depend, TEST_SCHEDULER_SUFFIX)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" line="55" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2fd20334f3d5023336ffae1f1e6521bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, KOKKOS_TEST_WITH_SUFFIX(task_team, TEST_SCHEDULER_SUFFIX))</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>KOKKOS_TEST_WITH_SUFFIX(task_team, TEST_SCHEDULER_SUFFIX)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" line="62" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2aa9a124fd051e9067485eabe70beb1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, KOKKOS_TEST_WITH_SUFFIX(task_with_mempool, TEST_SCHEDULER_SUFFIX))</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>KOKKOS_TEST_WITH_SUFFIX(task_with_mempool, TEST_SCHEDULER_SUFFIX)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" line="68" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aeaaf155346c6373c9eee5e4f08e3ba4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, KOKKOS_TEST_WITH_SUFFIX(task_multiple_depend, TEST_SCHEDULER_SUFFIX))</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>KOKKOS_TEST_WITH_SUFFIX(task_multiple_depend, TEST_SCHEDULER_SUFFIX)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" line="73" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae7eb350c2fd0d0a1304893a71922ab15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, KOKKOS_TEST_WITH_SUFFIX(task_scheduler_ctors, TEST_SCHEDULER_SUFFIX))</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>KOKKOS_TEST_WITH_SUFFIX(task_scheduler_ctors, TEST_SCHEDULER_SUFFIX)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" line="80" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a05e8f26913f2d412c29c416a6d06cf91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, KOKKOS_TEST_WITH_SUFFIX(task_scheduer_ctors_device, TEST_SCHEDULER_SUFFIX))</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>KOKKOS_TEST_WITH_SUFFIX(task_scheduer_ctors_device, TEST_SCHEDULER_SUFFIX)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" line="87" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTaskScheduler_single.hpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a13c1f18550e574609a713984eb5b527c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ExecSpace</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION int</type>
        <definition>KOKKOS_INLINE_FUNCTION int Test::test_team_mulit_level_scratch_loop_body</definition>
        <argsstring>(const typename Kokkos::TeamPolicy&lt; ExecSpace &gt;::member_type &amp;team)</argsstring>
        <name>test_team_mulit_level_scratch_loop_body</name>
        <qualifiedname>Test::test_team_mulit_level_scratch_loop_body</qualifiedname>
        <param>
          <type>const typename <ref refid="class_kokkos_1_1_team_policy" kindref="compound">Kokkos::TeamPolicy</ref>&lt; ExecSpace &gt;::member_type &amp;</type>
          <declname>team</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeam.hpp" line="818" column="28" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeam.hpp" bodystart="818" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a63089fbfebd0412b42eab43fa3c07a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ExecSpace</type>
          </param>
          <param>
            <type>class ScheduleType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_team_mulit_level_scratch_test_lambda</definition>
        <argsstring>()</argsstring>
        <name>test_team_mulit_level_scratch_test_lambda</name>
        <qualifiedname>Test::test_team_mulit_level_scratch_test_lambda</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeam.hpp" line="1102" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeam.hpp" bodystart="1102" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a961f6ce9c76bee0b91817ac8740567bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_for)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_for</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="51" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a8bd8c51edd8f6a1cc59a1a9e0bf32c20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_reduce)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_reduce</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="70" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="70" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a438423333bd84ee543d82f09939aed8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_broadcast_long)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_broadcast_long</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="86" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="86" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a8b040c3f5850ea8a255aaac2f2dccb1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_broadcast_long_wrapper)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_broadcast_long_wrapper</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="153" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="153" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acd63470b455e72bce2aa28ea6322b84d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_broadcast_char)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_broadcast_char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="177" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="177" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab9e96d6e8dbc460676ddf75ede485889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_broadcast_float)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_broadcast_float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="201" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="201" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a087be170382020e587358c950cc8979e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_broadcast_double)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_broadcast_double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="235" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="235" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6bea55e3a4c0a29b32f8e6a00aa78272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_handle_by_value)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_handle_by_value</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="270" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac675e8ae886f67d67c50a858ad36dbb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_reduction_scan)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_reduction_scan</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamReductionScan.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamReductionScan.hpp" bodystart="51" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a70d21a3cda1417ea42e90f9a5dece9af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_long_reduce)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_long_reduce</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamReductionScan.hpp" line="60" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamReductionScan.hpp" bodystart="60" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a8353682beecf6d9ce016b2e031294dc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_double_reduce)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_double_reduce</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamReductionScan.hpp" line="78" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamReductionScan.hpp" bodystart="78" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac2101bde05165da2cf54eea2645d7f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_scan)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_scan</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" line="164" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp" bodystart="164" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aaeb3d5cb48bd6a58bc591812052fd6cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_shared_request)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_shared_request</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScratch.hpp" line="51" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScratch.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a13b02c7e0a75d07e09ee6807ecec0cfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_scratch_request)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_scratch_request</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScratch.hpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScratch.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a324bee589e6b663bf89985cd1e4c9db7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, shmem_size)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>shmem_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScratch.hpp" line="71" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScratch.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a3731237eb6e4343b2a9e861b6cfeb485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, multi_level_scratch)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>multi_level_scratch</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamScratch.hpp" line="73" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamScratch.hpp" bodystart="73" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aaa65529925a3ed7b2f97fc78d6596114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>class PolicyType</type>
          </param>
          <param>
            <type>int</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_team_policy_max_recommended_static_size</definition>
        <argsstring>(int scratch_size)</argsstring>
        <name>test_team_policy_max_recommended_static_size</name>
        <qualifiedname>Test::test_team_policy_max_recommended_static_size</qualifiedname>
        <param>
          <type>int</type>
          <declname>scratch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" line="101" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" bodystart="101" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a68b4314ef2d83da9a1476189bd625754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>class PolicyType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_team_policy_max_recommended</definition>
        <argsstring>(int scratch_size)</argsstring>
        <name>test_team_policy_max_recommended</name>
        <qualifiedname>Test::test_team_policy_max_recommended</qualifiedname>
        <param>
          <type>int</type>
          <declname>scratch_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" line="138" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" bodystart="138" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4016b2b901d61de74ce527a03e6673ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_policy_max_recommended)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_policy_max_recommended</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" line="151" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" bodystart="151" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a53d92355769cdc38c57197261044f83b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_policy_max_scalar_without_plus_equal_k)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_policy_max_scalar_without_plus_equal_k</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" line="203" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp" bodystart="203" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afc113263559f0cdae0ecb92f6d402b41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_vector)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_vector</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamVector.hpp" line="987" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamVector.hpp" bodystart="987" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1adf2210ff0ecd8c5fb0ae06cd0ffc7e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, triple_nested_parallelism)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>triple_nested_parallelism</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamVector.hpp" line="1004" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamVector.hpp" bodystart="1004" bodyend="1027"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2c69f04de8270a7a8dfb5fd54269a4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, parallel_scan_with_reducers)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>parallel_scan_with_reducers</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamVector.hpp" line="1030" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamVector.hpp" bodystart="1030" bodyend="1057"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1acec54c7ea85b85d9a3f4193009a14874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, team_teamvector_range)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>team_teamvector_range</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamVectorRange.hpp" line="523" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamVectorRange.hpp" bodystart="523" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a48c9e26ac18fce2ca7a8de112b5e32a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, template_meta_functions)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>template_meta_functions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTemplateMetaFunctions.hpp" line="178" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTemplateMetaFunctions.hpp" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aae6d9916b14cf2d89f4f36f7a2466de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, unique_token_global)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>unique_token_global</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestUniqueToken.hpp" line="166" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestUniqueToken.hpp" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1e409d2f66c1038265ca0e2133df356b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, unique_token_instance)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>unique_token_instance</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestUniqueToken.hpp" line="171" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestUniqueToken.hpp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab889fe3bdf0d1c7f04285a89ae32c226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, acquire_team_unique_token)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>acquire_team_unique_token</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestUniqueToken.hpp" line="282" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestUniqueToken.hpp" bodystart="282" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5907f0785dde00cb5897135b85e1c8f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::test_is_specialization_of</definition>
        <argsstring>()</argsstring>
        <name>test_is_specialization_of</name>
        <qualifiedname>Test::test_is_specialization_of</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestUtilities.hpp" line="55" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestUtilities.hpp" bodystart="55" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a939837c03e0c7d39da82e0160304211d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>Idxs</declname>
            <defname>Idxs</defname>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t Test::do_comma_emulation_test</definition>
        <argsstring>(std::integer_sequence&lt; std::size_t, Idxs... &gt;, Args... args)</argsstring>
        <name>do_comma_emulation_test</name>
        <qualifiedname>Test::do_comma_emulation_test</qualifiedname>
        <param>
          <type>std::integer_sequence&lt; std::size_t, Idxs... &gt;</type>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestUtilities.hpp" line="74" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/TestUtilities.hpp" bodystart="74" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a34a80226ff8c11bf698a83a734655b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(utilities, comma_operator_emulation)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>utilities</type>
        </param>
        <param>
          <type>comma_operator_emulation</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestUtilities.hpp" line="86" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestUtilities.hpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7725cead9de4fec32d982c7eb14aa105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Device</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_64bit</definition>
        <argsstring>()</argsstring>
        <name>test_64bit</name>
        <qualifiedname>Test::test_64bit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestView_64bit.hpp" line="50" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestView_64bit.hpp" bodystart="50" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7407b29060c7dc5bfe4b1ecd946fe1dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t Test::allocation_count</definition>
        <argsstring>(const Kokkos::View&lt; T, P... &gt; &amp;view)</argsstring>
        <name>allocation_count</name>
        <qualifiedname>Test::allocation_count</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; T, P... &gt; &amp;</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI.hpp" line="55" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI.hpp" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a647a100d76e5a1233d410db9902c517c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_api_a)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_api_a</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_a.hpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_a.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2886e5b4fe2fd68bd8da43b5e7af224a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_api_b)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_api_b</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_b.hpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_b.hpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a25dc147a90c49ee44090b703cf0c0f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_api_c)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_api_c</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_c.hpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_c.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae190471dba693c6b351971a8bf419f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_api_d)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_api_d</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_d.hpp" line="49" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_d.hpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4d976ad19e6cfd4f34c30ba8887c8682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_allocation_error)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_allocation_error</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_d.hpp" line="57" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_d.hpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af08b3d484ce3f8d243f03d2c7587dff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_remap)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_remap</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" line="54" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" bodystart="54" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ad3f7e8f9ea7f21f6308943c8ee8db272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_mirror_nonconst)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_mirror_nonconst</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" line="116" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" bodystart="116" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab8d86207f55d395837afab3c4091b1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extents</declname>
            <defname>Extents</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_left_stride</definition>
        <argsstring>(Extents... extents)</argsstring>
        <name>test_left_stride</name>
        <qualifiedname>Test::test_left_stride</qualifiedname>
        <param>
          <type>Extents...</type>
          <declname>extents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" line="126" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" bodystart="126" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac5b307532abc6370b8ea410d95308973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extents</declname>
            <defname>Extents</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_right_stride</definition>
        <argsstring>(Extents... extents)</argsstring>
        <name>test_right_stride</name>
        <qualifiedname>Test::test_right_stride</qualifiedname>
        <param>
          <type>Extents...</type>
          <declname>extents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" line="141" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" bodystart="141" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1add58a4105e2f4300c57f8fd123a293fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extents</declname>
            <defname>Extents</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_stride</definition>
        <argsstring>(Extents... extents)</argsstring>
        <name>test_stride</name>
        <qualifiedname>Test::test_stride</qualifiedname>
        <param>
          <type>Extents...</type>
          <declname>extents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" line="157" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a553c339a3a949e7793759791b56a384d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_stride_method)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_stride_method</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" line="162" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" bodystart="162" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a72a1b49e98339ad5211d6bfc93aa8dba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test::test_anonymous_space</definition>
        <argsstring>()</argsstring>
        <name>test_anonymous_space</name>
        <qualifiedname>Test::test_anonymous_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" line="172" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" bodystart="172" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a80da49f5980c3eadbe33d1333120612e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, anonymous_space)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>anonymous_space</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" line="203" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a03cfde1df99ad73e24a24eeeffb08c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_overload_resolution)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_overload_resolution</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" line="240" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aee46e7e9382f8452456784c422f52137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_copy_tests)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_copy_tests</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewCopy_a.hpp" line="81" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewCopy_a.hpp" bodystart="81" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a89c2ab0452f305124da0230ce8e98c46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_copy_tests_rank_0)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_copy_tests_rank_0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewCopy_b.hpp" line="81" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewCopy_b.hpp" bodystart="81" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a423c1d687335da5714e67d1a056db7e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_copy_degenerated)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_copy_degenerated</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewCopy_b.hpp" line="233" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewCopy_b.hpp" bodystart="233" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a39d59e92866999a2e28f30913680a2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, viewctorpop_view_allocate_without_initializing_backward_compatility)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>viewctorpop_view_allocate_without_initializing_backward_compatility</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewCtorPropEmbeddedDim.hpp" line="160" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewCtorPropEmbeddedDim.hpp" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a62438631ed212c5075bad4a880dba2b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_is_assignable)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_is_assignable</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewIsAssignable.hpp" line="55" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewIsAssignable.hpp" bodystart="55" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa6cfff2aa9af0839f3aacfe9f0431898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_layoutstride_left_to_layoutleft_assignment)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_layoutstride_left_to_layoutleft_assignment</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewLayoutStrideAssignment.hpp" line="56" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewLayoutStrideAssignment.hpp" bodystart="56" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a93cc230fd747d0e5785b451e10302561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_layoutstride_right_to_layoutright_assignment)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_layoutstride_right_to_layoutright_assignment</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewLayoutStrideAssignment.hpp" line="338" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewLayoutStrideAssignment.hpp" bodystart="338" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab435734bf343c0190e3a98846d9df652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY_DEATH, view_layoutstride_right_to_layoutleft_assignment)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY_DEATH</type>
        </param>
        <param>
          <type>view_layoutstride_right_to_layoutleft_assignment</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewLayoutStrideAssignment.hpp" line="620" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewLayoutStrideAssignment.hpp" bodystart="620" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa2c000a7b301ccb20d4fb87f3e03036a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY_DEATH, view_layoutstride_left_to_layoutright_assignment)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY_DEATH</type>
        </param>
        <param>
          <type>view_layoutstride_left_to_layoutright_assignment</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewLayoutStrideAssignment.hpp" line="775" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewLayoutStrideAssignment.hpp" bodystart="775" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a87a2e68bcc31c287b87576406195b258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_layouttiled)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_layouttiled</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewLayoutTiled.hpp" line="1760" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewLayoutTiled.hpp" bodystart="1760" bodyend="1767"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a95f45461fb86de649efe119db2718f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_layouttiled_subtile)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_layouttiled_subtile</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewLayoutTiled.hpp" line="1768" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewLayoutTiled.hpp" bodystart="1768" bodyend="1777"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa6582f65d2f7860991266fb727699bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Space</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_view_mapping</definition>
        <argsstring>()</argsstring>
        <name>test_view_mapping</name>
        <qualifiedname>Test::test_view_mapping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp" line="56" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp" bodystart="56" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a3d078b5d0fe59c5a8255e6831dc74e32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_mapping)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_mapping</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp" line="1098" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp" bodystart="1098" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7cae58d7aeb7021287e0bf270b7f81b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Space</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_view_mapping_operator</definition>
        <argsstring>()</argsstring>
        <name>test_view_mapping_operator</name>
        <qualifiedname>Test::test_view_mapping_operator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp" line="1236" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp" bodystart="1236" bodyend="1316"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afeccb9a0504af1f1c1461bd19aa43729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_mapping_operator)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_mapping_operator</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp" line="1318" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp" bodystart="1318" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a14878fab9a53ce9510522ef98f24e24b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, static_extent)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>static_extent</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp" line="1322" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp" bodystart="1322" bodyend="1326"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5426e3824ead089b797f586dc0b87678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_mapping_atomic)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_mapping_atomic</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp" line="129" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae4a1303739b840ae0645d134a6ebbdd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Space</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_view_mapping_class_value</definition>
        <argsstring>()</argsstring>
        <name>test_view_mapping_class_value</name>
        <qualifiedname>Test::test_view_mapping_class_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp" line="168" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp" bodystart="168" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a7c64fadef8bccca831e4cc220267c722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_mapping_class_value)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_mapping_class_value</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp" line="179" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aeb4153dda23d1f92a11262c3f1d7a944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_mapping_assignable)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_mapping_assignable</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp" line="189" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp" bodystart="189" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af7e07e1b37e6849c52b1a9a2ca6fbee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_mapping_trivially_copyable)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_mapping_trivially_copyable</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp" line="259" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp" bodystart="259" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a31efc847404f05f11606213769a85508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_mapping_subview)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_mapping_subview</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewMapping_subview.hpp" line="207" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewMapping_subview.hpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1abc2c811195998df3b63dd2c60daf7abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Space</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::view_nested_view</definition>
        <argsstring>()</argsstring>
        <name>view_nested_view</name>
        <qualifiedname>Test::view_nested_view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewOfClass.hpp" line="91" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewOfClass.hpp" bodystart="91" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2675e1bb670d7403af69a5d763fcd7c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_nested_view)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_nested_view</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewOfClass.hpp" line="117" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewOfClass.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a91e15ead3dd906dee62b01a1bf4e441d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, view_resize)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>view_resize</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewResize.hpp" line="52" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewResize.hpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a42e25c7fbe5682020a8511468bc391f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SpaceDst</type>
          </param>
          <param>
            <type>typename SpaceSrc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::view_space_assign</definition>
        <argsstring>()</argsstring>
        <name>view_space_assign</name>
        <qualifiedname>Test::view_space_assign</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestViewSpaceAssign.hpp" line="55" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestViewSpaceAssign.hpp" bodystart="55" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a5618d7b21c3742d71a7cad44eac9eca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(TEST_CATEGORY, workgraph_fib)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>TEST_CATEGORY</type>
        </param>
        <param>
          <type>workgraph_fib</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestWorkGraph.hpp" line="161" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestWorkGraph.hpp" bodystart="161" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a0a01f66fc0b83950b33254882c0c55fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Lambda</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::expect_fence_events</definition>
        <argsstring>(std::vector&lt; FencePayload &gt; &amp;expected, Lambda lam)</argsstring>
        <name>expect_fence_events</name>
        <qualifiedname>Test::expect_fence_events</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="struct_test_1_1_fence_payload" kindref="compound">FencePayload</ref> &gt; &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>Lambda</type>
          <declname>lam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" line="73" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" bodystart="73" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa93729377e7c3fb04bf0ecd056188b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Lambda</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_wrapper</definition>
        <argsstring>(const Lambda &amp;lambda)</argsstring>
        <name>test_wrapper</name>
        <qualifiedname>Test::test_wrapper</qualifiedname>
        <param>
          <type>const Lambda &amp;</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" line="125" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4163040544f929f5216a77f74e4ba4db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, test_named_instance_fence)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>test_named_instance_fence</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_test" kindref="compound">Test</ref> that fencing an instance with a name yields a fence event of that name, and the correct device ID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" line="134" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" bodystart="134" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6e555d2f8b402a0bc1d9f66f16980d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, test_unnamed_instance_fence)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>test_unnamed_instance_fence</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_test" kindref="compound">Test</ref> that fencing an instance without a name yields a fence event of a correct name, and the correct device ID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" line="153" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" bodystart="153" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1997c384d8fd485a97840401e7463c43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, test_named_global_fence)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>test_named_global_fence</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_test" kindref="compound">Test</ref> that invoking a global fence with a name yields a fence event of a correct name, and fences the root of the default device </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" line="173" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" bodystart="173" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa2039c9497df11efbb85e0f0ba00c675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, test_unnamed_global_fence)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>test_unnamed_global_fence</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_test" kindref="compound">Test</ref> that invoking a global fence with no name yields a fence event of a correct name, and fences the root of the default device </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" line="190" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" bodystart="190" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a90e72deded0761365efdc2fd7945eab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, test_multiple_default_instances)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>test_multiple_default_instances</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_test" kindref="compound">Test</ref> that creating two default instances and fencing both yields fence on the same device ID, as these should yield the same instance </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" line="207" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" bodystart="207" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a6b20793fd30239da27b8a0437fe6fb82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, test_kernel_sequence)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>test_kernel_sequence</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_test" kindref="compound">Test</ref> that fencing and kernels yield events on the correct device ID&apos;s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" line="223" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp" bodystart="223" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a96f5b2fc2e6799b9268bb21af773edf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::debug_print</definition>
        <argsstring>(const Kokkos_Profiling_SpaceHandle hand, const char *name, const void *ptr, const size_t size)</argsstring>
        <name>debug_print</name>
        <qualifiedname>Test::debug_print</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos___profiling___space_handle" kindref="compound">Kokkos_Profiling_SpaceHandle</ref></type>
          <declname>hand</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="52" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af598bde612b5c29aff1cd12d1727b68b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::debug_dealloc</definition>
        <argsstring>(const Kokkos_Profiling_SpaceHandle hand, const char *name, const void *ptr, const size_t size)</argsstring>
        <name>debug_dealloc</name>
        <qualifiedname>Test::debug_dealloc</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos___profiling___space_handle" kindref="compound">Kokkos_Profiling_SpaceHandle</ref></type>
          <declname>hand</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="57" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ac1d580f9d61ee898b9b60adcfe35e1b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::fail_on_event</definition>
        <argsstring>(const Kokkos::Profiling::SpaceHandle, const char *, const void *, const uint64_t)</argsstring>
        <name>fail_on_event</name>
        <qualifiedname>Test::fail_on_event</qualifiedname>
        <param>
          <type>const Kokkos::Profiling::SpaceHandle</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const void *</type>
        </param>
        <param>
          <type>const uint64_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="63" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4961cd1d22105c6a0027e105b89fea44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::expect_no_events</definition>
        <argsstring>()</argsstring>
        <name>expect_no_events</name>
        <qualifiedname>Test::expect_no_events</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="68" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aff666de96ac7067bcc6979f924265b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::expect_allocation_event</definition>
        <argsstring>(const std::string evn, const std::string esn, const std::string em)</argsstring>
        <name>expect_allocation_event</name>
        <qualifiedname>Test::expect_allocation_event</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>evn</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>esn</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>em</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="76" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="76" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1af2938670f49b663396ae76ca1eae6457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::expect_deallocation_event</definition>
        <argsstring>(const std::string &amp;evn, const std::string &amp;esn, const std::string em)</argsstring>
        <name>expect_deallocation_event</name>
        <qualifiedname>Test::expect_deallocation_event</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>evn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>esn</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>em</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="91" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="91" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ae1b25668f2788d250d79d4d32bfad902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::test_view_construct</definition>
        <argsstring>()</argsstring>
        <name>test_view_construct</name>
        <qualifiedname>Test::test_view_construct</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="120" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="120" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a2e44ec7f1cf9a639783846c23952fb06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::test_malloc_free</definition>
        <argsstring>()</argsstring>
        <name>test_malloc_free</name>
        <qualifiedname>Test::test_malloc_free</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="128" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="128" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a0b487628cc770dfbc0d6ed57e5f80f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::test_chained_spaces</definition>
        <argsstring>()</argsstring>
        <name>test_chained_spaces</name>
        <qualifiedname>Test::test_chained_spaces</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="137" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="137" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a3355af4a9b332944a9b2338adb1c050d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Test::test_space_allocations</definition>
        <argsstring>()</argsstring>
        <name>test_space_allocations</name>
        <qualifiedname>Test::test_space_allocations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="151" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="151" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a4d2b73224cebda4ef8724f086f2d4f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Space</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::test_allowed_access</definition>
        <argsstring>()</argsstring>
        <name>test_allowed_access</name>
        <qualifiedname>Test::test_allowed_access</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="168" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="168" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1aa72d8dd0d67198cc0ac535528a56872a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, logical_space_views)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>logical_space_views</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="184" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a72ffc76e941d5100e1ccfd196d860e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, logical_space_malloc)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>logical_space_malloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="185" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1afba5ac55674085632935ceea70f5f4cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, logical_space_alloc)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>logical_space_alloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="186" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a19f2fc441c93f48aea267a62d1c135e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, chained_logical_spaces)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>chained_logical_spaces</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="187" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1ab03d4fb608b3ac5efc4cdc47ed8e8c50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype, access_allowed)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype</type>
        </param>
        <param>
          <type>access_allowed</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="188" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="namespace_test_1a1889818268b0caea4e285ceb376ef668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test::TEST</definition>
        <argsstring>(defaultdevicetype_DeathTest, access_forbidden)</argsstring>
        <name>TEST</name>
        <qualifiedname>Test::TEST</qualifiedname>
        <param>
          <type>defaultdevicetype_DeathTest</type>
        </param>
        <param>
          <type>access_forbidden</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" line="191" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp" bodystart="191" bodyend="196"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>@Kokkos_Feature_Level_Required:1 </para>
    </briefdescription>
    <detaileddescription>
<para>@Kokkos_Feature_Level_Required:17</para>
<para>@Kokkos_Feature_Level_Required:16</para>
<para>@Kokkos_Feature_Level_Required:14</para>
<para>@Kokkos_Feature_Level_Required:5</para>
<para>@Kokkos_Feature_Level_Required:4</para>
<para>@Kokkos_Feature_Level_Required:3</para>
<para>@Kokkos_Feature_Level_Required:2 </para>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp" line="56" column="1"/>
  </compounddef>
</doxygen>
