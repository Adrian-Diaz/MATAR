<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf" kind="class" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</compoundname>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_08b1c6ef2380458c1b1a9604a1caef735" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::apply</innerclass>
    <templateparamlist>
      <param>
        <type>class SrcTraits</type>
      </param>
      <param>
        <type>class...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3" prot="private" static="no" strong="no">
        <type></type>
        <name>@163</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::@163</qualifiedname>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a29f48be9f8716d4f3c44c92180112fa5" prot="private">
          <name>RZ</name>
          <initializer>= false</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a92cff1642508a34e7ee2463c4d3aaa9c" prot="private">
          <name>R0</name>
          <initializer>= bool(is_integral_extent&lt;0, Args...&gt;::value)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a1e7ca4b5b54dec086f9c119b8c9e9762" prot="private">
          <name>R1</name>
          <initializer>= bool(is_integral_extent&lt;1, Args...&gt;::value)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3abd7decb3349b5d8642c6d69f1860f021" prot="private">
          <name>R2</name>
          <initializer>= bool(is_integral_extent&lt;2, Args...&gt;::value)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a80e342458c0972ff580a6196ea7f7313" prot="private">
          <name>R3</name>
          <initializer>= bool(is_integral_extent&lt;3, Args...&gt;::value)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a020eb68241a42aa5185ebea3260524b9" prot="private">
          <name>R4</name>
          <initializer>= bool(is_integral_extent&lt;4, Args...&gt;::value)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a93bafa42d3c8d1b7557ddcf1a4de48f8" prot="private">
          <name>R5</name>
          <initializer>= bool(is_integral_extent&lt;5, Args...&gt;::value)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3af061f360d8ca6752a0367dc4e49c9a8c" prot="private">
          <name>R6</name>
          <initializer>= bool(is_integral_extent&lt;6, Args...&gt;::value)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3add50a5d9c150066d5b957e059fa9ce50" prot="private">
          <name>R7</name>
          <initializer>= bool(is_integral_extent&lt;7, Args...&gt;::value)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3751" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3751" bodyend="3761"/>
      </memberdef>
      <memberdef kind="enum" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1ad70625fb993695c0892a877cddb099c9" prot="private" static="no" strong="no">
        <type></type>
        <name>@164</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::@164</qualifiedname>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1ad70625fb993695c0892a877cddb099c9a2401609627af73c97bb8d7eef5d23f3c" prot="private">
          <name>rank</name>
          <initializer>= unsigned(R0) + unsigned(R1) + unsigned(R2) + unsigned(R3) +
           unsigned(R4) + unsigned(R5) + unsigned(R6) + unsigned(R7)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3763" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3763" bodyend="3766"/>
      </memberdef>
      <memberdef kind="enum" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a56eb5185038c9d6e40857c8d7de80d94" prot="private" static="no" strong="no">
        <type></type>
        <name>@165</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::@165</qualifiedname>
        <enumvalue id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a56eb5185038c9d6e40857c8d7de80d94af64b34c66d46b9be83d03600627b82fa" prot="private">
          <name>R0_rev</name>
          <initializer>=
        (0 == SrcTraits::rank
             ? RZ
             : (1 == SrcTraits::rank
                    ? R0
                    : (2 == SrcTraits::rank
                           ? R1
                           : (3 == SrcTraits::rank
                                  ? R2
                                  : (4 == SrcTraits::rank
                                         ? R3
                                         : (5 == SrcTraits::rank
                                                ? R4
                                                : (6 == SrcTraits::rank
                                                       ? R5
                                                       : (7 == SrcTraits::rank
                                                              ? R6
                                                              : R7))))))))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3769" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3769" bodyend="3788"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a621d5231e5ca205c9ecc51ad12906962" prot="private" static="no">
        <type>typename std::conditional&lt;((rank==0)||<ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt; typename SrcTraits::array_layout, typename SrcTraits::array_layout, rank, SrcTraits::rank, 0, Args... &gt;::value||(rank&lt;=2 &amp;&amp;R0 &amp;&amp;std::is_same&lt; typename SrcTraits::array_layout, <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref> &gt;::value)||(rank&lt;=2 &amp;&amp;R0_rev &amp;&amp;std::is_same&lt; typename SrcTraits::array_layout, <ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref> &gt;::value)), typename SrcTraits::array_layout, <ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref> &gt;::type</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::array_layout =  typename std::conditional&lt; ( (rank == 0) || SubviewLegalArgsCompileTime&lt;typename SrcTraits::array_layout, typename SrcTraits::array_layout, rank, SrcTraits::rank, 0, Args...&gt;::value || (rank &lt;= 2 &amp;&amp; R0 &amp;&amp; std::is_same&lt;typename SrcTraits::array_layout, Kokkos::LayoutLeft&gt;::value) || (rank &lt;= 2 &amp;&amp; R0_rev &amp;&amp; std::is_same&lt;typename SrcTraits::array_layout, Kokkos::LayoutRight&gt;::value) ), typename SrcTraits::array_layout, Kokkos::LayoutStride&gt;::type</definition>
        <argsstring></argsstring>
        <name>array_layout</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::array_layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3791" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3809" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1adb45b09e5864c64d78bcce47bd2efe17" prot="private" static="no">
        <type>typename SrcTraits::value_type</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::value_type =  typename SrcTraits::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3811" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a706ef130b66fa3312023b39178e0b6d6" prot="private" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type" kindref="compound">SubViewDataType</ref>&lt; value_type, typename <ref refid="struct_kokkos_1_1_impl_1_1_parse_view_extents" kindref="compound">Kokkos::Impl::ParseViewExtents</ref>&lt; typename SrcTraits::data_type &gt;::type, Args... &gt;::type</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::data_type =  typename SubViewDataType&lt;value_type, typename Kokkos::Impl::ParseViewExtents&lt; typename SrcTraits::data_type&gt;::type, Args...&gt;::type</definition>
        <argsstring></argsstring>
        <name>data_type</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::data_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3813" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3817" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1af97fbd6cf53881e038a0b2c163a53d38" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_view_traits" kindref="compound">Kokkos::ViewTraits</ref>&lt; data_type, array_layout, typename SrcTraits::device_type, typename SrcTraits::memory_traits &gt;</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::traits_type =  Kokkos::ViewTraits&lt;data_type, array_layout, typename SrcTraits::device_type, typename SrcTraits::memory_traits&gt;</definition>
        <argsstring></argsstring>
        <name>traits_type</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::traits_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3820" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3822" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a03c895421758395339058fddd8867879" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; data_type, array_layout, typename SrcTraits::device_type, typename SrcTraits::memory_traits &gt;</type>
        <definition>using Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::type =  Kokkos::View&lt;data_type, array_layout, typename SrcTraits::device_type, typename SrcTraits::memory_traits&gt;</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3824" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3826" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1acec829e65cb3586bab2f4a66d15c9c96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DstTraits</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>static KOKKOS_INLINE_FUNCTION void Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::assign</definition>
        <argsstring>(ViewMapping&lt; DstTraits, void &gt; &amp;dst, ViewMapping&lt; SrcTraits, void &gt; const &amp;src, Args... args)</argsstring>
        <name>assign</name>
        <qualifiedname>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::assign</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>&lt; DstTraits, void &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>&lt; SrcTraits, void &gt; const &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3843" column="38" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3843" bodyend="3865"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3736" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3745" bodyend="3866"/>
    <listofallmembers>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a621d5231e5ca205c9ecc51ad12906962" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>array_layout</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1acec829e65cb3586bab2f4a66d15c9c96" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>assign</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a706ef130b66fa3312023b39178e0b6d6" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>data_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a92cff1642508a34e7ee2463c4d3aaa9c" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>R0</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a56eb5185038c9d6e40857c8d7de80d94af64b34c66d46b9be83d03600627b82fa" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>R0_rev</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a1e7ca4b5b54dec086f9c119b8c9e9762" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>R1</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3abd7decb3349b5d8642c6d69f1860f021" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>R2</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a80e342458c0972ff580a6196ea7f7313" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>R3</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a020eb68241a42aa5185ebea3260524b9" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>R4</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a93bafa42d3c8d1b7557ddcf1a4de48f8" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>R5</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3af061f360d8ca6752a0367dc4e49c9a8c" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>R6</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3add50a5d9c150066d5b957e059fa9ce50" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>R7</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1ad70625fb993695c0892a877cddb099c9a2401609627af73c97bb8d7eef5d23f3c" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>rank</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a721e8bb303a19b1b9385dfec9298bdb3a29f48be9f8716d4f3c44c92180112fa5" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>RZ</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1af97fbd6cf53881e038a0b2c163a53d38" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>traits_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1a03c895421758395339058fddd8867879" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf_1adb45b09e5864c64d78bcce47bd2efe17" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
