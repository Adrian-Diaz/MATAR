<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1is__memory__space" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::is_memory_space</compoundname>
    <innerclass refid="struct_kokkos_1_1is__memory__space_1_1have" prot="private">Kokkos::is_memory_space::have</innerclass>
    <innerclass refid="struct_kokkos_1_1is__memory__space_1_1have_3_01_u_00_01typename_01std_1_1is__base__of_3_01typenaeaf98cdd7becec02d9c46d00b95043ad" prot="private">Kokkos::is_memory_space::have&lt; U, typename std::is_base_of&lt; typename U::memory_space, U &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1is__memory__space_1_1have_3_01_u_00_01typename_01std_1_1is__base__of_3_01typenafa1f480f125bf96e87b24c4c6bd6d3c0" prot="private">Kokkos::is_memory_space::have&lt; U, typename std::is_base_of&lt; typename U::memory_space_type, U &gt;::type &gt;</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1is__memory__space_1a93d377b09549ee505df3bf74b428fc31" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Kokkos::is_memory_space&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Kokkos::is_memory_space::value</qualifiedname>
        <initializer>=   <ref refid="struct_kokkos_1_1is__memory__space" kindref="compound">is_memory_space</ref> ::template have&lt;typename std::remove_cv&lt;T&gt;::type&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="171" column="226" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kokkos_1_1is__memory__space_1a18781c3d5a9a832c7f5663b55c3535b0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Kokkos::is_memory_space&lt; T &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>Kokkos::is_memory_space::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="171" column="245" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="171" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" line="171" column="12" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Concepts.hpp" bodystart="171" bodyend="171"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1is__memory__space_1a18781c3d5a9a832c7f5663b55c3535b0" prot="public" virt="non-virtual"><scope>Kokkos::is_memory_space</scope><name>operator bool</name></member>
      <member refid="struct_kokkos_1_1is__memory__space_1a93d377b09549ee505df3bf74b428fc31" prot="public" virt="non-virtual"><scope>Kokkos::is_memory_space</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
