<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d" kind="class" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class FunctorType</type>
      </param>
      <param>
        <type>class...</type>
        <declname>Traits</declname>
        <defname>Traits</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a336bfbb954d49405f95544f9075a376f" prot="private" static="no">
        <type><ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Kokkos::MDRangePolicy</ref>&lt; Traits... &gt;</type>
        <definition>using Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::Policy =  Kokkos::MDRangePolicy&lt;Traits...&gt;</definition>
        <argsstring></argsstring>
        <name>Policy</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::Policy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="68" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1aa3c275d6ce4d804d175b91e035174b7a" prot="private" static="no">
        <type>typename Policy::work_tag</type>
        <definition>using Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::WorkTag =  typename Policy::work_tag</definition>
        <argsstring></argsstring>
        <name>WorkTag</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::WorkTag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="69" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a98e1f4dbe897e9fd955c2ae166b26842" prot="private" static="no">
        <type>typename Policy::member_type</type>
        <definition>using Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::Member =  typename Policy::member_type</definition>
        <argsstring></argsstring>
        <name>Member</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::Member</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="70" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a72caeadfb8f8fd1681478a5b46c3254c" prot="private" static="no" mutable="no">
        <type>const FunctorType</type>
        <definition>const FunctorType Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::m_functor</definition>
        <argsstring></argsstring>
        <name>m_functor</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::m_functor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="72" column="21" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1ac46f318b10dfd18a2c0efc5e943f7fa2" prot="private" static="no" mutable="no">
        <type>const <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Policy</ref></type>
        <definition>const Policy Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::m_policy</definition>
        <argsstring></argsstring>
        <name>m_policy</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::m_policy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="73" column="16" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1ab4c7cec36b9d2fe5658d558d42566f9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute</definition>
        <argsstring>() const</argsstring>
        <name>execute</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="76" column="15" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="76" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a92bdcf3b1d8be3c2ecb7ce1bc1a9ab4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>Rank</declname>
            <defname>Rank</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; <ref refid="struct_kokkos_1_1_rank" kindref="compound">Rank</ref>==2 &gt;::type</type>
        <definition>std::enable_if&lt; Rank==2 &gt;::type Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute_tile</definition>
        <argsstring>(typename Policy::point_type offset, const FunctorType &amp;functor, const Policy &amp;policy) const</argsstring>
        <name>execute_tile</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute_tile</qualifiedname>
        <param>
          <type>typename <ref refid="struct_kokkos_1_1_array" kindref="compound">Policy::point_type</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>functor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Policy</ref> &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="120" column="41" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="120" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a00b8c81f553e2c4d32ba5ecf2ca1f5a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>Rank</declname>
            <defname>Rank</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; <ref refid="struct_kokkos_1_1_rank" kindref="compound">Rank</ref>==3 &gt;::type</type>
        <definition>std::enable_if&lt; Rank==3 &gt;::type Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute_tile</definition>
        <argsstring>(typename Policy::point_type offset, const FunctorType &amp;functor, const Policy &amp;policy) const</argsstring>
        <name>execute_tile</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute_tile</qualifiedname>
        <param>
          <type>typename <ref refid="struct_kokkos_1_1_array" kindref="compound">Policy::point_type</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>functor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Policy</ref> &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="161" column="41" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="161" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a04909e61df18f27cef93ada7b1d4633f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>Rank</declname>
            <defname>Rank</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; <ref refid="struct_kokkos_1_1_rank" kindref="compound">Rank</ref>==4 &gt;::type</type>
        <definition>std::enable_if&lt; Rank==4 &gt;::type Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute_tile</definition>
        <argsstring>(typename Policy::point_type offset, const FunctorType &amp;functor, const Policy &amp;policy) const</argsstring>
        <name>execute_tile</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute_tile</qualifiedname>
        <param>
          <type>typename <ref refid="struct_kokkos_1_1_array" kindref="compound">Policy::point_type</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>functor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Policy</ref> &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="211" column="41" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="211" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1ab18131b1a37bd15e6e82db4cb4d75868" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>Rank</declname>
            <defname>Rank</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; <ref refid="struct_kokkos_1_1_rank" kindref="compound">Rank</ref>==5 &gt;::type</type>
        <definition>std::enable_if&lt; Rank==5 &gt;::type Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute_tile</definition>
        <argsstring>(typename Policy::point_type offset, const FunctorType &amp;functor, const Policy &amp;policy) const</argsstring>
        <name>execute_tile</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute_tile</qualifiedname>
        <param>
          <type>typename <ref refid="struct_kokkos_1_1_array" kindref="compound">Policy::point_type</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>functor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Policy</ref> &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="270" column="41" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="270" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a08170366d754ada97c5f64adb0373a8d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>Rank</declname>
            <defname>Rank</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; <ref refid="struct_kokkos_1_1_rank" kindref="compound">Rank</ref>==6 &gt;::type</type>
        <definition>std::enable_if&lt; Rank==6 &gt;::type Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute_tile</definition>
        <argsstring>(typename Policy::point_type offset, const FunctorType &amp;functor, const Policy &amp;policy) const</argsstring>
        <name>execute_tile</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute_tile</qualifiedname>
        <param>
          <type>typename <ref refid="struct_kokkos_1_1_array" kindref="compound">Policy::point_type</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>functor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Policy</ref> &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="340" column="41" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="340" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a843b570a2108e1a13bbab61d822fd1d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ParallelFor</definition>
        <argsstring>(const FunctorType &amp;arg_functor, Policy arg_policy)</argsstring>
        <name>ParallelFor</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ParallelFor</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>arg_functor</declname>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Policy</ref></type>
          <declname>arg_policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="421" column="10" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="421" bodyend="422"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1af40fda54892101c00d3e3e06fdfd1620" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Policy</ref></type>
          </param>
          <param>
            <type>typename Functor</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>static int Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::max_tile_size_product</definition>
        <argsstring>(const Policy &amp;, const Functor &amp;)</argsstring>
        <name>max_tile_size_product</name>
        <qualifiedname>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::max_tile_size_product</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_m_d_range_policy" kindref="compound">Policy</ref> &amp;</type>
        </param>
        <param>
          <type>const Functor &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="427" column="14" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="427" bodyend="429"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" line="65" column="1" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp" bodystart="66" bodyend="430"/>
    <listofallmembers>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1ab4c7cec36b9d2fe5658d558d42566f9e" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>execute</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a92bdcf3b1d8be3c2ecb7ce1bc1a9ab4a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>execute_tile</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a00b8c81f553e2c4d32ba5ecf2ca1f5a3" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>execute_tile</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a04909e61df18f27cef93ada7b1d4633f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>execute_tile</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1ab18131b1a37bd15e6e82db4cb4d75868" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>execute_tile</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a08170366d754ada97c5f64adb0373a8d" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>execute_tile</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a72caeadfb8f8fd1681478a5b46c3254c" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>m_functor</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1ac46f318b10dfd18a2c0efc5e943f7fa2" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>m_policy</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1af40fda54892101c00d3e3e06fdfd1620" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>max_tile_size_product</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a98e1f4dbe897e9fd955c2ae166b26842" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>Member</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a843b570a2108e1a13bbab61d822fd1d4" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ParallelFor</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1a336bfbb954d49405f95544f9075a376f" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>Policy</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d_1aa3c275d6ce4d804d175b91e035174b7a" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>WorkTag</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
