<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class FunctorType</type>
      </param>
      <param>
        <type>class ArgTag</type>
      </param>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2_1a99fea0f9235993c6e401520deb2a1ea3" prot="public" static="no" mutable="no">
        <type>const FunctorType &amp;</type>
        <definition>const FunctorType&amp; Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <qualifiedname>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;::f</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" line="1640" column="21" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" bodystart="1640" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2_1aa44aedec83cdbdcb2fa07fab19d80782" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;::FunctorValueJoin</definition>
        <argsstring>(const FunctorType &amp;f_)</argsstring>
        <name>FunctorValueJoin</name>
        <qualifiedname>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;::FunctorValueJoin</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>f_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" line="1643" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" bodystart="1643" bodyend="1643"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2_1af9a50ee011278d66e2e20f078df0f430" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION void</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION void Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;::operator()</definition>
        <argsstring>(volatile T &amp;lhs, const volatile T &amp;rhs) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;::operator()</qualifiedname>
        <param>
          <type>volatile T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const volatile T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" line="1651" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" bodystart="1651" bodyend="1653"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2_1a3d16911bc47fb3cc5392cc115b7b2b4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION void</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION void Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;::operator()</definition>
        <argsstring>(T &amp;lhs, const T &amp;rhs) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;::operator()</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" line="1655" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" bodystart="1655" bodyend="1655"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2_1a2e73b96fed5484f421398751b8df51c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION void</type>
        <definition>static KOKKOS_FORCEINLINE_FUNCTION void Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;::join</definition>
        <argsstring>(const FunctorType &amp;f_, volatile void *const lhs, const volatile void *const rhs)</argsstring>
        <name>join</name>
        <qualifiedname>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;::join</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>f_</declname>
        </param>
        <param>
          <type>volatile void *const</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const volatile void *const</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" line="1645" column="43" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" bodystart="1645" bodyend="1649"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" line="1631" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAdapter.hpp" bodystart="1639" bodyend="1656"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2_1a99fea0f9235993c6e401520deb2a1ea3" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;</scope><name>f</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2_1aa44aedec83cdbdcb2fa07fab19d80782" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;</scope><name>FunctorValueJoin</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2_1a2e73b96fed5484f421398751b8df51c5" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;</scope><name>join</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2_1af9a50ee011278d66e2e20f078df0f430" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2_1a3d16911bc47fb3cc5392cc115b7b2b4f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
