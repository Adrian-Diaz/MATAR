<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespace_kokkos_1_1hwloc" kind="namespace" language="C++">
    <compoundname>Kokkos::hwloc</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_kokkos_1_1hwloc_1a65b8dadebad869c60ce18ace1709b80b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Kokkos::hwloc::thread_mapping</definition>
        <argsstring>(const char *const label, const bool allow_async, unsigned &amp;thread_count, unsigned &amp;use_numa_count, unsigned &amp;use_cores_per_numa, std::pair&lt; unsigned, unsigned &gt; threads_coord[])</argsstring>
        <name>thread_mapping</name>
        <qualifiedname>Kokkos::hwloc::thread_mapping</qualifiedname>
        <param>
          <type>const char *const</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>allow_async</declname>
        </param>
        <param>
          <type>unsigned &amp;</type>
          <declname>thread_count</declname>
        </param>
        <param>
          <type>unsigned &amp;</type>
          <declname>use_numa_count</declname>
        </param>
        <param>
          <type>unsigned &amp;</type>
          <declname>use_cores_per_numa</declname>
        </param>
        <param>
          <type>std::pair&lt; unsigned, unsigned &gt;</type>
          <declname>threads_coord</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Recommend mapping of threads onto cores. </para>
        </briefdescription>
        <detaileddescription>
<para>If thread_count == 0 then choose and set a value. If use_numa_count == 0 then choose and set a value. If use_cores_per_numa == 0 then choose and set a value.</para>
<para>Return 0 if asynchronous, Return 1 if synchronous and threads_coord[0] is process core </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="63" column="10" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" bodystart="63" bodyend="225" declfile="src/Kokkos/kokkos/core/src/Kokkos_hwloc.hpp" declline="106" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kokkos_1_1hwloc_1a8cc0a4100ced6d262b77d0f536d43f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kokkos::hwloc::available</definition>
        <argsstring>()</argsstring>
        <name>available</name>
        <qualifiedname>Kokkos::hwloc::available</qualifiedname>
        <briefdescription>
<para>Query if hwloc is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="722" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" bodystart="722" bodyend="722" declfile="src/Kokkos/kokkos/core/src/Kokkos_hwloc.hpp" declline="69" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kokkos_1_1hwloc_1aabb404506a7f3c189a131b012a9ddb98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kokkos::hwloc::can_bind_threads</definition>
        <argsstring>()</argsstring>
        <name>can_bind_threads</name>
        <qualifiedname>Kokkos::hwloc::can_bind_threads</qualifiedname>
        <briefdescription>
<para>Can hwloc bind threads? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="723" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" bodystart="723" bodyend="723" declfile="src/Kokkos/kokkos/core/src/Kokkos_hwloc.hpp" declline="126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kokkos_1_1hwloc_1a1306160efce8cd8a3e7f4ddfa22b2766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Kokkos::hwloc::get_available_numa_count</definition>
        <argsstring>()</argsstring>
        <name>get_available_numa_count</name>
        <qualifiedname>Kokkos::hwloc::get_available_numa_count</qualifiedname>
        <briefdescription>
<para>Query number of available NUMA regions. This will be less than the hardware capacity if the MPI process is pinned to a NUMA region. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="725" column="10" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" bodystart="725" bodyend="725" declfile="src/Kokkos/kokkos/core/src/Kokkos_hwloc.hpp" declline="75" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kokkos_1_1hwloc_1a093376853e14388b4e9071308ab42907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Kokkos::hwloc::get_available_cores_per_numa</definition>
        <argsstring>()</argsstring>
        <name>get_available_cores_per_numa</name>
        <qualifiedname>Kokkos::hwloc::get_available_cores_per_numa</qualifiedname>
        <briefdescription>
<para>Query number of available cores per NUMA regions. This will be less than the hardware capacity if the MPI process is pinned to a set of cores. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="726" column="10" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" bodystart="726" bodyend="726" declfile="src/Kokkos/kokkos/core/src/Kokkos_hwloc.hpp" declline="81" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kokkos_1_1hwloc_1ae45c0aa4707fd03f5c1e0c1dced06c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Kokkos::hwloc::get_available_threads_per_core</definition>
        <argsstring>()</argsstring>
        <name>get_available_threads_per_core</name>
        <qualifiedname>Kokkos::hwloc::get_available_threads_per_core</qualifiedname>
        <briefdescription>
<para>Query number of available &quot;hard&quot; threads per core; i.e., hyperthreads. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="727" column="10" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" bodystart="727" bodyend="727" declfile="src/Kokkos/kokkos/core/src/Kokkos_hwloc.hpp" declline="85" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kokkos_1_1hwloc_1aec61ed0c7f516ca41e62f3b7ab6e93bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Kokkos::hwloc::bind_this_thread</definition>
        <argsstring>(const unsigned coordinate_count, std::pair&lt; unsigned, unsigned &gt; coordinate[])</argsstring>
        <name>bind_this_thread</name>
        <qualifiedname>Kokkos::hwloc::bind_this_thread</qualifiedname>
        <param>
          <type>const unsigned</type>
          <defname>coordinate_count</defname>
        </param>
        <param>
          <type>std::pair&lt; unsigned, unsigned &gt;</type>
          <defname>coordinate</defname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Bind the current thread to one of the cores in the list. Set that entry to (~0,~0) and return the index. If binding fails return ~0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="729" column="10" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" bodystart="729" bodyend="731" declfile="src/Kokkos/kokkos/core/src/Kokkos_hwloc.hpp" declline="132" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kokkos_1_1hwloc_1a08693708103789f3beaf69128bc34aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kokkos::hwloc::bind_this_thread</definition>
        <argsstring>(const std::pair&lt; unsigned, unsigned &gt;)</argsstring>
        <name>bind_this_thread</name>
        <qualifiedname>Kokkos::hwloc::bind_this_thread</qualifiedname>
        <param>
          <type>const std::pair&lt; unsigned, unsigned &gt;</type>
        </param>
        <briefdescription>
<para>Bind the current thread to a core. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="733" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" bodystart="733" bodyend="733" declfile="src/Kokkos/kokkos/core/src/Kokkos_hwloc.hpp" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kokkos_1_1hwloc_1a6f856b7e027251bed3f213dc860f4298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kokkos::hwloc::unbind_this_thread</definition>
        <argsstring>()</argsstring>
        <name>unbind_this_thread</name>
        <qualifiedname>Kokkos::hwloc::unbind_this_thread</qualifiedname>
        <briefdescription>
<para>Unbind the current thread back to the original process binding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="735" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" bodystart="735" bodyend="735" declfile="src/Kokkos/kokkos/core/src/Kokkos_hwloc.hpp" declline="136" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kokkos_1_1hwloc_1a92a3eef41db836d0e680e916ce07965b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; unsigned, unsigned &gt;</type>
        <definition>std::pair&lt; unsigned, unsigned &gt; Kokkos::hwloc::get_this_thread_coordinate</definition>
        <argsstring>()</argsstring>
        <name>get_this_thread_coordinate</name>
        <qualifiedname>Kokkos::hwloc::get_this_thread_coordinate</qualifiedname>
        <briefdescription>
<para>Query core-coordinate of the current thread with respect to the core_topology. </para>
        </briefdescription>
        <detaileddescription>
<para>As long as the thread is running within the process binding the following condition holds.</para>
<para>core_coordinate.first &lt; core_topology.first core_coordinate.second &lt; core_topology.second </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="737" column="11" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" bodystart="737" bodyend="739" declfile="src/Kokkos/kokkos/core/src/Kokkos_hwloc.hpp" declline="120" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Minimal subset of logical &apos;hwloc&apos; functionality available from <ulink url="http://www.open-mpi.org/projects/hwloc/">http://www.open-mpi.org/projects/hwloc/</ulink>. </para>
    </briefdescription>
    <detaileddescription>
<para>The calls are NOT thread safe in order to avoid mutexes, memory allocations, or other actions which could give the runtime system an opportunity to migrate the threads or touch allocated memory during the function calls.</para>
<para>All calls to these functions should be performed by a thread when it has guaranteed exclusive access; e.g., for OpenMP within a &apos;critical&apos; region. </para>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_hwloc.cpp" line="60" column="1"/>
  </compounddef>
</doxygen>
