<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespace_kokkos_1_1_impl" kind="namespace" language="C++">
    <compoundname>Kokkos::Impl</compoundname>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__add__graph__kernel__tag" prot="public">Kokkos::Impl::_add_graph_kernel_tag</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__add__graph__kernel__tag_3_01_policy_template_3_01_policy_traits_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::_add_graph_kernel_tag&lt; PolicyTemplate&lt; PolicyTraits... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__construct__combined__reducer__from__args__tag" prot="public">Kokkos::Impl::_construct_combined_reducer_from_args_tag</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__fold__comma__emulation__return" prot="public">Kokkos::Impl::_fold_comma_emulation_return</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__graph__node__is__root__ctor__tag" prot="public">Kokkos::Impl::_graph_node_is_root_ctor_tag</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__graph__node__kernel__ctor__tag" prot="public">Kokkos::Impl::_graph_node_kernel_ctor_tag</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__graph__node__predecessor__ctor__tag" prot="public">Kokkos::Impl::_graph_node_predecessor_ctor_tag</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__reducer__from__arg" prot="public">Kokkos::Impl::_reducer_from_arg</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__trait__matches__spec__predicate" prot="public">Kokkos::Impl::_trait_matches_spec_predicate</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__type__list__remove__first__impl" prot="public">Kokkos::Impl::_type_list_remove_first_impl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__type__list__remove__first__impl_3_01_entry_00_01type__list_3_01_entr4e3a050b84a2f18054a093ec4f362a94" prot="public">Kokkos::Impl::_type_list_remove_first_impl&lt; Entry, type_list&lt; Entry, Ts... &gt;, type_list&lt; OutTs... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__type__list__remove__first__impl_3_01_entry_00_01type__list_3_01_t_0058d5f67c24a6e4800be01746bd0f5870" prot="public">Kokkos::Impl::_type_list_remove_first_impl&lt; Entry, type_list&lt; T, Ts... &gt;, type_list&lt; OutTs... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__type__list__remove__first__impl_3_01_entry_00_01type__list_3_4_00_0187ee1d02e6c6e2e7215efa8c5c804d7b" prot="public">Kokkos::Impl::_type_list_remove_first_impl&lt; Entry, type_list&lt;&gt;, type_list&lt; OutTs... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__wrap__with__kokkos__sum" prot="public">Kokkos::Impl::_wrap_with_kokkos_sum</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1__wrap__with__kokkos__sum_3_01_space_00_01_t_00_01typename_01std_1_1en8bc42ca968546ff225c1c479b173fc77" prot="public">Kokkos::Impl::_wrap_with_kokkos_sum&lt; Space, T, typename std::enable_if&lt; Kokkos::is_view&lt; T &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_a_l_l__t" prot="public">Kokkos::Impl::ALL_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_allow_padding__t" prot="public">Kokkos::Impl::AllowPadding_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy" prot="public">Kokkos::Impl::AnalyzeExecPolicy</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_3_01void_01_4" prot="public">Kokkos::Impl::AnalyzeExecPolicy&lt; void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_3_01void_00_01void_00_01_traits_8_8_8_01_4" prot="public">Kokkos::Impl::AnalyzeExecPolicy&lt; void, void, Traits... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_base_traits_3_01type__list_3_01_trait_specifications_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::AnalyzeExecPolicyBaseTraits&lt; type_list&lt; TraitSpecifications... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_use_matcher" prot="public">Kokkos::Impl::AnalyzeExecPolicyUseMatcher</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_use_matcher_3_01std_1_1enable__if__t_3_01_policy_d12849f43e5f51f38fd7fe9f9648f585" prot="public">Kokkos::Impl::AnalyzeExecPolicyUseMatcher&lt; std::enable_if_t&lt; PolicyTraitMatcher&lt; TraitSpec, Trait &gt;::value &gt;, type_list&lt; TraitSpec, TraitSpecs... &gt;, Trait, Traits... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_use_matcher_3_01std_1_1enable__if__t_3_9_policy_t717282fe6bace25762ea2b5a79aed655" prot="public">Kokkos::Impl::AnalyzeExecPolicyUseMatcher&lt; std::enable_if_t&lt;!PolicyTraitMatcher&lt; TraitSpec, Trait &gt;::value &gt;, type_list&lt; TraitSpec, TraitSpecs... &gt;, Trait, Traits... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_use_matcher_3_01void_00_01type__list_3_4_01_4" prot="public">Kokkos::Impl::AnalyzeExecPolicyUseMatcher&lt; void, type_list&lt;&gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_use_matcher_3_01void_00_01type__list_3_4_00_01_trait_00_01_traits_8_8_8_01_4" prot="public">Kokkos::Impl::AnalyzeExecPolicyUseMatcher&lt; void, type_list&lt;&gt;, Trait, Traits... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_apply_extent" prot="public">Kokkos::Impl::ApplyExtent</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_apply_extent_3_01_value_type_01_5_00_01_ext_01_4" prot="public">Kokkos::Impl::ApplyExtent&lt; ValueType *, Ext &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_apply_extent_3_01_value_type_01_5_00_01_kokkos_1_1_experimental_1_1dynamic__extent_01_4" prot="public">Kokkos::Impl::ApplyExtent&lt; ValueType *, Kokkos::Experimental::dynamic_extent &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_apply_extent_3_01_value_type_00_01_kokkos_1_1_experimental_1_1dynamic__extent_01_4" prot="public">Kokkos::Impl::ApplyExtent&lt; ValueType, Kokkos::Experimental::dynamic_extent &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_apply_extent_3_01_value_type_0f_n_0e_00_01_ext_01_4" prot="public">Kokkos::Impl::ApplyExtent&lt; ValueType[N], Ext &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_apply_extent_3_01_value_type_0f_n_0e_00_01_kokkos_1_1_experimental_1_1dynamic__extent_01_4" prot="public">Kokkos::Impl::ApplyExtent&lt; ValueType[N], Kokkos::Experimental::dynamic_extent &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1are__integral" prot="public">Kokkos::Impl::are_integral</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1are__integral_3_01_t_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::are_integral&lt; T, Args... &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_atomic_data_element" prot="public">Kokkos::Impl::AtomicDataElement</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_atomic_view_const_tag" prot="public">Kokkos::Impl::AtomicViewConstTag</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_atomic_view_data_handle" prot="public">Kokkos::Impl::AtomicViewDataHandle</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_bitset_count" prot="public">Kokkos::Impl::BitsetCount</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_chunked_round_robin_executor" prot="public">Kokkos::Impl::ChunkedRoundRobinExecutor</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_combined_reducer" prot="public">Kokkos::Impl::CombinedReducer</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_combined_reducer_impl" prot="public">Kokkos::Impl::CombinedReducerImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_combined_reducer_impl_3_01std_1_1integer__sequence_3_01size__t_00_01_db3dec10c772628b430611d360ec5388" prot="public">Kokkos::Impl::CombinedReducerImpl&lt; std::integer_sequence&lt; size_t, Idxs... &gt;, Space, Reducers... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_combined_reducer_storage_impl" prot="public">Kokkos::Impl::CombinedReducerStorageImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_combined_reducer_value_impl" prot="public">Kokkos::Impl::CombinedReducerValueImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_combined_reducer_value_impl_3_01std_1_1integer__sequence_3_01size__t_b8ac377ed29f48ef487a11c7b50a4191" prot="public">Kokkos::Impl::CombinedReducerValueImpl&lt; std::integer_sequence&lt; size_t, Idxs... &gt;, ValueTypes... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_combined_reducer_value_item_impl" prot="public">Kokkos::Impl::CombinedReducerValueItemImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_combined_reduction_functor_wrapper" prot="public">Kokkos::Impl::CombinedReductionFunctorWrapper</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_combined_reduction_functor_wrapper_impl" prot="public">Kokkos::Impl::CombinedReductionFunctorWrapperImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_combined_reduction_functor_wrapper_impl_3_01std_1_1integer__sequence_5ea4167422b7e084f419c5adfba3b728" prot="public">Kokkos::Impl::CombinedReductionFunctorWrapperImpl&lt; std::integer_sequence&lt; size_t, Idxs... &gt;, Functor, Space, Reducers... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview" prot="public">Kokkos::Impl::CommonSubview</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_dst_type_00_01_kokkos_1_1_experimental_1_1_dynamic52e20e1bed32ef5591eb96a3092df68" prot="public">Kokkos::Impl::CommonSubview&lt; DstType, Kokkos::Experimental::DynamicView&lt; SP... &gt;, 1, Arg0 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_dst_type_00_01_src_type_00_011_00_01_arg0_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::CommonSubview&lt; DstType, SrcType, 1, Arg0, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_dst_type_00_01_src_type_00_012_00_01_arg0_00_01_arg1_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::CommonSubview&lt; DstType, SrcType, 2, Arg0, Arg1, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_dst_type_00_01_src_type_00_013_00_01_arg0_00_01_af12b8b192239aab978041f94e5692dcc" prot="public">Kokkos::Impl::CommonSubview&lt; DstType, SrcType, 3, Arg0, Arg1, Arg2, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_dst_type_00_01_src_type_00_014_00_01_arg0_00_01_a76627be91ebe7b1362e6f88dc4ebac61" prot="public">Kokkos::Impl::CommonSubview&lt; DstType, SrcType, 4, Arg0, Arg1, Arg2, Arg3, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_dst_type_00_01_src_type_00_015_00_01_arg0_00_01_ae574e74006f6cba0ab63282b957f946f" prot="public">Kokkos::Impl::CommonSubview&lt; DstType, SrcType, 5, Arg0, Arg1, Arg2, Arg3, Arg4, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_dst_type_00_01_src_type_00_016_00_01_arg0_00_01_ab6df64c3a2c90813eb55b95227bfd4a4" prot="public">Kokkos::Impl::CommonSubview&lt; DstType, SrcType, 6, Arg0, Arg1, Arg2, Arg3, Arg4, Arg5, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_dst_type_00_01_src_type_00_017_00_01_arg0_00_01_ac82e87bbd3dd738c7a735b8a6fd369d1" prot="public">Kokkos::Impl::CommonSubview&lt; DstType, SrcType, 7, Arg0, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_dst_type_00_01_src_type_00_018_00_01_arg0_00_01_ab9c2a6edd6a86dfc63d041da629a0ca9" prot="public">Kokkos::Impl::CommonSubview&lt; DstType, SrcType, 8, Arg0, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_kokkos_1_1_experimental_1_1_dynamic_view_3_01_d_pdb59d8a23b37b147ce3491640d9ec677" prot="public">Kokkos::Impl::CommonSubview&lt; Kokkos::Experimental::DynamicView&lt; DP... &gt;, Kokkos::Experimental::DynamicView&lt; SP... &gt;, 1, Arg0 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_subview_3_01_kokkos_1_1_experimental_1_1_dynamic_view_3_01_d_pf180e1d8cc4347cebf6ec0761a730d60" prot="public">Kokkos::Impl::CommonSubview&lt; Kokkos::Experimental::DynamicView&lt; DP... &gt;, SrcType, 1, Arg0 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_view_alloc_prop" prot="public">Kokkos::Impl::CommonViewAllocProp</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_view_alloc_prop_3_01void_00_01_value_type_01_4" prot="public">Kokkos::Impl::CommonViewAllocProp&lt; void, ValueType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_view_value_type" prot="public">Kokkos::Impl::CommonViewValueType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_common_view_value_type_3_01void_00_01_a_00_01_b_01_4" prot="public">Kokkos::Impl::CommonViewValueType&lt; void, A, B &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1concat__type__list" prot="public">Kokkos::Impl::concat_type_list</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1concat__type__list_3_01type__list_3_01_t_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::concat_type_list&lt; type_list&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1concat__type__list_3_01type__list_3_01_t_8_8_8_01_4_00_01type__list_3_af97cf8c87a58c2413f9003d8e7c2e33" prot="public">Kokkos::Impl::concat_type_list&lt; type_list&lt; T... &gt;, type_list&lt; U... &gt;, Tail... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1concurrent__bitset" prot="public">Kokkos::Impl::concurrent_bitset</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_copy_op" prot="public">Kokkos::Impl::CopyOp</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_copy_op_3_01_dst_view_type_00_01_src_view_type_00_011_01_4" prot="public">Kokkos::Impl::CopyOp&lt; DstViewType, SrcViewType, 1 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_copy_op_3_01_dst_view_type_00_01_src_view_type_00_012_01_4" prot="public">Kokkos::Impl::CopyOp&lt; DstViewType, SrcViewType, 2 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_copy_op_3_01_dst_view_type_00_01_src_view_type_00_013_01_4" prot="public">Kokkos::Impl::CopyOp&lt; DstViewType, SrcViewType, 3 &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_crs_row_map_from_counts" prot="public">Kokkos::Impl::CrsRowMapFromCounts</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_cuda_internal" prot="public">Kokkos::Impl::CudaInternal</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_cuda_traits" prot="public">Kokkos::Impl::CudaTraits</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_deduce_common_view_alloc_prop" prot="public">Kokkos::Impl::DeduceCommonViewAllocProp</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_deduce_common_view_alloc_prop_3_01_first_view_01_4" prot="public">Kokkos::Impl::DeduceCommonViewAllocProp&lt; FirstView &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_deduce_common_view_alloc_prop_3_01_first_view_00_01_next_views_8_8_8_01_4" prot="public">Kokkos::Impl::DeduceCommonViewAllocProp&lt; FirstView, NextViews... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_deep_copy" prot="public">Kokkos::Impl::DeepCopy</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_deep_copy_3_01_host_space_00_01_host_space_00_01_execution_space_01_4" prot="public">Kokkos::Impl::DeepCopy&lt; HostSpace, HostSpace, ExecutionSpace &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_deep_copy_3_01_kokkos_1_1_experimental_1_1_logical_memory_space_3_01_166cee2dac6a20f34ad4911ae48add92" prot="public">Kokkos::Impl::DeepCopy&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccess &gt;, DestinationSpace, ExecutionSpace &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_deep_copy_3_01_kokkos_1_1_experimental_1_1_logical_memory_space_3_01_60c9823e8be3fb2788843b3adde52710" prot="public">Kokkos::Impl::DeepCopy&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccess &gt;, Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccess &gt;, ExecutionSpace &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_deep_copy_3_01_source_space_00_01_kokkos_1_1_experimental_1_1_logicaladfbaab25bc56f42779a46c6b8ce5bc3" prot="public">Kokkos::Impl::DeepCopy&lt; SourceSpace, Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccess &gt;, ExecutionSpace &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_default_ctor_not_on_device" prot="public">Kokkos::Impl::DefaultCtorNotOnDevice</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_default_ctor_not_on_device_3_4" prot="public">Kokkos::Impl::DefaultCtorNotOnDevice&lt;&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1destruct__delete" prot="public">Kokkos::Impl::destruct_delete</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1detector" prot="public">Kokkos::Impl::detector</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1detector_3_01_default_00_01void__t_3_01_op_3_01_args_8_8_8_01_4_01_4_00_01_op_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::detector&lt; Default, void_t&lt; Op&lt; Args... &gt; &gt;, Op, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1device__memory__space" prot="public">Kokkos::Impl::device_memory_space</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1device__memory__space_3_01_kokkos_1_1_device_3_01_exec_t_00_01_mem_t_01_4_01_4" prot="public">Kokkos::Impl::device_memory_space&lt; Kokkos::Device&lt; ExecT, MemT &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_device_iterate_tile" prot="public">Kokkos::Impl::DeviceIterateTile</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_device_iterate_tile_3_012_00_01_policy_type_00_01_functor_00_01_tag_01_4" prot="public">Kokkos::Impl::DeviceIterateTile&lt; 2, PolicyType, Functor, Tag &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_device_iterate_tile_3_013_00_01_policy_type_00_01_functor_00_01_tag_01_4" prot="public">Kokkos::Impl::DeviceIterateTile&lt; 3, PolicyType, Functor, Tag &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_device_iterate_tile_3_014_00_01_policy_type_00_01_functor_00_01_tag_01_4" prot="public">Kokkos::Impl::DeviceIterateTile&lt; 4, PolicyType, Functor, Tag &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_device_iterate_tile_3_015_00_01_policy_type_00_01_functor_00_01_tag_01_4" prot="public">Kokkos::Impl::DeviceIterateTile&lt; 5, PolicyType, Functor, Tag &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_device_iterate_tile_3_016_00_01_policy_type_00_01_functor_00_01_tag_01_4" prot="public">Kokkos::Impl::DeviceIterateTile&lt; 6, PolicyType, Functor, Tag &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_dual_view_subview" prot="public">Kokkos::Impl::DualViewSubview</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_dyn_rank_dim_traits" prot="public">Kokkos::Impl::DynRankDimTraits</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_dyn_rank_subview_tag" prot="public">Kokkos::Impl::DynRankSubviewTag</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_dyn_rank_view_fill" prot="public">Kokkos::Impl::DynRankViewFill</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_dyn_rank_view_fill_3_01_output_view_00_01typename_01std_1_1enable__if2d5581db340547f7ab839b68d7bfbbea" prot="public">Kokkos::Impl::DynRankViewFill&lt; OutputView, typename std::enable_if&lt; OutputView::Rank==0 &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_dyn_rank_view_remap" prot="public">Kokkos::Impl::DynRankViewRemap</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_e_b_o_base_impl" prot="public">Kokkos::Impl::EBOBaseImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_e_b_o_base_impl_3_01_t_00_01false_00_01_c_tors_not_on_device_01_4" prot="public">Kokkos::Impl::EBOBaseImpl&lt; T, false, CTorsNotOnDevice &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_e_b_o_base_impl_3_01_t_00_01true_00_01_ctor_not_on_device_01_4" prot="public">Kokkos::Impl::EBOBaseImpl&lt; T, true, CtorNotOnDevice &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_exec_policy_traits_with_defaults" prot="public">Kokkos::Impl::ExecPolicyTraitsWithDefaults</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_exec_space_initializer_base" prot="public">Kokkos::Impl::ExecSpaceInitializerBase</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_exec_space_manager" prot="public">Kokkos::Impl::ExecSpaceManager</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_execution_space_instance_storage" prot="public">Kokkos::Impl::ExecutionSpaceInstanceStorage</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_execution_space_trait" prot="public">Kokkos::Impl::ExecutionSpaceTrait</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_extract_vector_length" prot="public">Kokkos::Impl::ExtractVectorLength</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__begin__end" prot="public">Kokkos::Impl::fill_random_functor_begin_end</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__begin__end_3_01_view_type_00_01_random_pool_00_7662064fe5fbbe675dda7336e42d982b" prot="public">Kokkos::Impl::fill_random_functor_begin_end&lt; ViewType, RandomPool, loops, 1, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__begin__end_3_01_view_type_00_01_random_pool_00_dc480a0c1c6ee207f9678b6bf2e95c98" prot="public">Kokkos::Impl::fill_random_functor_begin_end&lt; ViewType, RandomPool, loops, 2, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__begin__end_3_01_view_type_00_01_random_pool_00_395140f547e0cebf12bcc1cb4c857a76" prot="public">Kokkos::Impl::fill_random_functor_begin_end&lt; ViewType, RandomPool, loops, 3, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__begin__end_3_01_view_type_00_01_random_pool_00_bd2ea27cd161008b1b3adb1a24acc1a2" prot="public">Kokkos::Impl::fill_random_functor_begin_end&lt; ViewType, RandomPool, loops, 4, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__begin__end_3_01_view_type_00_01_random_pool_00_4b8426a611adcfde93f3916b38066e9f" prot="public">Kokkos::Impl::fill_random_functor_begin_end&lt; ViewType, RandomPool, loops, 5, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__begin__end_3_01_view_type_00_01_random_pool_00_ff6b89ee900e2a04e0dad908d451f8ce" prot="public">Kokkos::Impl::fill_random_functor_begin_end&lt; ViewType, RandomPool, loops, 6, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__begin__end_3_01_view_type_00_01_random_pool_00_8ba1ca1fb1fef846ffd286e015d7c478" prot="public">Kokkos::Impl::fill_random_functor_begin_end&lt; ViewType, RandomPool, loops, 7, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__begin__end_3_01_view_type_00_01_random_pool_00_cb90731fcae60b56ef2d0b8657660a1f" prot="public">Kokkos::Impl::fill_random_functor_begin_end&lt; ViewType, RandomPool, loops, 8, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__range" prot="public">Kokkos::Impl::fill_random_functor_range</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__range_3_01_view_type_00_01_random_pool_00_01loops_00_011_00_01_index_type_01_4" prot="public">Kokkos::Impl::fill_random_functor_range&lt; ViewType, RandomPool, loops, 1, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__range_3_01_view_type_00_01_random_pool_00_01loops_00_012_00_01_index_type_01_4" prot="public">Kokkos::Impl::fill_random_functor_range&lt; ViewType, RandomPool, loops, 2, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__range_3_01_view_type_00_01_random_pool_00_01loops_00_013_00_01_index_type_01_4" prot="public">Kokkos::Impl::fill_random_functor_range&lt; ViewType, RandomPool, loops, 3, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__range_3_01_view_type_00_01_random_pool_00_01loops_00_014_00_01_index_type_01_4" prot="public">Kokkos::Impl::fill_random_functor_range&lt; ViewType, RandomPool, loops, 4, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__range_3_01_view_type_00_01_random_pool_00_01loops_00_015_00_01_index_type_01_4" prot="public">Kokkos::Impl::fill_random_functor_range&lt; ViewType, RandomPool, loops, 5, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__range_3_01_view_type_00_01_random_pool_00_01loops_00_016_00_01_index_type_01_4" prot="public">Kokkos::Impl::fill_random_functor_range&lt; ViewType, RandomPool, loops, 6, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__range_3_01_view_type_00_01_random_pool_00_01loops_00_017_00_01_index_type_01_4" prot="public">Kokkos::Impl::fill_random_functor_range&lt; ViewType, RandomPool, loops, 7, IndexType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1fill__random__functor__range_3_01_view_type_00_01_random_pool_00_01loops_00_018_00_01_index_type_01_4" prot="public">Kokkos::Impl::fill_random_functor_range&lt; ViewType, RandomPool, loops, 8, IndexType &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_fill_crs_transpose_entries" prot="public">Kokkos::Impl::FillCrsTransposeEntries</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1filter__type__list" prot="public">Kokkos::Impl::filter_type_list</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1filter__type__list_3_01_predicate_t_00_01type__list_3_01_t_8_8_8_01_4_00_01_value_t_01_4" prot="public">Kokkos::Impl::filter_type_list&lt; PredicateT, type_list&lt; T... &gt;, ValueT &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_fixed_block_size_memory_pool" prot="public">Kokkos::Impl::FixedBlockSizeMemoryPool</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_analysis" prot="public">Kokkos::Impl::FunctorAnalysis</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_final" prot="public">Kokkos::Impl::FunctorFinal</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_final_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01typen7413c98278a7155419bb99aff6d831d7" prot="public">Kokkos::Impl::FunctorFinal&lt; FunctorType, ArgTag, T &amp;, typename std::enable_if&lt; !std::is_same&lt; ArgTag, void &gt;::value, decltype(FunctorFinalFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::final))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_final_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01typenfe8a55ad4563dd49b3a747217ca0742c" prot="public">Kokkos::Impl::FunctorFinal&lt; FunctorType, ArgTag, T &amp;, typename std::enable_if&lt; std::is_same&lt; ArgTag, void &gt;::value, decltype(FunctorFinalFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::final))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_final_3_01_functor_type_00_01_arg_tag_00_01_t_01_5_00_01typene90ec978d89f4a06bd8cb5be2cef4248" prot="public">Kokkos::Impl::FunctorFinal&lt; FunctorType, ArgTag, T *, typename std::enable_if&lt; !std::is_same&lt; ArgTag, void &gt;::value, decltype(FunctorFinalFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::final))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_final_3_01_functor_type_00_01_arg_tag_00_01_t_01_5_00_01typend872fcc12546004f5fd14d3d06856f5d" prot="public">Kokkos::Impl::FunctorFinal&lt; FunctorType, ArgTag, T *, typename std::enable_if&lt; std::is_same&lt; ArgTag, void &gt;::value, decltype(FunctorFinalFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::final))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_final_function" prot="public">Kokkos::Impl::FunctorFinalFunction</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_final_function_3_01_functor_type_00_01_arg_tag_00_01true_01_4" prot="public">Kokkos::Impl::FunctorFinalFunction&lt; FunctorType, ArgTag, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_final_function_3_01_functor_type_00_01void_00_01false_01_4" prot="public">Kokkos::Impl::FunctorFinalFunction&lt; FunctorType, void, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_final_function_3_01_functor_type_00_01void_00_01true_01_4" prot="public">Kokkos::Impl::FunctorFinalFunction&lt; FunctorType, void, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_pattern_interface" prot="public">Kokkos::Impl::FunctorPatternInterface</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_policy_execution_space" prot="public">Kokkos::Impl::FunctorPolicyExecutionSpace</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_team_shmem_size" prot="public">Kokkos::Impl::FunctorTeamShmemSize</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_team_shmem_size_3_01_functor_type_00_01false_00_01true_01_4" prot="public">Kokkos::Impl::FunctorTeamShmemSize&lt; FunctorType, false, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_team_shmem_size_3_01_functor_type_00_01true_00_01false_01_4" prot="public">Kokkos::Impl::FunctorTeamShmemSize&lt; FunctorType, true, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_team_shmem_size_3_01_functor_type_00_01true_00_01true_01_4" prot="public">Kokkos::Impl::FunctorTeamShmemSize&lt; FunctorType, true, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_init" prot="public">Kokkos::Impl::FunctorValueInit</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_init_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01_enable_01_4" prot="public">Kokkos::Impl::FunctorValueInit&lt; FunctorType, ArgTag, T &amp;, Enable &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_init_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_0145841b27a44088336c0a3f5e6f9eceb9" prot="public">Kokkos::Impl::FunctorValueInit&lt; FunctorType, ArgTag, T &amp;, typename std::enable_if&lt; !std::is_same&lt; ArgTag, void &gt;::value, decltype(FunctorValueInitFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::init))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_init_3_01_functor_type_00_01_arg_tag_00_01_t_01_5_00_01_enable_01_4" prot="public">Kokkos::Impl::FunctorValueInit&lt; FunctorType, ArgTag, T *, Enable &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_init_3_01_functor_type_00_01_arg_tag_00_01_t_01_5_00_01e48dd4ec8ad8f077868cc84fc33b44b9" prot="public">Kokkos::Impl::FunctorValueInit&lt; FunctorType, ArgTag, T *, typename std::enable_if&lt; !std::is_same&lt; ArgTag, void &gt;::value, decltype(FunctorValueInitFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::init))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_init_3_01_functor_type_00_01void_00_01_t_01_6_00_01decl9c19c909ce8ee010d57388784d667bcf" prot="public">Kokkos::Impl::FunctorValueInit&lt; FunctorType, void, T &amp;, decltype(FunctorValueInitFunction&lt; FunctorType, void &gt;::enable_if(&amp;FunctorType::init))&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_init_3_01_functor_type_00_01void_00_01_t_01_5_00_01declca753d7c0a98141cda31a89c62d423da" prot="public">Kokkos::Impl::FunctorValueInit&lt; FunctorType, void, T *, decltype(FunctorValueInitFunction&lt; FunctorType, void &gt;::enable_if(&amp;FunctorType::init))&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_init_function" prot="public">Kokkos::Impl::FunctorValueInitFunction</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_init_function_3_01_functor_type_00_01void_01_4" prot="public">Kokkos::Impl::FunctorValueInitFunction&lt; FunctorType, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join" prot="public">Kokkos::Impl::FunctorValueJoin</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01d3d69bc14664f5c82aad752d7a4a6ed2" prot="public">Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_00_01_enable_01_4" prot="public">Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T &amp;, Enable &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_5_00_010a170845371c8ac51a3db031672b76c8" prot="public">Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T *, decltype(FunctorValueJoinFunction&lt; FunctorType, ArgTag &gt;::enable_if(&amp;FunctorType::join))&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01_arg_tag_00_01_t_01_5_00_01_enable_01_4" prot="public">Kokkos::Impl::FunctorValueJoin&lt; FunctorType, ArgTag, T *, Enable &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01void_00_01_t_01_6_00_01decl9e863f6c350c2e41a402a712fc429959" prot="public">Kokkos::Impl::FunctorValueJoin&lt; FunctorType, void, T &amp;, decltype(FunctorValueJoinFunction&lt; FunctorType, void &gt;::enable_if(&amp;FunctorType::join))&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join_3_01_functor_type_00_01void_00_01_t_01_5_00_01declf5e28e08ffada364f2e2375a58be3a9f" prot="public">Kokkos::Impl::FunctorValueJoin&lt; FunctorType, void, T *, decltype(FunctorValueJoinFunction&lt; FunctorType, void &gt;::enable_if(&amp;FunctorType::join))&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join_function" prot="public">Kokkos::Impl::FunctorValueJoinFunction</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join_function_3_01_functor_type_00_01_arg_tag_00_01true_01_4" prot="public">Kokkos::Impl::FunctorValueJoinFunction&lt; FunctorType, ArgTag, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join_function_3_01_functor_type_00_01void_00_01false_01_4" prot="public">Kokkos::Impl::FunctorValueJoinFunction&lt; FunctorType, void, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_join_function_3_01_functor_type_00_01void_00_01true_01_4" prot="public">Kokkos::Impl::FunctorValueJoinFunction&lt; FunctorType, void, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_ops" prot="public">Kokkos::Impl::FunctorValueOps</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_ops_3_01_functor_type_00_01_arg_tag_00_01_t_01_6_01_4" prot="public">Kokkos::Impl::FunctorValueOps&lt; FunctorType, ArgTag, T &amp; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_functor_value_ops_3_01_functor_type_00_01_arg_tag_00_01_t_01_5_01_4" prot="public">Kokkos::Impl::FunctorValueOps&lt; FunctorType, ArgTag, T * &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1get__type" prot="public">Kokkos::Impl::get_type</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1get__type_3_010_00_01_t_00_01_pack_8_8_8_01_4" prot="public">Kokkos::Impl::get_type&lt; 0, T, Pack... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1get__type_3_01_i_00_01_t_00_01_pack_8_8_8_01_4" prot="public">Kokkos::Impl::get_type&lt; I, T, Pack... &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_get_crs_transpose_counts" prot="public">Kokkos::Impl::GetCrsTransposeCounts</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_graph_access" prot="public">Kokkos::Impl::GraphAccess</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_graph_impl" prot="public">Kokkos::Impl::GraphImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_graph_kernel_trait" prot="public">Kokkos::Impl::GraphKernelTrait</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_graph_node_aggregate_kernel_default_impl" prot="public">Kokkos::Impl::GraphNodeAggregateKernelDefaultImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_graph_node_backend_details_before_type_erasure" prot="public">Kokkos::Impl::GraphNodeBackendDetailsBeforeTypeErasure</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_graph_node_backend_specific_details" prot="public">Kokkos::Impl::GraphNodeBackendSpecificDetails</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_graph_node_impl" prot="public">Kokkos::Impl::GraphNodeImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_graph_node_impl_3_01_execution_space_00_01_kernel_00_01_kokkos_1_1_exe15d0f8c8c1320d4d8fd1757c382bbb8" prot="public">Kokkos::Impl::GraphNodeImpl&lt; ExecutionSpace, Kernel, Kokkos::Experimental::TypeErasedTag &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_graph_node_impl_3_01_execution_space_00_01_kokkos_1_1_experimental_1_0aed0b2dbb1d7b55007ef5f689bbd711" prot="public">Kokkos::Impl::GraphNodeImpl&lt; ExecutionSpace, Kokkos::Experimental::TypeErasedTag, Kokkos::Experimental::TypeErasedTag &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_graph_node_kernel_default_impl" prot="public">Kokkos::Impl::GraphNodeKernelDefaultImpl</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_graph_node_kernel_impl" prot="public">Kokkos::Impl::GraphNodeKernelImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1half__impl__t" prot="public">Kokkos::Impl::half_impl_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1has__condition" prot="public">Kokkos::Impl::has_condition</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1has__condition_3_01_default_type_00_01_condition_00_01_s_00_01_pack_8_8_8_01_4" prot="public">Kokkos::Impl::has_condition&lt; DefaultType, Condition, S, Pack... &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1has__member__shmem__size" prot="public">Kokkos::Impl::has_member_shmem_size</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1has__member__team__shmem__size" prot="public">Kokkos::Impl::has_member_team_shmem_size</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1has__type" prot="public">Kokkos::Impl::has_type</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1has__type_3_01_t_00_01_s_00_01_pack_8_8_8_01_4" prot="public">Kokkos::Impl::has_type&lt; T, S, Pack... &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_host_barrier" prot="public">Kokkos::Impl::HostBarrier</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_host_inaccessible_shared_allocation_record_common" prot="public">Kokkos::Impl::HostInaccessibleSharedAllocationRecordCommon</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_host_iterate_tile" prot="public">Kokkos::Impl::HostIterateTile</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_host_iterate_tile_3_01_r_p_00_01_functor_00_01_tag_00_01_value_type_033a1e0dc37565438ce1f7173e7db3297" prot="public">Kokkos::Impl::HostIterateTile&lt; RP, Functor, Tag, ValueType, std::enable_if_t&lt; std::is_void&lt; ValueType &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_host_iterate_tile_3_01_r_p_00_01_functor_00_01_tag_00_01_value_type_02bd2db12b6c77eadc751eb463f9c01f4" prot="public">Kokkos::Impl::HostIterateTile&lt; RP, Functor, Tag, ValueType, std::enable_if_t&lt;!std::is_void&lt; ValueType &gt;::value &amp;&amp;!std::is_array&lt; ValueType &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_host_iterate_tile_3_01_r_p_00_01_functor_00_01_tag_00_01_value_type_019260587cca7902daca3b505df73c4e2" prot="public">Kokkos::Impl::HostIterateTile&lt; RP, Functor, Tag, ValueType, std::enable_if_t&lt;!std::is_void&lt; ValueType &gt;::value &amp;&amp;std::is_array&lt; ValueType &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_host_mirror" prot="public">Kokkos::Impl::HostMirror</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_host_shared_ptr" prot="public">Kokkos::Impl::HostSharedPtr</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_host_thread_team_data" prot="public">Kokkos::Impl::HostThreadTeamData</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_host_thread_team_member" prot="public">Kokkos::Impl::HostThreadTeamMember</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1identity" prot="public">Kokkos::Impl::identity</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1if__c" prot="public">Kokkos::Impl::if_c</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1if__c_3_01false_00_01_true_type_00_01void_01_4" prot="public">Kokkos::Impl::if_c&lt; false, TrueType, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1if__c_3_01true_00_01_true_type_00_01_false_type_01_4" prot="public">Kokkos::Impl::if_c&lt; true, TrueType, FalseType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1if__c_3_01true_00_01void_00_01_false_type_01_4" prot="public">Kokkos::Impl::if_c&lt; true, void, FalseType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_index_type_policy_mixin" prot="public">Kokkos::Impl::IndexTypePolicyMixin</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_index_type_policy_mixin_3_01_kokkos_1_1_index_type_3_01_integral_indeb0189c3c4f42c2503c2c25062f806d74" prot="public">Kokkos::Impl::IndexTypePolicyMixin&lt; Kokkos::IndexType&lt; IntegralIndexType &gt;, AnalyzeNextTrait &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_index_type_trait" prot="public">Kokkos::Impl::IndexTypeTrait</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_in_place_tag" prot="public">Kokkos::Impl::InPlaceTag</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1integral__nonzero__constant" prot="public">Kokkos::Impl::integral_nonzero_constant</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1integral__nonzero__constant_3_01_t_00_01zero_00_01false_01_4" prot="public">Kokkos::Impl::integral_nonzero_constant&lt; T, zero, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__compatible__type__erasure" prot="public">Kokkos::Impl::is_compatible_type_erasure</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__compatible__type__erasure_3_01_kokkos_1_1_experimental_1_1_type_er85366299464d6c0c6094114529a7ad56" prot="public">Kokkos::Impl::is_compatible_type_erasure&lt; Kokkos::Experimental::TypeErasedTag, Kokkos::Experimental::TypeErasedTag &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__compatible__type__erasure_3_01_t_00_01_kokkos_1_1_experimental_1_1_type_erased_tag_01_4" prot="public">Kokkos::Impl::is_compatible_type_erasure&lt; T, Kokkos::Experimental::TypeErasedTag &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__compatible__type__erasure_3_01_t_00_01_t_01_4" prot="public">Kokkos::Impl::is_compatible_type_erasure&lt; T, T &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__compatible__type__erasure_3_01_template_3_01_t_src_00_01_u_src_00_d4b93660b76edb6236bd72a357e7c3be" prot="public">Kokkos::Impl::is_compatible_type_erasure&lt; Template&lt; TSrc, USrc, VSrc &gt;, Template&lt; TDst, UDst, VDst &gt;, std::enable_if_t&lt;!std::is_same&lt; TSrc, TDst &gt;::value||!std::is_same&lt; USrc, UDst &gt;::value||!std::is_same&lt; VSrc, VDst &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__default__memory__trait" prot="public">Kokkos::Impl::is_default_memory_trait</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__default__memory__trait_3_01_kokkos_1_1_memory_traits_3_010_01_4_01_4" prot="public">Kokkos::Impl::is_default_memory_trait&lt; Kokkos::MemoryTraits&lt; 0 &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__device__helper" prot="public">Kokkos::Impl::is_device_helper</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__device__helper_3_01_device_3_01_execution_space_00_01_memory_space_01_4_01_4" prot="public">Kokkos::Impl::is_device_helper&lt; Device&lt; ExecutionSpace, MemorySpace &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__dyn__rank__view__dup" prot="public">Kokkos::Impl::is_dyn_rank_view_dup</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__dyn__rank__view__dup_3_01_kokkos_1_1_dyn_rank_view_3_01_d_00_01_p_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::is_dyn_rank_view_dup&lt; Kokkos::DynRankView&lt; D, P... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__graph__kernel" prot="public">Kokkos::Impl::is_graph_kernel</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__host__thread__team__member" prot="public">Kokkos::Impl::is_host_thread_team_member</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__integral__extent" prot="public">Kokkos::Impl::is_integral_extent</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" prot="public">Kokkos::Impl::is_integral_extent_type</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type_3_01_kokkos_1_1pair_3_01i_type_00_01i_type_01_4_01_4" prot="public">Kokkos::Impl::is_integral_extent_type&lt; Kokkos::pair&lt; iType, iType &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type_3_01std_1_1initializer__list_3_01i_type_01_4_01_4" prot="public">Kokkos::Impl::is_integral_extent_type&lt; std::initializer_list&lt; iType &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type_3_01std_1_1pair_3_01i_type_00_01i_type_01_4_01_4" prot="public">Kokkos::Impl::is_integral_extent_type&lt; std::pair&lt; iType, iType &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__more__type__erased" prot="public">Kokkos::Impl::is_more_type_erased</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__more__type__erased_3_01_kokkos_1_1_experimental_1_1_type_erased_tabfedc9be637df7d0923fd786c07613be" prot="public">Kokkos::Impl::is_more_type_erased&lt; Kokkos::Experimental::TypeErasedTag, Kokkos::Experimental::TypeErasedTag &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__more__type__erased_3_01_kokkos_1_1_experimental_1_1_type_erased_tag_00_01_t_01_4" prot="public">Kokkos::Impl::is_more_type_erased&lt; Kokkos::Experimental::TypeErasedTag, T &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__pair__like" prot="public">Kokkos::Impl::is_pair_like</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__pair__like_3_01_kokkos_1_1pair_3_01_t_00_01_u_01_4_01_4" prot="public">Kokkos::Impl::is_pair_like&lt; Kokkos::pair&lt; T, U &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__pair__like_3_01std_1_1pair_3_01_t_00_01_u_01_4_01_4" prot="public">Kokkos::Impl::is_pair_like&lt; std::pair&lt; T, U &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__power__of__two" prot="public">Kokkos::Impl::is_power_of_two</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__specialization__of" prot="public">Kokkos::Impl::is_specialization_of</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__specialization__of_3_01_template_3_01_args_8_8_8_01_4_00_01_template_01_4" prot="public">Kokkos::Impl::is_specialization_of&lt; Template&lt; Args... &gt;, Template &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__thread__team__member" prot="public">Kokkos::Impl::is_thread_team_member</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__view__label" prot="public">Kokkos::Impl::is_view_label</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__view__label_3_01char_0f_n_0e_4" prot="public">Kokkos::Impl::is_view_label&lt; char[N]&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__view__label_3_01const_01char_0f_n_0e_4" prot="public">Kokkos::Impl::is_view_label&lt; const char[N]&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__view__label_3_01std_1_1string_01_4" prot="public">Kokkos::Impl::is_view_label&lt; std::string &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_is_graph_kernel_tag" prot="public">Kokkos::Impl::IsGraphKernelTag</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_iteration_pattern_trait" prot="public">Kokkos::Impl::IterationPatternTrait</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_join_add" prot="public">Kokkos::Impl::JoinAdd</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_join_lambda_adapter" prot="public">Kokkos::Impl::JoinLambdaAdapter</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_join_lambda_adapter_3_01_value_type_00_01_join_op_00_01decltype_07_fu91f729db28f43572b300ce430da0ba44" prot="public">Kokkos::Impl::JoinLambdaAdapter&lt; ValueType, JoinOp, decltype(FunctorValueJoinFunction&lt; JoinOp, void &gt;::enable_if(&amp;JoinOp::join))&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_kernel_in_graph_property" prot="public">Kokkos::Impl::KernelInGraphProperty</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_kokkos___atomic__is__only__allowed__with__32bit__and__64bit__scalars" prot="public">Kokkos::Impl::Kokkos_Atomic_is_only_allowed_with_32bit_and_64bit_scalars</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_kokkos___atomic__is__only__allowed__with__32bit__and__64bit__scalars_3_014_01_4" prot="public">Kokkos::Impl::Kokkos_Atomic_is_only_allowed_with_32bit_and_64bit_scalars&lt; 4 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_kokkos___atomic__is__only__allowed__with__32bit__and__64bit__scalars_3_018_01_4" prot="public">Kokkos::Impl::Kokkos_Atomic_is_only_allowed_with_32bit_and_64bit_scalars&lt; 8 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_launch_bounds_trait" prot="public">Kokkos::Impl::LaunchBoundsTrait</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1main__column__info" prot="public">Kokkos::Impl::main_column_info</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1make__all__extents__into__pointers" prot="public">Kokkos::Impl::make_all_extents_into_pointers</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1make__all__extents__into__pointers_3_01_t_01_5_01_4" prot="public">Kokkos::Impl::make_all_extents_into_pointers&lt; T * &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1make__all__extents__into__pointers_3_01_t_0f_n_0e_4" prot="public">Kokkos::Impl::make_all_extents_into_pointers&lt; T[N]&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1memory__order__acq__rel__t" prot="public">Kokkos::Impl::memory_order_acq_rel_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1memory__order__acquire__t" prot="public">Kokkos::Impl::memory_order_acquire_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1memory__order__relaxed__t" prot="public">Kokkos::Impl::memory_order_relaxed_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1memory__order__release__t" prot="public">Kokkos::Impl::memory_order_release_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1memory__order__seq__cst__t" prot="public">Kokkos::Impl::memory_order_seq_cst_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_memory_order_seq_cst" prot="public">Kokkos::Impl::MemoryOrderSeqCst</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_memory_pool_allocator" prot="public">Kokkos::Impl::MemoryPoolAllocator</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_memory_scope_device" prot="public">Kokkos::Impl::MemoryScopeDevice</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_memory_space_access" prot="public">Kokkos::Impl::MemorySpaceAccess</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_memory_space_access_3_01_kokkos_1_1_anonymous_space_00_01_kokkos_1_1_anonymous_space_01_4" prot="public">Kokkos::Impl::MemorySpaceAccess&lt; Kokkos::AnonymousSpace, Kokkos::AnonymousSpace &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_memory_space_access_3_01_kokkos_1_1_anonymous_space_00_01_other_space_01_4" prot="public">Kokkos::Impl::MemorySpaceAccess&lt; Kokkos::AnonymousSpace, OtherSpace &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_memory_space_access_3_01_kokkos_1_1_experimental_1_1_logical_memory_sfcd40ffe59ece344ff7332a0321419f9" prot="public">Kokkos::Impl::MemorySpaceAccess&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, Kokkos::Experimental::LogicalSpaceSharesAccess::shared_access &gt;, Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, Kokkos::Experimental::LogicalSpaceSharesAccess::shared_access &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_memory_space_access_3_01_kokkos_1_1_experimental_1_1_logical_memory_s3a580737a83d98e657b77172ab9a82da" prot="public">Kokkos::Impl::MemorySpaceAccess&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, Kokkos::Experimental::LogicalSpaceSharesAccess::shared_access &gt;, OtherSpace &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_memory_space_access_3_01_other_space_00_01_kokkos_1_1_anonymous_space_01_4" prot="public">Kokkos::Impl::MemorySpaceAccess&lt; OtherSpace, Kokkos::AnonymousSpace &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_memory_space_access_3_01_other_space_00_01_kokkos_1_1_experimental_1_216b984df052957ac72341de6b49f177" prot="public">Kokkos::Impl::MemorySpaceAccess&lt; OtherSpace, Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, Kokkos::Experimental::LogicalSpaceSharesAccess::shared_access &gt; &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_memory_space_instance_storage" prot="public">Kokkos::Impl::MemorySpaceInstanceStorage</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1min__max__functor" prot="public">Kokkos::Impl::min_max_functor</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_mirror_d_r_view_type" prot="public">Kokkos::Impl::MirrorDRViewType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_mirror_d_r_v_type" prot="public">Kokkos::Impl::MirrorDRVType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_mirror_offset_type" prot="public">Kokkos::Impl::MirrorOffsetType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_mirror_offset_view_type" prot="public">Kokkos::Impl::MirrorOffsetViewType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_mirror_type" prot="public">Kokkos::Impl::MirrorType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_mirror_view_type" prot="public">Kokkos::Impl::MirrorViewType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_no_ctors_not_on_device" prot="public">Kokkos::Impl::NoCtorsNotOnDevice</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1nonesuch__base" prot="public">Kokkos::Impl::nonesuch_base</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_not_on_device_ctor_disambiguator" prot="public">Kokkos::Impl::NotOnDeviceCtorDisambiguator</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_no_unique_address_member_emulation" prot="public">Kokkos::Impl::NoUniqueAddressMemberEmulation</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_null_space__t" prot="public">Kokkos::Impl::NullSpace_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_occupancy_control_policy_mixin" prot="public">Kokkos::Impl::OccupancyControlPolicyMixin</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_occupancy_control_policy_mixin_3_01_kokkos_1_1_experimental_1_1_desirca733092b8ba642c181ba4f60d824015" prot="public">Kokkos::Impl::OccupancyControlPolicyMixin&lt; Kokkos::Experimental::DesiredOccupancy, AnalyzeNextTrait &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_occupancy_control_policy_mixin_3_01_kokkos_1_1_experimental_1_1_maxim195cd607b51f731face31e48020ef2f1" prot="public">Kokkos::Impl::OccupancyControlPolicyMixin&lt; Kokkos::Experimental::MaximizeOccupancy, AnalyzeNextTrait &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_occupancy_control_trait" prot="public">Kokkos::Impl::OccupancyControlTrait</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_open_m_p_target_exec" prot="public">Kokkos::Impl::OpenMPTargetExec</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_open_m_p_target_exec_team_member" prot="public">Kokkos::Impl::OpenMPTargetExecTeamMember</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_b_and_3_01_scalar_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; BAnd&lt; Scalar, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_b_or_3_01_scalar_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; BOr&lt; Scalar, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_l_and_3_01_scalar_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; LAnd&lt; Scalar, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_l_or_3_01_scalar_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; LOr&lt; Scalar, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_max_3_01_scalar_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; Max&lt; Scalar, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_max_loc_3_01_scalar_00_01_index_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; MaxLoc&lt; Scalar, Index, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_min_3_01_scalar_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; Min&lt; Scalar, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_min_loc_3_01_scalar_00_01_index_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; MinLoc&lt; Scalar, Index, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_min_max_3_01_scalar_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; MinMax&lt; Scalar, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_min_max_loc_3_01_scalar_00_01_index_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; MinMaxLoc&lt; Scalar, Index, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_prod_3_01_scalar_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; Prod&lt; Scalar, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_open_m_p_target_reducer_wrapper_3_01_sum_3_01_scalar_00_01_space_01_4_01_4" prot="public">Kokkos::Impl::OpenMPTargetReducerWrapper&lt; Sum&lt; Scalar, Space &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device" prot="public">Kokkos::Impl::OperatorBoundsErrorOnDevice</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device_3_01_map_type_00_01false_01_4" prot="public">Kokkos::Impl::OperatorBoundsErrorOnDevice&lt; MapType, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device_3_01_map_type_00_01true_01_4" prot="public">Kokkos::Impl::OperatorBoundsErrorOnDevice&lt; MapType, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_optional_ref" prot="public">Kokkos::Impl::OptionalRef</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenambcaf3dbbf3769c186f6539fcb06a7a86" prot="private">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::Padding</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typename166a67d8af77fb099457cb7891100e48" prot="private">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::Padding</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_construct_name" prot="public">Kokkos::Impl::ParallelConstructName</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_construct_name_3_01_functor_type_00_01_tag_type_00_01false_01_4" prot="public">Kokkos::Impl::ParallelConstructName&lt; FunctorType, TagType, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_construct_name_3_01_functor_type_00_01_tag_type_00_01true_01_4" prot="public">Kokkos::Impl::ParallelConstructName&lt; FunctorType, TagType, true &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for" prot="public">Kokkos::Impl::ParallelFor</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_8fe23fdfff7673ed02c0305c8cccadb0" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::HIP &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_b88119ee9c7e47819b3200840d2c4b2d" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_01_63c2e816d52a9426c476f3afb74c6633" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, Kokkos::Experimental::SYCL &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_trai6d3765af87fc5ea460db09876e3be480" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_trai86ca7f109f4cb87c6a6d7684bcb5b083" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::SYCL &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_team_policy_3_01_propea358a9d1a9e2a12539680397ba4bdff0" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::TeamPolicy&lt; Properties... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_team_policy_3_01_prope955b625c7ce4bcf3e0badace24351e6f" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::TeamPolicy&lt; Properties... &gt;, Kokkos::Experimental::SYCL &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_work_graph_policy_3_0187ab9c7691b7b8e6bc707176aea8f42d" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::WorkGraphPolicy&lt; Traits... &gt;, Kokkos::Cuda &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_work_graph_policy_3_01bafe34c1959fd479492faa1ae72ceeb3" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::WorkGraphPolicy&lt; Traits... &gt;, Kokkos::Experimental::HIP &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_work_graph_policy_3_015e34f20694e9374a39a71e9fcf706a9e" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::WorkGraphPolicy&lt; Traits... &gt;, Kokkos::Experimental::HPX &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_work_graph_policy_3_0110a730f3efd30e00e46f203cee4be9cf" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::WorkGraphPolicy&lt; Traits... &gt;, Kokkos::OpenMP &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_work_graph_policy_3_01c7bff3f5183f5e661cc07fe067f028b6" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::WorkGraphPolicy&lt; Traits... &gt;, Kokkos::Serial &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_for_3_01_functor_type_00_01_kokkos_1_1_work_graph_policy_3_019fb7e25f1ccc02e0d90eff8648f795b2" prot="public">Kokkos::Impl::ParallelFor&lt; FunctorType, Kokkos::WorkGraphPolicy&lt; Traits... &gt;, Kokkos::Threads &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_reduce" prot="public">Kokkos::Impl::ParallelReduce</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_reduce_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_bdc053b0c89970eae6a5688843f7a1bc" prot="public">Kokkos::Impl::ParallelReduce&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, ReducerType, Kokkos::Experimental::HIP &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_reduce_3_01_functor_type_00_01_kokkos_1_1_m_d_range_policy_3_0bc5b2b6e3aeb6e90ba938c5eaab03f3" prot="public">Kokkos::Impl::ParallelReduce&lt; FunctorType, Kokkos::MDRangePolicy&lt; Traits... &gt;, ReducerType, Kokkos::Experimental::OpenMPTarget &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_reduce_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_t454e796b3f8e3aeb11e9810c0a3d671f" prot="public">Kokkos::Impl::ParallelReduce&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReducerType, Kokkos::Experimental::OpenMPTarget &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_reduce_3_01_functor_type_00_01_kokkos_1_1_team_policy_3_01_prcedab17c049995c0a0a903b988e09b64" prot="public">Kokkos::Impl::ParallelReduce&lt; FunctorType, Kokkos::TeamPolicy&lt; Properties... &gt;, ReducerType, Kokkos::Experimental::OpenMPTarget &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_reduce_3_01_functor_type_00_01_kokkos_1_1_team_policy_3_01_prcd9289f00a6093c16b2471117549f36e" prot="public">Kokkos::Impl::ParallelReduce&lt; FunctorType, Kokkos::TeamPolicy&lt; Properties... &gt;, ReducerType, Kokkos::Experimental::SYCL &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_adaptor" prot="public">Kokkos::Impl::ParallelReduceAdaptor</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_common" prot="public">Kokkos::Impl::ParallelReduceCommon</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_fence" prot="public">Kokkos::Impl::ParallelReduceFence</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_functor_type" prot="public">Kokkos::Impl::ParallelReduceFunctorType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_policy_type" prot="public">Kokkos::Impl::ParallelReducePolicyType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_policy_type_3_01typename_01std_1_1enable__if_3_01_kok848ce3b4cb79411f46f3ce594f276c47" prot="public">Kokkos::Impl::ParallelReducePolicyType&lt; typename std::enable_if&lt; Kokkos::is_execution_policy&lt; PolicyType &gt;::value &gt;::type, PolicyType, FunctorType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_policy_type_3_01typename_01std_1_1enable__if_3_01std_13e22621dc13ed314b0940e9b9f6ae62" prot="public">Kokkos::Impl::ParallelReducePolicyType&lt; typename std::enable_if&lt; std::is_integral&lt; PolicyType &gt;::value &gt;::type, PolicyType, FunctorType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_return_value" prot="public">Kokkos::Impl::ParallelReduceReturnValue</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_return_value_3_01typename_01std_1_1enable__if_3_01_ko6e12ab62caaddd9c84c0213144c41b08" prot="public">Kokkos::Impl::ParallelReduceReturnValue&lt; typename std::enable_if&lt; Kokkos::is_reducer_type&lt; ReturnType &gt;::value &gt;::type, ReturnType, FunctorType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_return_value_3_01typename_01std_1_1enable__if_3_01_kof263788faed5b5a361b25346cc14233a" prot="public">Kokkos::Impl::ParallelReduceReturnValue&lt; typename std::enable_if&lt; Kokkos::is_view&lt; ReturnType &gt;::value &gt;::type, ReturnType, FunctorType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_return_value_3_01typename_01std_1_1enable__if_3_9_kok6bc76e9e9f79f96c14a932c5bebdfefe" prot="public">Kokkos::Impl::ParallelReduceReturnValue&lt; typename std::enable_if&lt;!Kokkos::is_view&lt; ReturnType &gt;::value &amp;&amp;(!std::is_array&lt; ReturnType &gt;::value &amp;&amp;!std::is_pointer&lt; ReturnType &gt;::value) &amp;&amp;!Kokkos::is_reducer_type&lt; ReturnType &gt;::value &gt;::type, ReturnType, FunctorType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_return_value_3_01typename_01std_1_1enable__if_3_07std5db4d2d8b5e91b3524cbb764ac55b3d7" prot="public">Kokkos::Impl::ParallelReduceReturnValue&lt; typename std::enable_if&lt;(std::is_array&lt; ReturnType &gt;::value||std::is_pointer&lt; ReturnType &gt;::value)&gt;::type, ReturnType, FunctorType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_specialize" prot="public">Kokkos::Impl::ParallelReduceSpecialize</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_specialize_3_01_functor_type_00_01_kokkos_1_1_range_p85402569109dcebbf073455c51aa7331" prot="public">Kokkos::Impl::ParallelReduceSpecialize&lt; FunctorType, Kokkos::RangePolicy&lt; PolicyArgs... &gt;, ReducerType, PointerType, ValueType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parallel_reduce_specialize_3_01_functor_type_00_01_team_policy_internae6cadfeb049bd55160be4ff2110b3f0" prot="public">Kokkos::Impl::ParallelReduceSpecialize&lt; FunctorType, TeamPolicyInternal&lt; PolicyArgs... &gt;, ReducerType, PointerType, ValueType &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_scan" prot="public">Kokkos::Impl::ParallelScan</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc" prot="public">Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total" prot="public">Kokkos::Impl::ParallelScanWithTotal</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4" prot="public">Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_parse_view_extents" prot="public">Kokkos::Impl::ParseViewExtents</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_pattern_impl_specialization_from_tag" prot="public">Kokkos::Impl::PatternImplSpecializationFromTag</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_pattern_impl_specialization_from_tag_3_01_kokkos_1_1_parallel_for_tag_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::PatternImplSpecializationFromTag&lt; Kokkos::ParallelForTag, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_pattern_impl_specialization_from_tag_3_01_kokkos_1_1_parallel_reduce_tag_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::PatternImplSpecializationFromTag&lt; Kokkos::ParallelReduceTag, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_pattern_impl_specialization_from_tag_3_01_kokkos_1_1_parallel_scan_tag_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::PatternImplSpecializationFromTag&lt; Kokkos::ParallelScanTag, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_pattern_tag_from_impl_specialization" prot="public">Kokkos::Impl::PatternTagFromImplSpecialization</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_pattern_tag_from_impl_specialization_3_01_parallel_for_3_01_args_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::PatternTagFromImplSpecialization&lt; ParallelFor&lt; Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_pattern_tag_from_impl_specialization_3_01_parallel_reduce_3_01_args_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::PatternTagFromImplSpecialization&lt; ParallelReduce&lt; Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_pattern_tag_from_impl_specialization_3_01_parallel_scan_3_01_args_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::PatternTagFromImplSpecialization&lt; ParallelScan&lt; Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_per_team_value" prot="public">Kokkos::Impl::PerTeamValue</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_per_thread_value" prot="public">Kokkos::Impl::PerThreadValue</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_physical_layout" prot="public">Kokkos::Impl::PhysicalLayout</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_adaptor" prot="public">Kokkos::Impl::PolicyTraitAdaptor</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_adaptor_3_01_trait_spec_00_01_policy_template_3_01_traitad0999358d8ebdd1265ab4b8d43844a8" prot="public">Kokkos::Impl::PolicyTraitAdaptor&lt; TraitSpec, PolicyTemplate&lt; Traits... &gt;, NewTrait &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_adaptor_impl" prot="public">Kokkos::Impl::PolicyTraitAdaptorImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_adaptor_impl_3_01_trait_spec_00_01_policy_template_00_017d587f376165ce5763b142288a6d9234" prot="public">Kokkos::Impl::PolicyTraitAdaptorImpl&lt; TraitSpec, PolicyTemplate, type_list&lt; ProcessedTraits... &gt;, type_list&lt; MatchingTrait, ToProcessTraits... &gt;, NewTrait, std::enable_if_t&lt; PolicyTraitMatcher&lt; TraitSpec, MatchingTrait &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_adaptor_impl_3_01_trait_spec_00_01_policy_template_00_01443b2ff9abb00e327fc501e4ee6abdff" prot="public">Kokkos::Impl::PolicyTraitAdaptorImpl&lt; TraitSpec, PolicyTemplate, type_list&lt; ProcessedTraits... &gt;, type_list&lt; NonMatchingTrait, ToProcessTraits... &gt;, NewTrait, std::enable_if_t&lt;!PolicyTraitMatcher&lt; TraitSpec, NonMatchingTrait &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_adaptor_impl_3_01_trait_spec_00_01_policy_template_00_019b1b5d41774d791fa06f1cab0f244045" prot="public">Kokkos::Impl::PolicyTraitAdaptorImpl&lt; TraitSpec, PolicyTemplate, type_list&lt; ProcessedTraits... &gt;, type_list&lt;&gt;, NewTrait &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_matcher" prot="public">Kokkos::Impl::PolicyTraitMatcher</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_matcher_3_01_index_type_trait_00_01_index_type_3_01_integral_index_type_01_4_01_4" prot="public">Kokkos::Impl::PolicyTraitMatcher&lt; IndexTypeTrait, IndexType&lt; IntegralIndexType &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_matcher_3_01_index_type_trait_00_01_integral_index_type_4efa78c0bbbde8b9a6926f440e7c6577" prot="public">Kokkos::Impl::PolicyTraitMatcher&lt; IndexTypeTrait, IntegralIndexType, std::enable_if_t&lt; std::is_integral&lt; IntegralIndexType &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_matcher_3_01_iteration_pattern_trait_00_01_rank_3_01_n_0e9c6ca07f673538c486053e1b0d65156" prot="public">Kokkos::Impl::PolicyTraitMatcher&lt; IterationPatternTrait, Rank&lt; N, OuterDir, InnerDir &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_matcher_3_01_launch_bounds_trait_00_01_launch_bounds_3_01max_t_00_01min_b_01_4_01_4" prot="public">Kokkos::Impl::PolicyTraitMatcher&lt; LaunchBoundsTrait, LaunchBounds&lt; maxT, minB &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_matcher_3_01_schedule_trait_00_01_schedule_3_01_sched_01_4_01_4" prot="public">Kokkos::Impl::PolicyTraitMatcher&lt; ScheduleTrait, Schedule&lt; Sched &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_trait_matcher_3_01_trait_spec_00_01_trait_00_01std_1_1enable__79619f42c48c29fd614ae1a1e9f0bdc5" prot="public">Kokkos::Impl::PolicyTraitMatcher&lt; TraitSpec, Trait, std::enable_if_t&lt; TraitSpec::template trait_matches_specification&lt; Trait &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_policy_traits" prot="public">Kokkos::Impl::PolicyTraits</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1power__of__two" prot="public">Kokkos::Impl::power_of_two</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1power__of__two_3_011_00_01true_01_4" prot="public">Kokkos::Impl::power_of_two&lt; 1, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1power__of__two_3_012_00_01true_01_4" prot="public">Kokkos::Impl::power_of_two&lt; 2, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1power__of__two_3_01_n_00_01true_01_4" prot="public">Kokkos::Impl::power_of_two&lt; N, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1promote" prot="public">Kokkos::Impl::promote</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1promote_3_01double_01_4" prot="public">Kokkos::Impl::promote&lt; double &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1promote_3_01float_01_4" prot="public">Kokkos::Impl::promote&lt; float &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1promote_3_01long_01double_01_4" prot="public">Kokkos::Impl::promote&lt; long double &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1promote_3_01_t_00_01false_01_4" prot="public">Kokkos::Impl::promote&lt; T, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1promote__2" prot="public">Kokkos::Impl::promote_2</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1python__view__type__impl" prot="public">Kokkos::Impl::python_view_type_impl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1python__view__type__impl_3_01_view_t_3_01_value_t_01_4_00_01type__list_3_01_types_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::python_view_type_impl&lt; ViewT&lt; ValueT &gt;, type_list&lt; Types... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1python__view__type__impl_3_01_view_t_3_01_value_t_00_01_types_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::python_view_type_impl&lt; ViewT&lt; ValueT, Types... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_random___unique_index" prot="public">Kokkos::Impl::Random_UniqueIndex</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_random___xor_shift1024___state" prot="public">Kokkos::Impl::Random_XorShift1024_State</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_random___xor_shift1024___state_3_01false_01_4" prot="public">Kokkos::Impl::Random_XorShift1024_State&lt; false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_random___xor_shift1024___use_c_array_state" prot="public">Kokkos::Impl::Random_XorShift1024_UseCArrayState</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1rank__dynamic" prot="public">Kokkos::Impl::rank_dynamic</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1rank__dynamic_3_01_val_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::rank_dynamic&lt; Val, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1rank__dynamic_3_4" prot="public">Kokkos::Impl::rank_dynamic&lt;&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_reduce_functor_has_init" prot="public">Kokkos::Impl::ReduceFunctorHasInit</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_reducer_has_test_reference_function" prot="public">Kokkos::Impl::ReducerHasTestReferenceFunction</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1remove__cvref" prot="public">Kokkos::Impl::remove_cvref</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_schedule_trait" prot="public">Kokkos::Impl::ScheduleTrait</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_shared_allocation_header" prot="public">Kokkos::Impl::SharedAllocationHeader</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_shared_allocation_record" prot="public">Kokkos::Impl::SharedAllocationRecord</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_experimental_1_1_logical_memo0fa40d7d5cf99ce617ad6ae12584a9cf" prot="public">Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::Experimental::LogicalMemorySpace&lt; BaseSpace, DefaultBaseExecutionSpace, Namer, SharesAccessSemanticsWithBase &gt;, void &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_kokkos_1_1_host_space_00_01void_01_4" prot="public">Kokkos::Impl::SharedAllocationRecord&lt; Kokkos::HostSpace, void &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01_memory_space_00_01void_01_4" prot="public">Kokkos::Impl::SharedAllocationRecord&lt; MemorySpace, void &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_3_01void_00_01void_01_4" prot="public">Kokkos::Impl::SharedAllocationRecord&lt; void, void &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_shared_allocation_record_common" prot="public">Kokkos::Impl::SharedAllocationRecordCommon</innerclass>
    <innerclass refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" prot="public">Kokkos::Impl::SharedAllocationTracker</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__extra__execution__space__erroneously__given__to__execution__policy" prot="public">Kokkos::Impl::show_extra_execution_space_erroneously_given_to_execution_policy</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__extra__execution__space__erroneously__given__to__execution__policy_3_01void_01_4" prot="public">Kokkos::Impl::show_extra_execution_space_erroneously_given_to_execution_policy&lt; void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__extra__index__type__erroneously__given__to__execution__policy" prot="public">Kokkos::Impl::show_extra_index_type_erroneously_given_to_execution_policy</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__extra__index__type__erroneously__given__to__execution__policy_3_01void_01_4" prot="public">Kokkos::Impl::show_extra_index_type_erroneously_given_to_execution_policy&lt; void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__extra__iteration__pattern__erroneously__given__to__execution__policy" prot="public">Kokkos::Impl::show_extra_iteration_pattern_erroneously_given_to_execution_policy</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__extra__iteration__pattern__erroneously__given__to__execution__policy_3_01void_01_4" prot="public">Kokkos::Impl::show_extra_iteration_pattern_erroneously_given_to_execution_policy&lt; void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__extra__schedule__type__erroneously__given__to__execution__policy" prot="public">Kokkos::Impl::show_extra_schedule_type_erroneously_given_to_execution_policy</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__extra__schedule__type__erroneously__given__to__execution__policy_3_01void_01_4" prot="public">Kokkos::Impl::show_extra_schedule_type_erroneously_given_to_execution_policy&lt; void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__extra__work__tag__erroneously__given__to__execution__policy" prot="public">Kokkos::Impl::show_extra_work_tag_erroneously_given_to_execution_policy</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__extra__work__tag__erroneously__given__to__execution__policy_3_01void_01_4" prot="public">Kokkos::Impl::show_extra_work_tag_erroneously_given_to_execution_policy&lt; void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1show__name__of__invalid__execution__policy__trait" prot="public">Kokkos::Impl::show_name_of_invalid_execution_policy_trait</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_stacktrace" prot="public">Kokkos::Impl::Stacktrace</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_standard_layout_no_unique_address_member_emulation" prot="public">Kokkos::Impl::StandardLayoutNoUniqueAddressMemberEmulation</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_static_crs_graph_balancer_functor" prot="public">Kokkos::Impl::StaticCrsGraphBalancerFunctor</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_static_crs_graph_maximum_entry" prot="public">Kokkos::Impl::StaticCrsGraphMaximumEntry</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type" prot="public">Kokkos::Impl::SubViewDataType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" prot="public">Kokkos::Impl::SubViewDataTypeImpl</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01typename_01std_1_1enable__if_3_01is__paire12d285196d053141a48962706cc3dd7" prot="public">Kokkos::Impl::SubViewDataTypeImpl&lt; typename std::enable_if&lt; is_pair_like&lt; PairLike &gt;::value &gt;::type, ValueType, Kokkos::Experimental::Extents&lt; Ext, Exts... &gt;, PairLike, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01typename_01std_1_1enable__if_3_01std_1_1iaeb7d5ccccbd3ef003685b3c8050b160" prot="public">Kokkos::Impl::SubViewDataTypeImpl&lt; typename std::enable_if&lt; std::is_integral&lt; typename std::decay&lt; Integral &gt;::type &gt;::value &gt;::type, ValueType, Kokkos::Experimental::Extents&lt; Ext, Exts... &gt;, Integral, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01void_00_01_value_type_00_01_kokkos_1_1_ex38d52f2174174c3ac37061db5ee00104" prot="public">Kokkos::Impl::SubViewDataTypeImpl&lt; void, ValueType, Kokkos::Experimental::Extents&lt; Ext, Exts... &gt;, ALL_t, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01void_00_01_value_type_00_01_kokkos_1_1_experimental_1_1_extents_3_4_01_4" prot="public">Kokkos::Impl::SubViewDataTypeImpl&lt; void, ValueType, Kokkos::Experimental::Extents&lt;&gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_extents" prot="public">Kokkos::Impl::SubviewExtents</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_left_00_01_kokd72aceb560928d98b6ef0ee24c012980" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutLeft, Kokkos::LayoutLeft, RankDest, RankSrc, CurrentArg, Arg &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_left_00_01_kok49eec8f4573bacab246b5ca4745ad0a6" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutLeft, Kokkos::LayoutLeft, RankDest, RankSrc, CurrentArg, Arg, SubViewArgs... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_right_00_01_ko25cf0c3a14adc77c603e948353fabe75" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutRight, Kokkos::LayoutRight, RankDest, RankSrc, CurrentArg, Arg &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_right_00_01_ko09d0ad2cf16832917458eda4edaa6778" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutRight, Kokkos::LayoutRight, RankDest, RankSrc, CurrentArg, Arg, SubViewArgs... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_stride_00_01_kfb2ceff0b353233c11ac93b3d40e7b2a" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutStride, Kokkos::LayoutLeft, RankDest, RankSrc, CurrentArg, SubViewArgs... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_stride_00_01_k291f25c63ac60718e06b7732a839240e" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutStride, Kokkos::LayoutRight, RankDest, RankSrc, CurrentArg, SubViewArgs... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_stride_00_01_k881c1058f0424e1f0d1ce0d844ea37c7" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutStride, Kokkos::LayoutStride, RankDest, RankSrc, CurrentArg, SubViewArgs... &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_team_policy_internal" prot="public">Kokkos::Impl::TeamPolicyInternal</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_team_policy_internal_3_01_kokkos_1_1_experimental_1_1_open_m_p_target_00_01_properties_8_8_8_01_4" prot="public">Kokkos::Impl::TeamPolicyInternal&lt; Kokkos::Experimental::OpenMPTarget, Properties... &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_team_policy_internal_3_01_kokkos_1_1_experimental_1_1_s_y_c_l_00_01_properties_8_8_8_01_4" prot="public">Kokkos::Impl::TeamPolicyInternal&lt; Kokkos::Experimental::SYCL, Properties... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_team_thread_range_boundaries_struct" prot="public">Kokkos::Impl::TeamThreadRangeBoundariesStruct</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_team_thread_range_boundaries_struct_3_01i_type_00_01_open_m_p_target_exec_team_member_01_4" prot="public">Kokkos::Impl::TeamThreadRangeBoundariesStruct&lt; iType, OpenMPTargetExecTeamMember &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_team_vector_range_boundaries_struct" prot="public">Kokkos::Impl::TeamVectorRangeBoundariesStruct</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_team_vector_range_boundaries_struct_3_01i_type_00_01_open_m_p_target_exec_team_member_01_4" prot="public">Kokkos::Impl::TeamVectorRangeBoundariesStruct&lt; iType, OpenMPTargetExecTeamMember &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_thread_single_struct" prot="public">Kokkos::Impl::ThreadSingleStruct</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_thread_vector_range_boundaries_struct" prot="public">Kokkos::Impl::ThreadVectorRangeBoundariesStruct</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_thread_vector_range_boundaries_struct_3_01i_type_00_01_open_m_p_target_exec_team_member_01_4" prot="public">Kokkos::Impl::ThreadVectorRangeBoundariesStruct&lt; iType, OpenMPTargetExecTeamMember &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type" prot="public">Kokkos::Impl::Tile_Loop_Type</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_011_00_01_is_left_00_01_i_type_00_01_tagged_00_091bcbece239e4ba93c161bc81c330223" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 1, IsLeft, IType, Tagged, typename std::enable_if&lt;!std::is_same&lt; Tagged, void &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_011_00_01_is_left_00_01_i_type_00_01void_00_01void_01_4" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 1, IsLeft, IType, void, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_012_00_01_is_left_00_01_i_type_00_01_tagged_00_058e6558be2e47cc3e9f524fca210aa52" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 2, IsLeft, IType, Tagged, typename std::enable_if&lt;!std::is_same&lt; Tagged, void &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_012_00_01_is_left_00_01_i_type_00_01void_00_01void_01_4" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 2, IsLeft, IType, void, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_013_00_01_is_left_00_01_i_type_00_01_tagged_00_0d77f4e10659331875a923f15cd371d9d" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 3, IsLeft, IType, Tagged, typename std::enable_if&lt;!std::is_same&lt; Tagged, void &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_013_00_01_is_left_00_01_i_type_00_01void_00_01void_01_4" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 3, IsLeft, IType, void, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_014_00_01_is_left_00_01_i_type_00_01_tagged_00_064caad6839603822fae64e7fd6a49331" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 4, IsLeft, IType, Tagged, typename std::enable_if&lt;!std::is_same&lt; Tagged, void &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_014_00_01_is_left_00_01_i_type_00_01void_00_01void_01_4" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 4, IsLeft, IType, void, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_015_00_01_is_left_00_01_i_type_00_01_tagged_00_00b75b8193aa401fd45837c7744f65a43" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 5, IsLeft, IType, Tagged, typename std::enable_if&lt;!std::is_same&lt; Tagged, void &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_015_00_01_is_left_00_01_i_type_00_01void_00_01void_01_4" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 5, IsLeft, IType, void, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_016_00_01_is_left_00_01_i_type_00_01_tagged_00_02ae400a370ab289932e697cd7193fe4f" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 6, IsLeft, IType, Tagged, typename std::enable_if&lt;!std::is_same&lt; Tagged, void &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_016_00_01_is_left_00_01_i_type_00_01void_00_01void_01_4" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 6, IsLeft, IType, void, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_017_00_01_is_left_00_01_i_type_00_01_tagged_00_075d4a9d45d6b5bb7748b7c52977508b0" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 7, IsLeft, IType, Tagged, typename std::enable_if&lt;!std::is_same&lt; Tagged, void &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_017_00_01_is_left_00_01_i_type_00_01void_00_01void_01_4" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 7, IsLeft, IType, void, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_018_00_01_is_left_00_01_i_type_00_01_tagged_00_01eed31d0e423abb412e2d2a23f671cbc" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 8, IsLeft, IType, Tagged, typename std::enable_if&lt;!std::is_same&lt; Tagged, void &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile___loop___type_3_018_00_01_is_left_00_01_i_type_00_01void_00_01void_01_4" prot="public">Kokkos::Impl::Tile_Loop_Type&lt; 8, IsLeft, IType, void, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_tile_size_properties" prot="public">Kokkos::Impl::TileSizeProperties</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_trait_specification_base" prot="public">Kokkos::Impl::TraitSpecificationBase</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1type__list" prot="public">Kokkos::Impl::type_list</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1type__list__any" prot="public">Kokkos::Impl::type_list_any</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1type__list__any_3_01_unary_pred_00_01type__list_3_01_t_00_01_ts_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::type_list_any&lt; UnaryPred, type_list&lt; T, Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1type__list__any_3_01_unary_pred_00_01type__list_3_4_01_4" prot="public">Kokkos::Impl::type_list_any&lt; UnaryPred, type_list&lt;&gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1type__list__remove__first" prot="public">Kokkos::Impl::type_list_remove_first</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_unordered_map_can_assign" prot="public">Kokkos::Impl::UnorderedMapCanAssign</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_unordered_map_can_assign_3_01const_01_key_00_01const_01_value_00_01const_01_key_00_01_value_01_4" prot="public">Kokkos::Impl::UnorderedMapCanAssign&lt; const Key, const Value, const Key, Value &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_unordered_map_can_assign_3_01const_01_key_00_01const_01_value_00_01_key_00_01_value_01_4" prot="public">Kokkos::Impl::UnorderedMapCanAssign&lt; const Key, const Value, Key, Value &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_unordered_map_can_assign_3_01const_01_key_00_01_value_00_01_key_00_01_value_01_4" prot="public">Kokkos::Impl::UnorderedMapCanAssign&lt; const Key, Value, Key, Value &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_unordered_map_can_assign_3_01_key_00_01_value_00_01_key_00_01_value_01_4" prot="public">Kokkos::Impl::UnorderedMapCanAssign&lt; Key, Value, Key, Value &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_unordered_map_erase" prot="public">Kokkos::Impl::UnorderedMapErase</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_unordered_map_histogram" prot="public">Kokkos::Impl::UnorderedMapHistogram</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_unordered_map_print" prot="public">Kokkos::Impl::UnorderedMapPrint</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_unordered_map_rehash" prot="public">Kokkos::Impl::UnorderedMapRehash</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1variadic__size__t" prot="public">Kokkos::Impl::variadic_size_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1variadic__size__t_3_010_00_01_val_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::variadic_size_t&lt; 0, Val, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1variadic__size__t_3_01_i_00_01_val_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::variadic_size_t&lt; I, Val, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_vector_single_struct" prot="public">Kokkos::Impl::VectorSingleStruct</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1verify__space" prot="public">Kokkos::Impl::verify_space</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1verify__space_3_01_dst_memory_space_00_01_src_memory_space_00_01false_01_4" prot="public">Kokkos::Impl::verify_space&lt; DstMemorySpace, SrcMemorySpace, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_allocate_without_initializing_backward_compat" prot="public">Kokkos::Impl::ViewAllocateWithoutInitializingBackwardCompat</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" prot="public">Kokkos::Impl::ViewArrayAnalysis</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_array_analysis_3_01_t_01_5_01_4" prot="public">Kokkos::Impl::ViewArrayAnalysis&lt; T * &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_array_analysis_3_01_t_0f_0e_4" prot="public">Kokkos::Impl::ViewArrayAnalysis&lt; T[]&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_array_analysis_3_01_t_0f_n_0e_4" prot="public">Kokkos::Impl::ViewArrayAnalysis&lt; T[N]&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy" prot="public">Kokkos::Impl::ViewCopy</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy_3_01_kokkos_1_1_experimental_1_1_dynamic_view_3_01_d_p_8_8_06ee14caeb2e4b939ac4d6f453a25a96" prot="public">Kokkos::Impl::ViewCopy&lt; Kokkos::Experimental::DynamicView&lt; DP... &gt;, Kokkos::Experimental::DynamicView&lt; SP... &gt;, Layout, ExecSpace, 1, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy_3_01_kokkos_1_1_experimental_1_1_dynamic_view_3_01_d_p_8_8_f6980b73eed7bdf758a2e58c9c98d6a2" prot="public">Kokkos::Impl::ViewCopy&lt; Kokkos::Experimental::DynamicView&lt; DP... &gt;, ViewTypeB, Layout, ExecSpace, 1, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy_3_01_view_type_a_00_01_view_type_b_00_01_layout_00_01_exec_space_00_011_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewCopy&lt; ViewTypeA, ViewTypeB, Layout, ExecSpace, 1, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy_3_01_view_type_a_00_01_view_type_b_00_01_layout_00_01_exec_space_00_012_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewCopy&lt; ViewTypeA, ViewTypeB, Layout, ExecSpace, 2, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy_3_01_view_type_a_00_01_view_type_b_00_01_layout_00_01_exec_space_00_013_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewCopy&lt; ViewTypeA, ViewTypeB, Layout, ExecSpace, 3, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy_3_01_view_type_a_00_01_view_type_b_00_01_layout_00_01_exec_space_00_014_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewCopy&lt; ViewTypeA, ViewTypeB, Layout, ExecSpace, 4, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy_3_01_view_type_a_00_01_view_type_b_00_01_layout_00_01_exec_space_00_015_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewCopy&lt; ViewTypeA, ViewTypeB, Layout, ExecSpace, 5, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy_3_01_view_type_a_00_01_view_type_b_00_01_layout_00_01_exec_space_00_016_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewCopy&lt; ViewTypeA, ViewTypeB, Layout, ExecSpace, 6, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy_3_01_view_type_a_00_01_view_type_b_00_01_layout_00_01_exec_space_00_017_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewCopy&lt; ViewTypeA, ViewTypeB, Layout, ExecSpace, 7, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_copy_3_01_view_type_a_00_01_view_type_b_00_01_layout_00_01_exec_space_00_018_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewCopy&lt; ViewTypeA, ViewTypeB, Layout, ExecSpace, 8, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" prot="public">Kokkos::Impl::ViewCtorProp</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop_3_01_t_01_5_01_4" prot="public">Kokkos::Impl::ViewCtorProp&lt; T * &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop_3_01typename_01std_1_1enable__if_3_01is__view__label_3a1eaa082a8a4c7790fa543abb2a88116" prot="public">Kokkos::Impl::ViewCtorProp&lt; typename std::enable_if&lt; is_view_label&lt; Label &gt;::value &gt;::type, Label &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__me39867c502422a40f3930d84a8733d327" prot="public">Kokkos::Impl::ViewCtorProp&lt; typename std::enable_if&lt; Kokkos::is_memory_space&lt; Space &gt;::value||Kokkos::is_execution_space&lt; Space &gt;::value &gt;::type, Space &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop_3_01typename_01std_1_1enable__if_3_01std_1_1is__same_3d4ad9349ead7ac6fca0fdfddf9b53b73" prot="public">Kokkos::Impl::ViewCtorProp&lt; typename std::enable_if&lt; std::is_same&lt; P, AllowPadding_t &gt;::value||std::is_same&lt; P, WithoutInitializing_t &gt;::value &gt;::type, P &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop_3_01void_00_01_common_view_alloc_prop_3_01_specialize_00_01_t_01_4_01_4" prot="public">Kokkos::Impl::ViewCtorProp&lt; void, CommonViewAllocProp&lt; Specialize, T &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop_3_01void_00_01std_1_1integral__constant_3_01unsigned_00_01_i_01_4_01_4" prot="public">Kokkos::Impl::ViewCtorProp&lt; void, std::integral_constant&lt; unsigned, I &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop_3_01void_00_01_t_01_5_01_4" prot="public">Kokkos::Impl::ViewCtorProp&lt; void, T * &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop_3_01void_00_01_view_allocate_without_initializing_backward_compat_01_4" prot="public">Kokkos::Impl::ViewCtorProp&lt; void, ViewAllocateWithoutInitializingBackwardCompat &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop_3_01_without_initializing__t_00_01std_1_1string_00_01_ae4ba98e5c1d4a9b7be235dca6c27383" prot="public">Kokkos::Impl::ViewCtorProp&lt; WithoutInitializing_t, std::string, ViewAllocateWithoutInitializingBackwardCompat &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_analysis" prot="public">Kokkos::Impl::ViewDataAnalysis</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_analysis_3_01_data_type_00_01_array_layout_00_01_kokkos_1_199a9eb7aebf4121245738de677aeb4e1" prot="public">Kokkos::Impl::ViewDataAnalysis&lt; DataType, ArrayLayout, Kokkos::Array&lt; V, N, P &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_handle" prot="public">Kokkos::Impl::ViewDataHandle</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07st938ebca89995e28d97a55e257ca9a341" prot="public">Kokkos::Impl::ViewDataHandle&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::non_const_value_type, typename Traits::value_type &gt;::value &amp;&amp;std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;Traits::memory_traits::is_atomic)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07stbc5d2690bc22ef07bccd6c58af20e87a" prot="public">Kokkos::Impl::ViewDataHandle&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;(!Traits::memory_traits::is_aligned) &amp;&amp;Traits::memory_traits::is_restrict &amp;&amp;(!Traits::memory_traits::is_atomic))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07ste24704fcde5ef4ad99dc6b3e8de1cd8a" prot="public">Kokkos::Impl::ViewDataHandle&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;Traits::memory_traits::is_aligned &amp;&amp;(!Traits::memory_traits::is_restrict) &amp;&amp;(!Traits::memory_traits::is_atomic))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07st6e63042290570a38914c91e3b65fe351" prot="public">Kokkos::Impl::ViewDataHandle&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;Traits::memory_traits::is_aligned &amp;&amp;Traits::memory_traits::is_restrict &amp;&amp;(!Traits::memory_traits::is_atomic))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_type" prot="public">Kokkos::Impl::ViewDataType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_type_3_01_t_00_01_view_dimension_3_010_00_01_args_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::ViewDataType&lt; T, ViewDimension&lt; 0, Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_type_3_01_t_00_01_view_dimension_3_01_n_00_01_args_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::ViewDataType&lt; T, ViewDimension&lt; N, Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_type_3_01_t_00_01_view_dimension_3_4_01_4" prot="public">Kokkos::Impl::ViewDataType&lt; T, ViewDimension&lt;&gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension" prot="public">Kokkos::Impl::ViewDimension</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension0" prot="public">Kokkos::Impl::ViewDimension0</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension0_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension0&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension1" prot="public">Kokkos::Impl::ViewDimension1</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension1_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension1&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension2" prot="public">Kokkos::Impl::ViewDimension2</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension2_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension2&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension3" prot="public">Kokkos::Impl::ViewDimension3</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension3_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension3&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension4" prot="public">Kokkos::Impl::ViewDimension4</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension4_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension4&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension5" prot="public">Kokkos::Impl::ViewDimension5</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension5_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension5&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension6" prot="public">Kokkos::Impl::ViewDimension6</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension6_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension6&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension7" prot="public">Kokkos::Impl::ViewDimension7</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension7_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension7&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension_assignable" prot="public">Kokkos::Impl::ViewDimensionAssignable</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension_assignable_3_01_view_dimension_3_01_dst_args_8_8_8_01_32e5eb95062827502c6fee154e395435" prot="public">Kokkos::Impl::ViewDimensionAssignable&lt; ViewDimension&lt; DstArgs... &gt;, ViewDimension&lt; SrcArgs... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension_join" prot="public">Kokkos::Impl::ViewDimensionJoin</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension_join_3_01_view_dimension_3_01_a_8_8_8_01_4_00_01_view_a6ffa2c5a9af5a54e654cede11e223cf" prot="public">Kokkos::Impl::ViewDimensionJoin&lt; ViewDimension&lt; A... &gt;, ViewDimension&lt; B... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill" prot="public">Kokkos::Impl::ViewFill</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_3_01_view_type_00_01_layout_00_01_exec_space_00_010_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewFill&lt; ViewType, Layout, ExecSpace, 0, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_3_01_view_type_00_01_layout_00_01_exec_space_00_011_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewFill&lt; ViewType, Layout, ExecSpace, 1, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_3_01_view_type_00_01_layout_00_01_exec_space_00_012_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewFill&lt; ViewType, Layout, ExecSpace, 2, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_3_01_view_type_00_01_layout_00_01_exec_space_00_013_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewFill&lt; ViewType, Layout, ExecSpace, 3, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_3_01_view_type_00_01_layout_00_01_exec_space_00_014_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewFill&lt; ViewType, Layout, ExecSpace, 4, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_3_01_view_type_00_01_layout_00_01_exec_space_00_015_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewFill&lt; ViewType, Layout, ExecSpace, 5, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_3_01_view_type_00_01_layout_00_01_exec_space_00_016_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewFill&lt; ViewType, Layout, ExecSpace, 6, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_3_01_view_type_00_01_layout_00_01_exec_space_00_017_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewFill&lt; ViewType, Layout, ExecSpace, 7, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_3_01_view_type_00_01_layout_00_01_exec_space_00_018_00_01i_type_01_4" prot="public">Kokkos::Impl::ViewFill&lt; ViewType, Layout, ExecSpace, 8, iType &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_layout_selector" prot="public">Kokkos::Impl::ViewFillLayoutSelector</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_layout_selector_3_01_kokkos_1_1_layout_left_01_4" prot="public">Kokkos::Impl::ViewFillLayoutSelector&lt; Kokkos::LayoutLeft &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_fill_layout_selector_3_01_kokkos_1_1_layout_right_01_4" prot="public">Kokkos::Impl::ViewFillLayoutSelector&lt; Kokkos::LayoutRight &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping" prot="public">Kokkos::Impl::ViewMapping</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_dst_traits_00_01_src_traits_00_01typename_01std_1_1e1c3c077b111785296d2fc9410bbe05b1" prot="public">Kokkos::Impl::ViewMapping&lt; DstTraits, SrcTraits, typename std::enable_if&lt;(!(std::is_same&lt; typename SrcTraits::array_layout, LayoutStride &gt;::value) &amp;&amp;std::is_same&lt; typename DstTraits::specialize, void &gt;::value &amp;&amp;std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename DstTraits::array_layout, typename SrcTraits::array_layout &gt;::value||((std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutStride &gt;::value) &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))))&gt;::type &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_dst_traits_00_01_src_traits_00_01typename_01std_1_1e7ffe3bad5de9cf025bc19366b1ff4bcd" prot="public">Kokkos::Impl::ViewMapping&lt; DstTraits, SrcTraits, typename std::enable_if&lt;(std::is_same&lt; typename DstTraits::memory_space, typename SrcTraits::memory_space &gt;::value &amp;&amp;std::is_same&lt; typename DstTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutStride &gt;::value) &amp;&amp;std::is_same&lt; typename SrcTraits::specialize, Kokkos::Array&lt;&gt; &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_dst_traits_00_01_src_traits_00_01typename_01std_1_1e09837e70baba55b1f8642ed34a635c38" prot="public">Kokkos::Impl::ViewMapping&lt; DstTraits, SrcTraits, typename std::enable_if&lt;(std::is_same&lt; typename DstTraits::memory_space, typename SrcTraits::memory_space &gt;::value &amp;&amp;std::is_same&lt; typename DstTraits::specialize, void &gt;::value &amp;&amp;std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename DstTraits::array_layout, typename SrcTraits::array_layout &gt;::value||((std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutStride &gt;::value) &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value)))), Kokkos::Impl::ViewToDynRankViewTag &gt;::type &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_dst_traits_00_01_src_traits_00_01typename_01std_1_1e98ccb6c5b4de88f404c0cfebecd6851f" prot="public">Kokkos::Impl::ViewMapping&lt; DstTraits, SrcTraits, typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value &amp;&amp;std::is_same&lt; typename DstTraits::specialize, void &gt;::value &amp;&amp;std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename DstTraits::array_layout, typename SrcTraits::array_layout &gt;::value||(std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutStride &gt;::value)))&gt;::type &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01_kokkos_1_1_array_3_4_01_4" prot="public">Kokkos::Impl::ViewMapping&lt; Traits, Kokkos::Array&lt;&gt; &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a" prot="public">Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n0_01_9_0a0_01_6_6_76adcf9764d017d0601df17b101e6ff9" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N0 !=0 &amp;&amp;N1 !=0 &amp;&amp;N2 !=0 &amp;&amp;N3 !=0 &amp;&amp;N4 !=0 &amp;&amp;N5 !=0 &amp;&amp;N6 !=0 &amp;&amp;N7 !=0)&gt;::type, Kokkos::ViewTraits&lt; T ********, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2, iType3, iType4, iType5, iType6, iType7 &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n2_0a_0a0_01_6_6_n34b42cf626ad1c6fd08eb187369ce7053" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N2==0 &amp;&amp;N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T **, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1 &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n3_0a_0a0_01_6_6_n4c227911c115521965ba93c0fa380a739" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N3==0 &amp;&amp;N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ***, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2 &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n4_0a_0a0_01_6_6_n594a44d278cf2afd53f7a8191c679e7e9" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N4==0 &amp;&amp;N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ****, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2, iType3 &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n5_0a_0a0_01_6_6_n64c9774583dc51ce4f07c9cc884de0ae4" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N5==0 &amp;&amp;N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T *****, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2, iType3, iType4 &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n6_0a_0a0_01_6_6_n7130bf03a23d0d57c832c4022de6d0e99" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N6==0 &amp;&amp;N7==0)&gt;::type, Kokkos::ViewTraits&lt; T ******, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2, iType3, iType4, iType5 &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07_n7_0a_0a0_08_4_1_1t0d333e8a48638875f3caf47055fcdd0f" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(N7==0)&gt;::type, Kokkos::ViewTraits&lt; T *******, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, P... &gt;, Kokkos::Experimental::LayoutTiled&lt; OuterP, InnerP, N0, N1, N2, N3, N4, N5, N6, N7, true &gt;, iType0, iType1, iType2, iType3, iType4, iType5, iType6 &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_019e96415924ba754d31a193bfc8faa8e7" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, Kokkos::Array&lt;&gt; &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_0110de6b175491f348f1cb1de755c78580" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value)), Kokkos::Impl::DynRankSubviewTag &gt;::type, SrcTraits, Args... &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset" prot="public">Kokkos::Impl::ViewOffset</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamef5a9a83dcd8c8ce23e7874c5bea845af" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_selective_00_01void_01_4" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutSelective, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_stride_00_01void_01_4" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutStride, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_operator_bounds_error_abort" prot="public">Kokkos::Impl::ViewOperatorBoundsErrorAbort</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_operator_bounds_error_abort_3_01_kokkos_1_1_experimental_1_1_open_m_p_target_space_01_4" prot="public">Kokkos::Impl::ViewOperatorBoundsErrorAbort&lt; Kokkos::Experimental::OpenMPTargetSpace &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_remap" prot="public">Kokkos::Impl::ViewRemap</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_remap_3_01_dst_type_00_01_src_type_00_01_exec_space_00_011_01_4" prot="public">Kokkos::Impl::ViewRemap&lt; DstType, SrcType, ExecSpace, 1 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_remap_3_01_dst_type_00_01_src_type_00_01_exec_space_00_012_01_4" prot="public">Kokkos::Impl::ViewRemap&lt; DstType, SrcType, ExecSpace, 2 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_remap_3_01_dst_type_00_01_src_type_00_01_exec_space_00_013_01_4" prot="public">Kokkos::Impl::ViewRemap&lt; DstType, SrcType, ExecSpace, 3 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_remap_3_01_dst_type_00_01_src_type_00_01_exec_space_00_014_01_4" prot="public">Kokkos::Impl::ViewRemap&lt; DstType, SrcType, ExecSpace, 4 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_remap_3_01_dst_type_00_01_src_type_00_01_exec_space_00_015_01_4" prot="public">Kokkos::Impl::ViewRemap&lt; DstType, SrcType, ExecSpace, 5 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_remap_3_01_dst_type_00_01_src_type_00_01_exec_space_00_016_01_4" prot="public">Kokkos::Impl::ViewRemap&lt; DstType, SrcType, ExecSpace, 6 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_remap_3_01_dst_type_00_01_src_type_00_01_exec_space_00_017_01_4" prot="public">Kokkos::Impl::ViewRemap&lt; DstType, SrcType, ExecSpace, 7 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_remap_3_01_dst_type_00_01_src_type_00_01_exec_space_00_018_01_4" prot="public">Kokkos::Impl::ViewRemap&lt; DstType, SrcType, ExecSpace, 8 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_scalar_to_data_type" prot="public">Kokkos::Impl::ViewScalarToDataType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_scalar_to_data_type_3_01_scalar_type_00_010_01_4" prot="public">Kokkos::Impl::ViewScalarToDataType&lt; ScalarType, 0 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride" prot="public">Kokkos::Impl::ViewStride</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_010_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 0 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_011_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 1 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_012_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 2 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_013_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 3 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_014_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 4 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_015_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 5 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_016_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 6 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_017_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 7 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_018_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 8 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_to_dyn_rank_view_tag" prot="public">Kokkos::Impl::ViewToDynRankViewTag</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_tracker" prot="public">Kokkos::Impl::ViewTracker</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_uniform_layout" prot="public">Kokkos::Impl::ViewUniformLayout</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_uniform_layout_3_01_kokkos_1_1_layout_right_00_011_01_4" prot="public">Kokkos::Impl::ViewUniformLayout&lt; Kokkos::LayoutRight, 1 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_uniform_layout_3_01_layout_type_00_010_01_4" prot="public">Kokkos::Impl::ViewUniformLayout&lt; LayoutType, 0 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_uniform_type" prot="public">Kokkos::Impl::ViewUniformType</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_value_functor" prot="public">Kokkos::Impl::ViewValueFunctor</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01false_01_4" prot="public">Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4" prot="public">Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_without_initializing__t" prot="public">Kokkos::Impl::WithoutInitializing_t</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_work_graph_exec" prot="public">Kokkos::Impl::WorkGraphExec</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_work_item_property_trait" prot="public">Kokkos::Impl::WorkItemPropertyTrait</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_work_tag_trait" prot="public">Kokkos::Impl::WorkTagTrait</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_zero_memset" prot="public">Kokkos::Impl::ZeroMemset</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_zero_memset_3_01typename_01_host_space_1_1execution__space_00_01_d_t_00_01_d_p_8_8_8_01_4" prot="public">Kokkos::Impl::ZeroMemset&lt; typename HostSpace::execution_space, DT, DP... &gt;</innerclass>
    <innernamespace refid="namespace_kokkos_1_1_impl_1_1__parse__view__extents__impl">Kokkos::Impl::_parse_view_extents_impl</innernamespace>
    <innernamespace refid="namespace_kokkos_1_1_impl_1_1_experimental">Kokkos::Impl::Experimental</innernamespace>
    <innernamespace refid="namespace_kokkos_1_1_impl_1_1_reduce">Kokkos::Impl::Reduce</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_kokkos___spinwait_8hpp_1afcf50e09ebe75c9376784bc40f2637e6" prot="public" static="no" strong="yes">
        <type>int</type>
        <name>WaitMode</name>
        <qualifiedname>Kokkos::Impl::WaitMode</qualifiedname>
        <enumvalue id="_kokkos___spinwait_8hpp_1afcf50e09ebe75c9376784bc40f2637e6a18ff74f43da410c5529f7d6fca84f115" prot="public">
          <name>ACTIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_kokkos___spinwait_8hpp_1afcf50e09ebe75c9376784bc40f2637e6ade1c70a20d797811b2fd32facf64bbd4" prot="public">
          <name>PASSIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_kokkos___spinwait_8hpp_1afcf50e09ebe75c9376784bc40f2637e6aea2adde5c377cb5e09d14b71935c6f32" prot="public">
          <name>ROOT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" line="58" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="enum" id="_kokkos___memory_traits_8hpp_1a766fa46e920b5b7ea97aaa88cde7b727" prot="public" static="no" strong="no">
        <type>unsigned</type>
        <name>@228</name>
        <qualifiedname>Kokkos::Impl::@228</qualifiedname>
        <enumvalue id="_kokkos___memory_traits_8hpp_1a766fa46e920b5b7ea97aaa88cde7b727a2dc713b6a354481934283dda78bdb797" prot="public">
          <name>MEMORY_ALIGNMENT</name>
          <initializer>= KOKKOS_MEMORY_ALIGNMENT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_kokkos___memory_traits_8hpp_1a766fa46e920b5b7ea97aaa88cde7b727a3c39bdda70e63dfe1d9fae68e116c7b1" prot="public">
          <name>MEMORY_ALIGNMENT_THRESHOLD</name>
          <initializer>= KOKKOS_MEMORY_ALIGNMENT_THRESHOLD</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Memory alignment settings. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets global value for memory alignment. Must be a power of two! Enable compatibility of views from different devices with static stride. Use compiler flag to enable overwrites. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_MemoryTraits.hpp" line="116" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_MemoryTraits.hpp" bodystart="116" bodyend="119"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_kokkos___combined___reducer_8hpp_1a3efe7991d0755b830d9d7bbda7886d28" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class Space</type>
          </param>
          <param>
            <type>class ReferenceOrViewOrReducer</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1__reducer__from__arg" kindref="compound">_reducer_from_arg</ref>&lt; Space, ReferenceOrViewOrReducer &gt;::type</type>
        <definition>using Kokkos::Impl::_reducer_from_arg_t = typedef typename _reducer_from_arg&lt;Space, ReferenceOrViewOrReducer&gt;::type</definition>
        <argsstring></argsstring>
        <name>_reducer_from_arg_t</name>
        <qualifiedname>Kokkos::Impl::_reducer_from_arg_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" line="486" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___core_8cpp_1ab92d977b0c5dc2502477451704e48f0a" prot="public" static="no">
        <type>std::string</type>
        <definition>using Kokkos::Impl::metadata_category_type = typedef std::string</definition>
        <argsstring></argsstring>
        <name>metadata_category_type</name>
        <qualifiedname>Kokkos::Impl::metadata_category_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The category is only used in printing, tools get all metadata free of category </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" line="88" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___core_8cpp_1ab11e148e40235800b9bb010d65e674b8" prot="public" static="no">
        <type>std::string</type>
        <definition>using Kokkos::Impl::metadata_key_type = typedef std::string</definition>
        <argsstring></argsstring>
        <name>metadata_key_type</name>
        <qualifiedname>Kokkos::Impl::metadata_key_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" line="89" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___core_8cpp_1a6912dd942cd04d248ca36e6fbef21898" prot="public" static="no">
        <type>std::string</type>
        <definition>using Kokkos::Impl::metadata_value_type = typedef std::string</definition>
        <argsstring></argsstring>
        <name>metadata_value_type</name>
        <qualifiedname>Kokkos::Impl::metadata_value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" line="90" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___utilities_8hpp_1a9196d3443cb65701ffe510afde7198e7" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1identity" kindref="compound">identity</ref>&lt; T &gt;::type</type>
        <definition>using Kokkos::Impl::identity_t = typedef typename identity&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>identity_t</name>
        <qualifiedname>Kokkos::Impl::identity_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" line="66" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___utilities_8hpp_1a219d6ffde2b8caff2bac6435e59675fd" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class...</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>using Kokkos::Impl::void_t = typedef void</definition>
        <argsstring></argsstring>
        <name>void_t</name>
        <qualifiedname>Kokkos::Impl::void_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" line="73" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___utilities_8hpp_1a5e8acc45bacd54b43dfa842b400c7836" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1remove__cvref" kindref="compound">remove_cvref</ref>&lt; T &gt;::type</type>
        <definition>using Kokkos::Impl::remove_cvref_t = typedef typename remove_cvref&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>remove_cvref_t</name>
        <qualifiedname>Kokkos::Impl::remove_cvref_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" line="90" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___utilities_8hpp_1a081aa41f489d2f6e76bdfab016497cf5" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1concat__type__list" kindref="compound">concat_type_list</ref>&lt; T... &gt;::type</type>
        <definition>using Kokkos::Impl::concat_type_list_t = typedef typename concat_type_list&lt;T...&gt;::type</definition>
        <argsstring></argsstring>
        <name>concat_type_list_t</name>
        <qualifiedname>Kokkos::Impl::concat_type_list_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" line="222" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___utilities_8hpp_1a85187e827dd9c159dd3f8328dd1a5a89" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; class</type>
            <declname>PredicateT</declname>
            <defname>PredicateT</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>bool</type>
            <declname>ValueT</declname>
            <defname>ValueT</defname>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1filter__type__list" kindref="compound">filter_type_list</ref>&lt; PredicateT, T, ValueT &gt;::type</type>
        <definition>using Kokkos::Impl::filter_type_list_t = typedef typename filter_type_list&lt;PredicateT, T, ValueT&gt;::type</definition>
        <argsstring></argsstring>
        <name>filter_type_list_t</name>
        <qualifiedname>Kokkos::Impl::filter_type_list_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" line="254" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___view_ctor_8hpp_1ad8b2dd57a2d9d186dba6c441170f9d4f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">ViewCtorProp</ref>&lt; Args... &gt;</type>
        <definition>using Kokkos::Impl::view_ctor_prop_args = typedef ViewCtorProp&lt;Args...&gt;</definition>
        <argsstring></argsstring>
        <name>view_ctor_prop_args</name>
        <qualifiedname>Kokkos::Impl::view_ctor_prop_args</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewCtor.hpp" line="201" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewCtor.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___view_ctor_8hpp_1af4d1b11c85f66e5481a044ccb4601505" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Arg</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">ViewCtorProp</ref>&lt; void, Arg &gt;</type>
        <definition>using Kokkos::Impl::view_ctor_prop_base = typedef ViewCtorProp&lt;void, Arg&gt;</definition>
        <argsstring></argsstring>
        <name>view_ctor_prop_base</name>
        <qualifiedname>Kokkos::Impl::view_ctor_prop_base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewCtor.hpp" line="204" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewCtor.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___view_mapping_8hpp_1ac4145278c7dc92feafd523d2e8d0a77a" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>typename T::printable_label_typedef</type>
        <definition>using Kokkos::Impl::printable_label_typedef_t = typedef typename T::printable_label_typedef</definition>
        <argsstring></argsstring>
        <name>printable_label_typedef_t</name>
        <qualifiedname>Kokkos::Impl::printable_label_typedef_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3945" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3945" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___core__fwd_8hpp_1a033f9bdd07e361c49b8c41ed776ca606" prot="public" static="no">
        <type>void</type>
        <definition>using Kokkos::Impl::ActiveExecutionMemorySpace = typedef void</definition>
        <argsstring></argsstring>
        <name>ActiveExecutionMemorySpace</name>
        <qualifiedname>Kokkos::Impl::ActiveExecutionMemorySpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Core_fwd.hpp" line="198" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Core_fwd.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___mathematical_functions_8hpp_1a798ba6c1308c503af29dae353d63352e" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1promote" kindref="compound">promote</ref>&lt; T &gt;::type</type>
        <definition>using Kokkos::Impl::promote_t = typedef typename promote&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>promote_t</name>
        <qualifiedname>Kokkos::Impl::promote_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_MathematicalFunctions.hpp" line="79" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_MathematicalFunctions.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___mathematical_functions_8hpp_1a4a04532505c5380ada127834dd9e313f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1promote__2" kindref="compound">promote_2</ref>&lt; T, U &gt;::type</type>
        <definition>using Kokkos::Impl::promote_2_t = typedef typename promote_2&lt;T, U&gt;::type</definition>
        <argsstring></argsstring>
        <name>promote_2_t</name>
        <qualifiedname>Kokkos::Impl::promote_2_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_MathematicalFunctions.hpp" line="85" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_MathematicalFunctions.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___parallel_8hpp_1a3695979efb5c0a38831120cc12f9543f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>typename T::execution_space</type>
        <definition>using Kokkos::Impl::execution_space_t = typedef typename T::execution_space</definition>
        <argsstring></argsstring>
        <name>execution_space_t</name>
        <qualifiedname>Kokkos::Impl::execution_space_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Parallel.hpp" line="72" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Parallel.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___parallel_8hpp_1a74a203976320ef6678a17245ac859f3e" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>typename T::device_type</type>
        <definition>using Kokkos::Impl::device_type_t = typedef typename T::device_type</definition>
        <argsstring></argsstring>
        <name>device_type_t</name>
        <qualifiedname>Kokkos::Impl::device_type_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Parallel.hpp" line="75" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Parallel.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos_exp___inter_op_8hpp_1a0c0d4db94ebec2e30f45057d8b5cf103" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Tp</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1device__memory__space" kindref="compound">device_memory_space</ref>&lt; Tp &gt;::type</type>
        <definition>using Kokkos::Impl::device_memory_space_t = typedef typename device_memory_space&lt;Tp&gt;::type</definition>
        <argsstring></argsstring>
        <name>device_memory_space_t</name>
        <qualifiedname>Kokkos::Impl::device_memory_space_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/KokkosExp_InterOp.hpp" line="73" column="1" bodyfile="src/Kokkos/kokkos/core/src/KokkosExp_InterOp.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos_exp___inter_op_8hpp_1a2ccd9ea3513a512db72e6f0cbb4efd6d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1python__view__type__impl" kindref="compound">python_view_type_impl</ref>&lt; T... &gt;::type</type>
        <definition>using Kokkos::Impl::python_view_type_impl_t = typedef typename python_view_type_impl&lt;T...&gt;::type</definition>
        <argsstring></argsstring>
        <name>python_view_type_impl_t</name>
        <qualifiedname>Kokkos::Impl::python_view_type_impl_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/KokkosExp_InterOp.hpp" line="96" column="1" bodyfile="src/Kokkos/kokkos/core/src/KokkosExp_InterOp.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___traits__fwd_8hpp_1a2445573f21bc3cd41356b227749fb6d6" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_impl_1_1type__list" kindref="compound">type_list</ref>&lt; <ref refid="struct_kokkos_1_1_impl_1_1_execution_space_trait" kindref="compound">ExecutionSpaceTrait</ref>, <ref refid="struct_kokkos_1_1_impl_1_1_index_type_trait" kindref="compound">IndexTypeTrait</ref>, <ref refid="struct_kokkos_1_1_impl_1_1_schedule_trait" kindref="compound">ScheduleTrait</ref>, <ref refid="struct_kokkos_1_1_impl_1_1_iteration_pattern_trait" kindref="compound">IterationPatternTrait</ref>, <ref refid="struct_kokkos_1_1_impl_1_1_work_item_property_trait" kindref="compound">WorkItemPropertyTrait</ref>, <ref refid="struct_kokkos_1_1_impl_1_1_launch_bounds_trait" kindref="compound">LaunchBoundsTrait</ref>, <ref refid="struct_kokkos_1_1_impl_1_1_occupancy_control_trait" kindref="compound">OccupancyControlTrait</ref>, <ref refid="struct_kokkos_1_1_impl_1_1_graph_kernel_trait" kindref="compound">GraphKernelTrait</ref>, <ref refid="struct_kokkos_1_1_impl_1_1_work_tag_trait" kindref="compound">WorkTagTrait</ref> &gt;</type>
        <definition>using Kokkos::Impl::execution_policy_trait_specifications = typedef type_list&lt; ExecutionSpaceTrait, IndexTypeTrait, ScheduleTrait, IterationPatternTrait, WorkItemPropertyTrait, LaunchBoundsTrait, OccupancyControlTrait, GraphKernelTrait, WorkTagTrait &gt;</definition>
        <argsstring></argsstring>
        <name>execution_policy_trait_specifications</name>
        <qualifiedname>Kokkos::Impl::execution_policy_trait_specifications</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/traits/Kokkos_Traits_fwd.hpp" line="92" column="1" bodyfile="src/Kokkos/kokkos/core/src/traits/Kokkos_Traits_fwd.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_kokkos___work_tag_trait_8hpp_1a29b9bd1076a3f8223ec0eacdd19a55f0" prot="public" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1type__list__remove__first" kindref="compound">type_list_remove_first</ref>&lt; <ref refid="struct_kokkos_1_1_impl_1_1_work_tag_trait" kindref="compound">WorkTagTrait</ref>, <ref refid="struct_kokkos_1_1_impl_1_1type__list" kindref="compound">execution_policy_trait_specifications</ref> &gt;::type</type>
        <definition>using Kokkos::Impl::_exec_policy_traits_without_work_tag = typedef typename type_list_remove_first&lt; WorkTagTrait, execution_policy_trait_specifications&gt;::type</definition>
        <argsstring></argsstring>
        <name>_exec_policy_traits_without_work_tag</name>
        <qualifiedname>Kokkos::Impl::_exec_policy_traits_without_work_tag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/traits/Kokkos_WorkTagTrait.hpp" line="65" column="1" bodyfile="src/Kokkos/kokkos/core/src/traits/Kokkos_WorkTagTrait.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_kokkos___h_i_p___locks_8cpp_1a105905e5264cf3b4cb4f84d776d8ccc6" prot="public" static="no" mutable="no">
        <type>HIPLockArrays</type>
        <definition>HIPLockArrays Kokkos::Impl::g_host_hip_lock_arrays</definition>
        <argsstring></argsstring>
        <name>g_host_hip_lock_arrays</name>
        <qualifiedname>Kokkos::Impl::g_host_hip_lock_arrays</qualifiedname>
        <initializer>= {nullptr, nullptr, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Locks.cpp" line="84" column="15" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Locks.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_kokkos___h_i_p___space_8cpp_1a57dc735c215181f6f8fc0d8c4aa3bcd3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Kokkos::Impl::g_hip_space_factory_initialized</definition>
        <argsstring></argsstring>
        <name>g_hip_space_factory_initialized</name>
        <qualifiedname>Kokkos::Impl::g_hip_space_factory_initialized</qualifiedname>
        <initializer>=
    initialize_space_factory&lt;HIPSpaceInitializer&gt;(&quot;150_HIP&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Space.cpp" line="413" column="5" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Space.cpp" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_kokkos___analyze_policy_8hpp_1a3c5e99503361f9103262d1a465ca0a5f" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>class TraitSpecList</type>
          </param>
        </templateparamlist>
        <type>struct KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION</type>
        <definition>struct KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION Kokkos::Impl::AnalyzeExecPolicyBaseTraits</definition>
        <argsstring></argsstring>
        <name>AnalyzeExecPolicyBaseTraits</name>
        <qualifiedname>Kokkos::Impl::AnalyzeExecPolicyBaseTraits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_AnalyzePolicy.hpp" line="75" column="50" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_AnalyzePolicy.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_kokkos___atomic___memory___order_8hpp_1aaa25b2d75362513bfabb9690c15cc995" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="struct_kokkos_1_1_impl_1_1memory__order__seq__cst__t" kindref="compound">memory_order_seq_cst_t</ref></type>
        <definition>constexpr memory_order_seq_cst_t Kokkos::Impl::memory_order_seq_cst</definition>
        <argsstring></argsstring>
        <name>memory_order_seq_cst</name>
        <qualifiedname>Kokkos::Impl::memory_order_seq_cst</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Memory_Order.hpp" line="70" column="34" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Memory_Order.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_kokkos___atomic___memory___order_8hpp_1a3113399b97fd66b9db2ef4c2317ff514" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="struct_kokkos_1_1_impl_1_1memory__order__relaxed__t" kindref="compound">memory_order_relaxed_t</ref></type>
        <definition>constexpr memory_order_relaxed_t Kokkos::Impl::memory_order_relaxed</definition>
        <argsstring></argsstring>
        <name>memory_order_relaxed</name>
        <qualifiedname>Kokkos::Impl::memory_order_relaxed</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Memory_Order.hpp" line="81" column="34" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Memory_Order.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_kokkos___atomic___memory___order_8hpp_1a522ff4cc1befc85f385998ad4c718043" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="struct_kokkos_1_1_impl_1_1memory__order__acquire__t" kindref="compound">memory_order_acquire_t</ref></type>
        <definition>constexpr memory_order_acquire_t Kokkos::Impl::memory_order_acquire</definition>
        <argsstring></argsstring>
        <name>memory_order_acquire</name>
        <qualifiedname>Kokkos::Impl::memory_order_acquire</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Memory_Order.hpp" line="92" column="34" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Memory_Order.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_kokkos___atomic___memory___order_8hpp_1a5caeb1409c564e8df3af6e684de0fe25" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="struct_kokkos_1_1_impl_1_1memory__order__release__t" kindref="compound">memory_order_release_t</ref></type>
        <definition>constexpr memory_order_release_t Kokkos::Impl::memory_order_release</definition>
        <argsstring></argsstring>
        <name>memory_order_release</name>
        <qualifiedname>Kokkos::Impl::memory_order_release</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Memory_Order.hpp" line="103" column="34" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Memory_Order.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_kokkos___atomic___memory___order_8hpp_1ace8458e3649b4c61cedd914ee403d161" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="struct_kokkos_1_1_impl_1_1memory__order__acq__rel__t" kindref="compound">memory_order_acq_rel_t</ref></type>
        <definition>constexpr memory_order_acq_rel_t Kokkos::Impl::memory_order_acq_rel</definition>
        <argsstring></argsstring>
        <name>memory_order_acq_rel</name>
        <qualifiedname>Kokkos::Impl::memory_order_acq_rel</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Memory_Order.hpp" line="114" column="34" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Atomic_Memory_Order.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_kokkos___core_8cpp_1ae6b908e0f62a902be31c27d6c64fbc61" prot="public" static="no" mutable="no">
        <type>std::map&lt; metadata_category_type, std::map&lt; metadata_key_type, metadata_value_type &gt; &gt;</type>
        <definition>std::map&lt;metadata_category_type, std::map&lt;metadata_key_type, metadata_value_type&gt; &gt; Kokkos::Impl::metadata_map</definition>
        <argsstring></argsstring>
        <name>metadata_map</name>
        <qualifiedname>Kokkos::Impl::metadata_map</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" line="94" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_kokkos___stacktrace_8cpp_1abc9faad46f18db08c5baad167851e779" prot="public" static="no" mutable="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>std::function&lt;void()&gt; Kokkos::Impl::user_terminate_handler_post_</definition>
        <argsstring></argsstring>
        <name>user_terminate_handler_post_</name>
        <qualifiedname>Kokkos::Impl::user_terminate_handler_post_</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="221" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_kokkos___sort_8hpp_1a4508580d711c489ffb0c06b6098e2a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ViewType</type>
          </param>
          <param>
            <type>class ExecutionSpace</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Kokkos::Impl::try_std_sort</definition>
        <argsstring>(ViewType view, const ExecutionSpace &amp;exec)</argsstring>
        <name>try_std_sort</name>
        <qualifiedname>Kokkos::Impl::try_std_sort</qualifiedname>
        <param>
          <type>ViewType</type>
          <declname>view</declname>
        </param>
        <param>
          <type>const ExecutionSpace &amp;</type>
          <declname>exec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/algorithms/src/Kokkos_Sort.hpp" line="517" column="6" bodyfile="src/Kokkos/kokkos/algorithms/src/Kokkos_Sort.hpp" bodystart="517" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___bitset__impl_8hpp_1a7d22c83cc6674f0867bf2579d13445fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION unsigned</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION unsigned Kokkos::Impl::rotate_right</definition>
        <argsstring>(unsigned i, int r)</argsstring>
        <name>rotate_right</name>
        <qualifiedname>Kokkos::Impl::rotate_right</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/impl/Kokkos_Bitset_impl.hpp" line="61" column="10" bodyfile="src/Kokkos/kokkos/containers/src/impl/Kokkos_Bitset_impl.hpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___functional__impl_8hpp_1a40ec40f9f20829276b1f421d5fe031e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION uint32_t</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION uint32_t Kokkos::Impl::getblock32</definition>
        <argsstring>(const uint8_t *p, int i)</argsstring>
        <name>getblock32</name>
        <qualifiedname>Kokkos::Impl::getblock32</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/impl/Kokkos_Functional_impl.hpp" line="55" column="10" bodyfile="src/Kokkos/kokkos/containers/src/impl/Kokkos_Functional_impl.hpp" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___functional__impl_8hpp_1abf49a82d3fdc1096aa0591e6feb42704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION uint32_t</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION uint32_t Kokkos::Impl::rotl32</definition>
        <argsstring>(uint32_t x, int8_t r)</argsstring>
        <name>rotl32</name>
        <qualifiedname>Kokkos::Impl::rotl32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/impl/Kokkos_Functional_impl.hpp" line="63" column="10" bodyfile="src/Kokkos/kokkos/containers/src/impl/Kokkos_Functional_impl.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___functional__impl_8hpp_1ae15f45f8eaa46d406719a25ae13eeff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION uint32_t</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION uint32_t Kokkos::Impl::fmix32</definition>
        <argsstring>(uint32_t h)</argsstring>
        <name>fmix32</name>
        <qualifiedname>Kokkos::Impl::fmix32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/impl/Kokkos_Functional_impl.hpp" line="66" column="10" bodyfile="src/Kokkos/kokkos/containers/src/impl/Kokkos_Functional_impl.hpp" bodystart="66" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___functional__impl_8hpp_1aefd6f32d1af6266b4074b4a1ed8b70d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION uint32_t</type>
        <definition>KOKKOS_INLINE_FUNCTION uint32_t Kokkos::Impl::MurmurHash3_x86_32</definition>
        <argsstring>(const void *key, int len, uint32_t seed)</argsstring>
        <name>MurmurHash3_x86_32</name>
        <qualifiedname>Kokkos::Impl::MurmurHash3_x86_32</qualifiedname>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/impl/Kokkos_Functional_impl.hpp" line="77" column="10" bodyfile="src/Kokkos/kokkos/containers/src/impl/Kokkos_Functional_impl.hpp" bodystart="77" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___functional__impl_8hpp_1ad093eb4ae5a3dc936a50ed5edb18dffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FORCEINLINE_FUNCTION bool</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION bool Kokkos::Impl::bitwise_equal</definition>
        <argsstring>(T const *const a_ptr, T const *const b_ptr)</argsstring>
        <name>bitwise_equal</name>
        <qualifiedname>Kokkos::Impl::bitwise_equal</qualifiedname>
        <param>
          <type>T const *const</type>
          <declname>a_ptr</declname>
        </param>
        <param>
          <type>T const *const</type>
          <declname>b_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/impl/Kokkos_Functional_impl.hpp" line="141" column="34" bodyfile="src/Kokkos/kokkos/containers/src/impl/Kokkos_Functional_impl.hpp" bodystart="141" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___unordered_map__impl_8cpp_1ad68973d8d93adc0de36da8da3336372e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t Kokkos::Impl::find_hash_size</definition>
        <argsstring>(uint32_t size)</argsstring>
        <name>find_hash_size</name>
        <qualifiedname>Kokkos::Impl::find_hash_size</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/impl/Kokkos_UnorderedMap_impl.cpp" line="50" column="10" bodyfile="src/Kokkos/kokkos/containers/src/impl/Kokkos_UnorderedMap_impl.cpp" bodystart="50" bodyend="103" declfile="src/Kokkos/kokkos/containers/src/impl/Kokkos_UnorderedMap_impl.hpp" declline="59" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___dyn_rank_view_8hpp_1a97059a79712283c264fa927094414fdd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Layout</type>
          </param>
          <param>
            <type>typename iType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION std::enable_if&lt;(std::is_same&lt; Layout, <ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref> &gt;::value||std::is_same&lt; Layout, <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref> &gt;::value)&amp;&amp;std::is_integral&lt; iType &gt;::value, Layout &gt;::type</type>
        <definition>static KOKKOS_INLINE_FUNCTION std::enable_if&lt;(std::is_same&lt; Layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; Layout, Kokkos::LayoutLeft &gt;::value)&amp;&amp;std::is_integral&lt; iType &gt;::value, Layout &gt;::type Kokkos::Impl::reconstructLayout</definition>
        <argsstring>(const Layout &amp;layout, iType dynrank)</argsstring>
        <name>reconstructLayout</name>
        <qualifiedname>Kokkos::Impl::reconstructLayout</qualifiedname>
        <param>
          <type>const Layout &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>iType</type>
          <declname>dynrank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" line="195" column="5" bodyfile="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" bodystart="195" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___dyn_rank_view_8hpp_1a9fd29889d23f4bf08b6cab421afa7191" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Layout</type>
          </param>
          <param>
            <type>typename iType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION std::enable_if&lt;(std::is_same&lt; Layout, <ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref> &gt;::value)&amp;&amp;std::is_integral&lt; iType &gt;::value, Layout &gt;::type</type>
        <definition>static KOKKOS_INLINE_FUNCTION std::enable_if&lt;(std::is_same&lt; Layout, Kokkos::LayoutStride &gt;::value)&amp;&amp;std::is_integral&lt; iType &gt;::value, Layout &gt;::type Kokkos::Impl::reconstructLayout</definition>
        <argsstring>(const Layout &amp;layout, iType dynrank)</argsstring>
        <name>reconstructLayout</name>
        <qualifiedname>Kokkos::Impl::reconstructLayout</qualifiedname>
        <param>
          <type>const Layout &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>iType</type>
          <declname>dynrank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" line="212" column="1" bodyfile="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" bodystart="212" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___dyn_rank_view_8hpp_1a645d8ba6486e157ba5b01094ff339967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
          </param>
          <param>
            <type>typename iType0</type>
          </param>
          <param>
            <type>class MapType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>KOKKOS_INLINE_FUNCTION bool Kokkos::Impl::dyn_rank_view_verify_operator_bounds</definition>
        <argsstring>(const iType0 &amp;, const MapType &amp;)</argsstring>
        <name>dyn_rank_view_verify_operator_bounds</name>
        <qualifiedname>Kokkos::Impl::dyn_rank_view_verify_operator_bounds</qualifiedname>
        <param>
          <type>const iType0 &amp;</type>
        </param>
        <param>
          <type>const MapType &amp;</type>
        </param>
        <briefdescription>
<para>Debug bounds-checking routines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" line="235" column="29" bodyfile="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___dyn_rank_view_8hpp_1ac52ff60b313539302064b008cc8fc88a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>typename iType0</type>
          </param>
          <param>
            <type>class MapType</type>
          </param>
          <param>
            <type>typename iType1</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>KOKKOS_INLINE_FUNCTION bool Kokkos::Impl::dyn_rank_view_verify_operator_bounds</definition>
        <argsstring>(const iType0 &amp;rank, const MapType &amp;map, const iType1 &amp;i, Args... args)</argsstring>
        <name>dyn_rank_view_verify_operator_bounds</name>
        <qualifiedname>Kokkos::Impl::dyn_rank_view_verify_operator_bounds</qualifiedname>
        <param>
          <type>const iType0 &amp;</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>const MapType &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const iType1 &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" line="242" column="29" bodyfile="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" bodystart="242" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___dyn_rank_view_8hpp_1a78be33ed8f25902afbf85951c246928e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
          </param>
          <param>
            <type>class MapType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kokkos::Impl::dyn_rank_view_error_operator_bounds</definition>
        <argsstring>(char *, int, const MapType &amp;)</argsstring>
        <name>dyn_rank_view_error_operator_bounds</name>
        <qualifiedname>Kokkos::Impl::dyn_rank_view_error_operator_bounds</qualifiedname>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>const MapType &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" line="261" column="13" bodyfile="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" bodystart="261" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___dyn_rank_view_8hpp_1a415c2277138cdf96f20832feb6bdb9e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>class MapType</type>
          </param>
          <param>
            <type>class iType</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kokkos::Impl::dyn_rank_view_error_operator_bounds</definition>
        <argsstring>(char *buf, int len, const MapType &amp;map, const iType &amp;i, Args... args)</argsstring>
        <name>dyn_rank_view_error_operator_bounds</name>
        <qualifiedname>Kokkos::Impl::dyn_rank_view_error_operator_bounds</qualifiedname>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const MapType &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const iType &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" line="264" column="13" bodyfile="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" bodystart="264" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___dyn_rank_view_8hpp_1a209529737fda50c1c6c463bf0653a4d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MemorySpace</type>
          </param>
          <param>
            <type>typename iType0</type>
          </param>
          <param>
            <type>typename iType1</type>
          </param>
          <param>
            <type>class MapType</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::dyn_rank_view_verify_operator_bounds</definition>
        <argsstring>(const iType0 &amp;op_rank, const iType1 &amp;rank, const Kokkos::Impl::SharedAllocationTracker &amp;tracker, const MapType &amp;map, Args... args)</argsstring>
        <name>dyn_rank_view_verify_operator_bounds</name>
        <qualifiedname>Kokkos::Impl::dyn_rank_view_verify_operator_bounds</qualifiedname>
        <param>
          <type>const iType0 &amp;</type>
          <declname>op_rank</declname>
        </param>
        <param>
          <type>const iType1 &amp;</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>const <ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">Kokkos::Impl::SharedAllocationTracker</ref> &amp;</type>
          <declname>tracker</declname>
        </param>
        <param>
          <type>const MapType &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" line="276" column="29" bodyfile="src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp" bodystart="276" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___cuda___instance_8hpp_1ac9d8f247deec7e68799f4bbefe0aa25e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CudaSpace::size_type</type>
        <definition>CudaSpace::size_type Kokkos::Impl::cuda_internal_multiprocessor_count</definition>
        <argsstring>()</argsstring>
        <name>cuda_internal_multiprocessor_count</name>
        <qualifiedname>Kokkos::Impl::cuda_internal_multiprocessor_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" line="56" column="22" declfile="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" declline="56" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___cuda___instance_8hpp_1adcbca72391f135cbe5ce896f1ac3ecff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CudaSpace::size_type</type>
        <definition>CudaSpace::size_type Kokkos::Impl::cuda_internal_maximum_warp_count</definition>
        <argsstring>()</argsstring>
        <name>cuda_internal_maximum_warp_count</name>
        <qualifiedname>Kokkos::Impl::cuda_internal_maximum_warp_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" line="57" column="22" declfile="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" declline="57" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___cuda___instance_8hpp_1a8258f1322005ee27bfbc4aaca0585622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CudaSpace::size_type</type>
        <definition>CudaSpace::size_type Kokkos::Impl::cuda_internal_maximum_grid_count</definition>
        <argsstring>()</argsstring>
        <name>cuda_internal_maximum_grid_count</name>
        <qualifiedname>Kokkos::Impl::cuda_internal_maximum_grid_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" line="58" column="22" declfile="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" declline="58" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___cuda___instance_8hpp_1afd0cfc066c327698ce95e31c0281d899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CudaSpace::size_type</type>
        <definition>CudaSpace::size_type Kokkos::Impl::cuda_internal_maximum_shared_words</definition>
        <argsstring>()</argsstring>
        <name>cuda_internal_maximum_shared_words</name>
        <qualifiedname>Kokkos::Impl::cuda_internal_maximum_shared_words</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" line="59" column="22" declfile="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" declline="59" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___cuda___instance_8hpp_1a05130594f1b43a83f7d050d4a7732f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CudaSpace::size_type</type>
        <definition>CudaSpace::size_type Kokkos::Impl::cuda_internal_maximum_concurrent_block_count</definition>
        <argsstring>()</argsstring>
        <name>cuda_internal_maximum_concurrent_block_count</name>
        <qualifiedname>Kokkos::Impl::cuda_internal_maximum_concurrent_block_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" line="61" column="22" declfile="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" declline="61" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___cuda___instance_8hpp_1addac559515e15fb158c4620f33dfe9da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CudaSpace::size_type *</type>
        <definition>CudaSpace::size_type * Kokkos::Impl::cuda_internal_scratch_flags</definition>
        <argsstring>(const Cuda &amp;, const CudaSpace::size_type size)</argsstring>
        <name>cuda_internal_scratch_flags</name>
        <qualifiedname>Kokkos::Impl::cuda_internal_scratch_flags</qualifiedname>
        <param>
          <type>const Cuda &amp;</type>
        </param>
        <param>
          <type>const CudaSpace::size_type</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" line="63" column="22" declfile="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" declline="63" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___cuda___instance_8hpp_1a4a7cf3969dadc4063821c071c926ea77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CudaSpace::size_type *</type>
        <definition>CudaSpace::size_type * Kokkos::Impl::cuda_internal_scratch_space</definition>
        <argsstring>(const Cuda &amp;, const CudaSpace::size_type size)</argsstring>
        <name>cuda_internal_scratch_space</name>
        <qualifiedname>Kokkos::Impl::cuda_internal_scratch_space</qualifiedname>
        <param>
          <type>const Cuda &amp;</type>
        </param>
        <param>
          <type>const CudaSpace::size_type</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" line="65" column="22" declfile="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" declline="65" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___cuda___instance_8hpp_1a5f6ee40d34c0ea73c79ab94d497418dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CudaSpace::size_type *</type>
        <definition>CudaSpace::size_type * Kokkos::Impl::cuda_internal_scratch_unified</definition>
        <argsstring>(const Cuda &amp;, const CudaSpace::size_type size)</argsstring>
        <name>cuda_internal_scratch_unified</name>
        <qualifiedname>Kokkos::Impl::cuda_internal_scratch_unified</qualifiedname>
        <param>
          <type>const Cuda &amp;</type>
        </param>
        <param>
          <type>const CudaSpace::size_type</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" line="67" column="22" declfile="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_Instance.hpp" declline="67" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___cuda___m_d_range_policy_8hpp_1a82600c1255e31779b1c64dd868ca00d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="struct_kokkos_1_1_impl_1_1_tile_size_properties" kindref="compound">TileSizeProperties</ref></type>
        <definition>TileSizeProperties Kokkos::Impl::get_tile_size_properties&lt; Kokkos::Cuda &gt;</definition>
        <argsstring>(const Kokkos::Cuda &amp;space)</argsstring>
        <name>get_tile_size_properties&lt; Kokkos::Cuda &gt;</name>
        <qualifiedname>Kokkos::Impl::get_tile_size_properties&lt; Kokkos::Cuda &gt;</qualifiedname>
        <param>
          <type>const Kokkos::Cuda &amp;</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_MDRangePolicy.hpp" line="24" column="8" bodyfile="src/Kokkos/kokkos/core/src/Cuda/Kokkos_Cuda_MDRangePolicy.hpp" bodystart="24" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___h_i_p___error_8hpp_1adbf27a1dba02f8eafafc6b6db0daf9ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::hip_internal_error_throw</definition>
        <argsstring>(hipError_t e, const char *name, const char *file=nullptr, const int line=0)</argsstring>
        <name>hip_internal_error_throw</name>
        <qualifiedname>Kokkos::Impl::hip_internal_error_throw</qualifiedname>
        <param>
          <type>hipError_t</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>line</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Instance.cpp" line="514" column="6" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Instance.cpp" bodystart="514" bodyend="523" declfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Error.hpp" declline="58" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___h_i_p___error_8hpp_1acf87c74e6c72cdd49300255f0509a1b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::hip_internal_safe_call</definition>
        <argsstring>(hipError_t e, const char *name, const char *file=nullptr, const int line=0)</argsstring>
        <name>hip_internal_safe_call</name>
        <qualifiedname>Kokkos::Impl::hip_internal_safe_call</qualifiedname>
        <param>
          <type>hipError_t</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>line</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Error.hpp" line="61" column="13" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Error.hpp" bodystart="61" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___h_i_p___instance_8cpp_1acb263ea58a20f64123178e835009f4aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::hip_device_synchronize</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>hip_device_synchronize</name>
        <qualifiedname>Kokkos::Impl::hip_device_synchronize</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Instance.cpp" line="505" column="6" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Instance.cpp" bodystart="505" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___h_i_p___locks_8cpp_1a902ec6d2305b0659b1d06243dd2597e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::initialize_host_hip_lock_arrays</definition>
        <argsstring>()</argsstring>
        <name>initialize_host_hip_lock_arrays</name>
        <qualifiedname>Kokkos::Impl::initialize_host_hip_lock_arrays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Locks.cpp" line="86" column="6" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Locks.cpp" bodystart="86" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___h_i_p___locks_8cpp_1ab3d1b9fb1ee81571af3994c7c1e9ad4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::finalize_host_hip_lock_arrays</definition>
        <argsstring>()</argsstring>
        <name>finalize_host_hip_lock_arrays</name>
        <qualifiedname>Kokkos::Impl::finalize_host_hip_lock_arrays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Locks.cpp" line="111" column="6" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Locks.cpp" bodystart="111" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___h_i_p___m_d_range_policy_8hpp_1a6fd95e87e982d2c7a64dabef69a26193" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="struct_kokkos_1_1_impl_1_1_tile_size_properties" kindref="compound">TileSizeProperties</ref></type>
        <definition>TileSizeProperties Kokkos::Impl::get_tile_size_properties&lt; Kokkos::Experimental::HIP &gt;</definition>
        <argsstring>(const Kokkos::Experimental::HIP &amp;space)</argsstring>
        <name>get_tile_size_properties&lt; Kokkos::Experimental::HIP &gt;</name>
        <qualifiedname>Kokkos::Impl::get_tile_size_properties&lt; Kokkos::Experimental::HIP &gt;</qualifiedname>
        <param>
          <type>const Kokkos::Experimental::HIP &amp;</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_MDRangePolicy.hpp" line="24" column="8" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_MDRangePolicy.hpp" bodystart="24" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___h_i_p___space_8cpp_1a1a676dfbc9f9cf56cb12cf86b8be4540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::DeepCopyHIP</definition>
        <argsstring>(void *dst, void const *src, size_t n)</argsstring>
        <name>DeepCopyHIP</name>
        <qualifiedname>Kokkos::Impl::DeepCopyHIP</qualifiedname>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>void const *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Space.cpp" line="76" column="6" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Space.cpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___h_i_p___space_8cpp_1a4e507d80b4fcbc295ad7674e781d128b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::DeepCopyAsyncHIP</definition>
        <argsstring>(const Kokkos::Experimental::HIP &amp;instance, void *dst, void const *src, size_t n)</argsstring>
        <name>DeepCopyAsyncHIP</name>
        <qualifiedname>Kokkos::Impl::DeepCopyAsyncHIP</qualifiedname>
        <param>
          <type>const Kokkos::Experimental::HIP &amp;</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>void const *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Space.cpp" line="80" column="6" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Space.cpp" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___h_i_p___space_8cpp_1a9ff2f6b474a234da838730c5fba91011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::DeepCopyAsyncHIP</definition>
        <argsstring>(void *dst, void const *src, size_t n)</argsstring>
        <name>DeepCopyAsyncHIP</name>
        <qualifiedname>Kokkos::Impl::DeepCopyAsyncHIP</qualifiedname>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>void const *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Space.cpp" line="86" column="6" bodyfile="src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Space.cpp" bodystart="86" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___h_i_p___space_8cpp_1a52c17dbf92053ba83c50e2b666a3955d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Kokkos::Impl::get_gpu</definition>
        <argsstring>(const InitArguments &amp;args)</argsstring>
        <name>get_gpu</name>
        <qualifiedname>Kokkos::Impl::get_gpu</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_init_arguments" kindref="compound">InitArguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" line="235" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" bodystart="235" bodyend="284" declfile="src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL.cpp" declline="75" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___bit_ops_8hpp_1a39c8a90d965aed8ea464ebb903ecaedd" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION int</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION int Kokkos::Impl::bit_first_zero</definition>
        <argsstring>(unsigned i) noexcept</argsstring>
        <name>bit_first_zero</name>
        <qualifiedname>Kokkos::Impl::bit_first_zero</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Find first zero bit. </para>
        </briefdescription>
        <detaileddescription>
<para>If none then return -1 ; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_BitOps.hpp" line="86" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_BitOps.hpp" bodystart="86" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___bit_ops_8hpp_1ad091d43e600bc87d0846c0cbbeb13230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION int</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION int Kokkos::Impl::bit_scan_forward</definition>
        <argsstring>(unsigned i)</argsstring>
        <name>bit_scan_forward</name>
        <qualifiedname>Kokkos::Impl::bit_scan_forward</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_BitOps.hpp" line="108" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_BitOps.hpp" bodystart="108" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___bit_ops_8hpp_1af8f66eb60fbfcefbf613afed03ebf71d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION int</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION int Kokkos::Impl::bit_count</definition>
        <argsstring>(unsigned i)</argsstring>
        <name>bit_count</name>
        <qualifiedname>Kokkos::Impl::bit_count</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Count the number of bits set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_BitOps.hpp" line="129" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_BitOps.hpp" bodystart="129" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___bit_ops_8hpp_1a6c65da8a21c5d65625372c7640a2bee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION unsigned</type>
        <definition>KOKKOS_INLINE_FUNCTION unsigned Kokkos::Impl::integral_power_of_two_that_contains</definition>
        <argsstring>(const unsigned N)</argsstring>
        <name>integral_power_of_two_that_contains</name>
        <qualifiedname>Kokkos::Impl::integral_power_of_two_that_contains</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_BitOps.hpp" line="150" column="10" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_BitOps.hpp" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___clock_tic_8hpp_1af786ad2a46ad65d5e02f45f875de1104" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION uint64_t</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION uint64_t Kokkos::Impl::clock_tic</definition>
        <argsstring>() noexcept</argsstring>
        <name>clock_tic</name>
        <qualifiedname>Kokkos::Impl::clock_tic</qualifiedname>
        <briefdescription>
<para>Quick query of clock register tics. </para>
        </briefdescription>
        <detaileddescription>
<para>Primary use case is to, with low overhead, obtain a integral value that consistently varies across concurrent threads of execution within a parallel algorithm. This value is often used to &quot;randomly&quot; seed an attempt to acquire an indexed resource (e.g., bit) from an array of resources (e.g., bitset) such that concurrent threads will have high likelihood of having different index-seed values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ClockTic.hpp" line="81" column="10" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ClockTic.hpp" bodystart="81" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___combined___reducer_8hpp_1a40991f399899da53a437b19aab35daa7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION auto</type>
        <definition>KOKKOS_INLINE_FUNCTION auto Kokkos::Impl::_get_value_from_combined_reducer_ctor_arg</definition>
        <argsstring>(T &amp;&amp;arg) noexcept -&gt; typename std::enable_if&lt; !is_view&lt; typename std::decay&lt; T &gt;::type &gt;::value &amp;&amp;!is_reducer&lt; typename std::decay&lt; T &gt;::type &gt;::value, typename std::decay&lt; T &gt;::type &gt;::type</argsstring>
        <name>_get_value_from_combined_reducer_ctor_arg</name>
        <qualifiedname>Kokkos::Impl::_get_value_from_combined_reducer_ctor_arg</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" line="195" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" bodystart="195" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___combined___reducer_8hpp_1a736e29cf64586f88592a060f4ebc1e39" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Space</type>
          </param>
          <param>
            <type>class Reducer</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr std::enable_if&lt; <ref refid="struct_kokkos_1_1is__reducer" kindref="compound">Kokkos::is_reducer</ref>&lt; typenamestd::decay&lt; Reducer &gt;::type &gt;::value, typenamestd::decay&lt; Reducer &gt;::type &gt;::type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr std::enable_if&lt; Kokkos::is_reducer&lt; typenamestd::decay&lt; Reducer &gt;::type &gt;::value, typenamestd::decay&lt; Reducer &gt;::type &gt;::type Kokkos::Impl::_make_reducer_from_arg</definition>
        <argsstring>(Reducer &amp;&amp;arg_reducer) noexcept</argsstring>
        <name>_make_reducer_from_arg</name>
        <qualifiedname>Kokkos::Impl::_make_reducer_from_arg</qualifiedname>
        <param>
          <type>Reducer &amp;&amp;</type>
          <declname>arg_reducer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" line="447" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" bodystart="447" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___combined___reducer_8hpp_1afbd7927b3e04ce29a5f3aec46ccb6d3d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Space</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr std::enable_if&lt;!<ref refid="struct_kokkos_1_1is__reducer" kindref="compound">Kokkos::is_reducer</ref>&lt; typenamestd::decay&lt; T &gt;::type &gt;::value, <ref refid="struct_kokkos_1_1_impl_1_1__wrap__with__kokkos__sum" kindref="compound">_wrap_with_kokkos_sum</ref>&lt; Space, typenamestd::decay&lt; T &gt;::type &gt; &gt;::type::type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr std::enable_if&lt;!Kokkos::is_reducer&lt; typenamestd::decay&lt; T &gt;::type &gt;::value, _wrap_with_kokkos_sum&lt; Space, typenamestd::decay&lt; T &gt;::type &gt; &gt;::type::type Kokkos::Impl::_make_reducer_from_arg</definition>
        <argsstring>(T &amp;&amp;arg_scalar) noexcept</argsstring>
        <name>_make_reducer_from_arg</name>
        <qualifiedname>Kokkos::Impl::_make_reducer_from_arg</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>arg_scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" line="470" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" bodystart="470" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___combined___reducer_8hpp_1af9d161afa6bf2472b404a5b6770217ab" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Space</type>
          </param>
          <param>
            <type>class...</type>
            <declname>ReferencesOrViewsOrReducers</declname>
            <defname>ReferencesOrViewsOrReducers</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr auto</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr auto Kokkos::Impl::make_combined_reducer_value</definition>
        <argsstring>(ReferencesOrViewsOrReducers &amp;&amp;... args)</argsstring>
        <name>make_combined_reducer_value</name>
        <qualifiedname>Kokkos::Impl::make_combined_reducer_value</qualifiedname>
        <param>
          <type>ReferencesOrViewsOrReducers &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" line="493" column="39" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" bodystart="493" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___combined___reducer_8hpp_1ad3c0f8b95cde91c8aecfee1c98431c67" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Space</type>
          </param>
          <param>
            <type>class ValueType</type>
          </param>
          <param>
            <type>class...</type>
            <declname>ReferencesOrViewsOrReducers</declname>
            <defname>ReferencesOrViewsOrReducers</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr auto</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr auto Kokkos::Impl::make_combined_reducer</definition>
        <argsstring>(ValueType &amp;value, ReferencesOrViewsOrReducers &amp;&amp;... args)</argsstring>
        <name>make_combined_reducer</name>
        <qualifiedname>Kokkos::Impl::make_combined_reducer</qualifiedname>
        <param>
          <type>ValueType &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ReferencesOrViewsOrReducers &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" line="512" column="39" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" bodystart="512" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___combined___reducer_8hpp_1aa8651c1b04f63797ae15331130458a47" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Functor</type>
          </param>
          <param>
            <type>class Space</type>
          </param>
          <param>
            <type>class...</type>
            <declname>ReferencesOrViewsOrReducers</declname>
            <defname>ReferencesOrViewsOrReducers</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr auto</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr auto Kokkos::Impl::make_wrapped_combined_functor</definition>
        <argsstring>(Functor const &amp;functor, Space, ReferencesOrViewsOrReducers &amp;&amp;...)</argsstring>
        <name>make_wrapped_combined_functor</name>
        <qualifiedname>Kokkos::Impl::make_wrapped_combined_functor</qualifiedname>
        <param>
          <type>Functor const &amp;</type>
          <declname>functor</declname>
        </param>
        <param>
          <type>Space</type>
        </param>
        <param>
          <type>ReferencesOrViewsOrReducers &amp;&amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" line="527" column="39" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp" bodystart="527" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___core_8cpp_1af5e411b743602a3df23989f34e567d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::declare_configuration_metadata</definition>
        <argsstring>(const std::string &amp;category, const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>declare_configuration_metadata</name>
        <qualifiedname>Kokkos::Impl::declare_configuration_metadata</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" line="96" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" bodystart="96" bodyend="100" declfile="src/Kokkos/kokkos/core/src/Kokkos_Core.hpp" declline="150" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___core_8cpp_1a029edce66d6cb08f86818b83328f2402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Kokkos::Impl::get_ctest_gpu</definition>
        <argsstring>(const char *local_rank_str)</argsstring>
        <name>get_ctest_gpu</name>
        <qualifiedname>Kokkos::Impl::get_ctest_gpu</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>local_rank_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" line="145" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" bodystart="145" bodyend="232" declfile="src/Kokkos/kokkos/core/unit_test/TestCTestDevice.cpp" declline="6" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___core_8cpp_1a887611e83262fad3be5cd60e2d0cb89b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::pre_initialize</definition>
        <argsstring>(const InitArguments &amp;args)</argsstring>
        <name>pre_initialize</name>
        <qualifiedname>Kokkos::Impl::pre_initialize</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_init_arguments" kindref="compound">InitArguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" line="1078" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" bodystart="1078" bodyend="1080" declfile="src/Kokkos/kokkos/core/src/Kokkos_Core.hpp" declline="146" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___core_8cpp_1aede17f712f2350d30a5b89dd27f6c583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::post_initialize</definition>
        <argsstring>(const InitArguments &amp;args)</argsstring>
        <name>post_initialize</name>
        <qualifiedname>Kokkos::Impl::post_initialize</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_init_arguments" kindref="compound">InitArguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" line="1082" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Core.cpp" bodystart="1082" bodyend="1084" declfile="src/Kokkos/kokkos/core/src/Kokkos_Core.hpp" declline="148" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___c_p_u_discovery_8cpp_1a6c0ae680d1bad0d9fec66008638063bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Kokkos::Impl::processors_per_node</definition>
        <argsstring>()</argsstring>
        <name>processors_per_node</name>
        <qualifiedname>Kokkos::Impl::processors_per_node</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_CPUDiscovery.cpp" line="63" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_CPUDiscovery.cpp" bodystart="63" bodyend="84" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_CPUDiscovery.hpp" declline="47" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___c_p_u_discovery_8cpp_1a3dd8779958adb27a45fd0e59ab1c40ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Kokkos::Impl::mpi_ranks_per_node</definition>
        <argsstring>()</argsstring>
        <name>mpi_ranks_per_node</name>
        <qualifiedname>Kokkos::Impl::mpi_ranks_per_node</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_CPUDiscovery.cpp" line="86" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_CPUDiscovery.cpp" bodystart="86" bodyend="102" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_CPUDiscovery.hpp" declline="48" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___c_p_u_discovery_8cpp_1a09d7af78ed35094c87aa7107c79a8d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Kokkos::Impl::mpi_local_rank_on_node</definition>
        <argsstring>()</argsstring>
        <name>mpi_local_rank_on_node</name>
        <qualifiedname>Kokkos::Impl::mpi_local_rank_on_node</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_CPUDiscovery.cpp" line="104" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_CPUDiscovery.cpp" bodystart="104" bodyend="117" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_CPUDiscovery.hpp" declline="49" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___error_8cpp_1a53bae91b07ab54c1d86c708378e2acea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::host_abort</definition>
        <argsstring>(const char *const message)</argsstring>
        <name>host_abort</name>
        <qualifiedname>Kokkos::Impl::host_abort</qualifiedname>
        <param>
          <type>const char *const</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.cpp" line="62" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.cpp" bodystart="62" bodyend="66" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.hpp" declline="68" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___error_8cpp_1ab31013b86d5770d9223de911204ed8d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::throw_runtime_exception</definition>
        <argsstring>(const std::string &amp;msg)</argsstring>
        <name>throw_runtime_exception</name>
        <qualifiedname>Kokkos::Impl::throw_runtime_exception</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.cpp" line="68" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.cpp" bodystart="68" bodyend="73" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.hpp" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___error_8cpp_1a62db6b6fac4086d7cb47a47cba9d3359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Kokkos::Impl::human_memory_size</definition>
        <argsstring>(size_t arg_bytes)</argsstring>
        <name>human_memory_size</name>
        <qualifiedname>Kokkos::Impl::human_memory_size</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>arg_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.cpp" line="75" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.cpp" bodystart="75" bodyend="95" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.hpp" declline="74" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___error_8cpp_1af72d715995b60c3860aec02e846af1a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::traceback_callstack</definition>
        <argsstring>(std::ostream &amp;msg)</argsstring>
        <name>traceback_callstack</name>
        <qualifiedname>Kokkos::Impl::traceback_callstack</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.cpp" line="164" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.cpp" bodystart="164" bodyend="166" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Error.hpp" declline="72" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___host_space_8cpp_1ad66b28575d371c6ee0b6b6798f208fce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_header" kindref="compound">SharedAllocationHeader</ref> *</type>
        <definition>SharedAllocationHeader * Kokkos::Impl::_do_allocation</definition>
        <argsstring>(Kokkos::HostSpace const &amp;space, std::string const &amp;label, size_t alloc_size)</argsstring>
        <name>_do_allocation</name>
        <qualifiedname>Kokkos::Impl::_do_allocation</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_host_space" kindref="compound">Kokkos::HostSpace</ref> const &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>alloc_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace.cpp" line="367" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace.cpp" bodystart="367" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___host_space_8cpp_1a54857766248f17299367cc86d585dcc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::init_lock_array_host_space</definition>
        <argsstring>()</argsstring>
        <name>init_lock_array_host_space</name>
        <qualifiedname>Kokkos::Impl::init_lock_array_host_space</qualifiedname>
        <briefdescription>
<para>Initialize lock array for arbitrary size atomics. </para>
        </briefdescription>
        <detaileddescription>
<para>Arbitrary atomics are implemented using a hash table of locks where the hash value is derived from the address of the object for which an atomic operation is performed. This function initializes the locks to zero (unset). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace.cpp" line="421" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace.cpp" bodystart="421" bodyend="426" declfile="src/Kokkos/kokkos/core/src/Kokkos_HostSpace.hpp" declline="76" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___host_space_8cpp_1a62a3a7296620d891f99e2fd58a25d3f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kokkos::Impl::lock_address_host_space</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>lock_address_host_space</name>
        <qualifiedname>Kokkos::Impl::lock_address_host_space</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Acquire a lock for the address. </para>
        </briefdescription>
        <detaileddescription>
<para>This function tries to acquire the lock for the hash value derived from the provided ptr. If the lock is successfully acquired the function returns true. Otherwise it returns false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace.cpp" line="428" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace.cpp" bodystart="428" bodyend="459" declfile="src/Kokkos/kokkos/core/src/Kokkos_HostSpace.hpp" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___host_space_8cpp_1a4bff114965cb9cc2dee00381b7b5e496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::unlock_address_host_space</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>unlock_address_host_space</name>
        <qualifiedname>Kokkos::Impl::unlock_address_host_space</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Release lock for the address. </para>
        </briefdescription>
        <detaileddescription>
<para>This function releases the lock for the hash value derived from the provided ptr. This function should only be called after previously successfully acquiring a lock with lock_address. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace.cpp" line="461" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace.cpp" bodystart="461" bodyend="479" declfile="src/Kokkos/kokkos/core/src/Kokkos_HostSpace.hpp" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___host_space__deepcopy_8cpp_1a4e8f4689b69c2633694741be1c6f3de1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::hostspace_parallel_deepcopy</definition>
        <argsstring>(void *dst, const void *src, ptrdiff_t n)</argsstring>
        <name>hostspace_parallel_deepcopy</name>
        <qualifiedname>Kokkos::Impl::hostspace_parallel_deepcopy</qualifiedname>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>ptrdiff_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace_deepcopy.cpp" line="56" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace_deepcopy.cpp" bodystart="56" bodyend="139" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostSpace_deepcopy.hpp" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___memory_pool_8cpp_1a03309a6b7fb35151310af3b4443dc681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::memory_pool_bounds_verification</definition>
        <argsstring>(size_t min_block_alloc_size, size_t max_block_alloc_size, size_t min_superblock_size, size_t max_superblock_size, size_t max_block_per_superblock, size_t min_total_alloc_size)</argsstring>
        <name>memory_pool_bounds_verification</name>
        <qualifiedname>Kokkos::Impl::memory_pool_bounds_verification</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>min_block_alloc_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_block_alloc_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>min_superblock_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_superblock_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_block_per_superblock</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>min_total_alloc_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_MemoryPool.cpp" line="64" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_MemoryPool.cpp" bodystart="64" bodyend="108" declfile="src/Kokkos/kokkos/core/src/Kokkos_MemoryPool.hpp" declline="67" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___memory_pool_8cpp_1a17af372f162956b68059e317b7917db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::_print_memory_pool_state</definition>
        <argsstring>(std::ostream &amp;s, uint32_t const *sb_state_ptr, int32_t sb_count, uint32_t sb_size_lg2, uint32_t sb_state_size, uint32_t state_shift, uint32_t state_used_mask)</argsstring>
        <name>_print_memory_pool_state</name>
        <qualifiedname>Kokkos::Impl::_print_memory_pool_state</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint32_t const *</type>
          <declname>sb_state_ptr</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>sb_count</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sb_size_lg2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sb_state_size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state_shift</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state_used_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_MemoryPool.cpp" line="112" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_MemoryPool.cpp" bodystart="112" bodyend="132" declfile="src/Kokkos/kokkos/core/src/Kokkos_MemoryPool.hpp" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___memory_space_8cpp_1ab110af10871539852df6731251a88265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::safe_throw_allocation_with_header_failure</definition>
        <argsstring>(std::string const &amp;space_name, std::string const &amp;label, Kokkos::Experimental::RawMemoryAllocationFailure const &amp;failure)</argsstring>
        <name>safe_throw_allocation_with_header_failure</name>
        <qualifiedname>Kokkos::Impl::safe_throw_allocation_with_header_failure</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>space_name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="class_kokkos_1_1_experimental_1_1_raw_memory_allocation_failure" kindref="compound">Kokkos::Experimental::RawMemoryAllocationFailure</ref> const &amp;</type>
          <declname>failure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_MemorySpace.cpp" line="59" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_MemorySpace.cpp" bodystart="59" bodyend="92" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_MemorySpace.hpp" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___memory_space_8hpp_1af81b3d27a96476ffc78862b96df2f882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MemorySpace</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_header" kindref="compound">SharedAllocationHeader</ref> *</type>
        <definition>SharedAllocationHeader * Kokkos::Impl::checked_allocation_with_header</definition>
        <argsstring>(MemorySpace const &amp;space, std::string const &amp;label, size_t alloc_size)</argsstring>
        <name>checked_allocation_with_header</name>
        <qualifiedname>Kokkos::Impl::checked_allocation_with_header</qualifiedname>
        <param>
          <type>MemorySpace const &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>alloc_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_MemorySpace.hpp" line="68" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_MemorySpace.hpp" bodystart="68" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___spinwait_8hpp_1a2112827e3dcd8f87754e4f056e1779a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::host_thread_yield</definition>
        <argsstring>(const uint32_t i, const WaitMode mode)</argsstring>
        <name>host_thread_yield</name>
        <qualifiedname>Kokkos::Impl::host_thread_yield</qualifiedname>
        <param>
          <type>const uint32_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const WaitMode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" line="66" column="6" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" declline="66" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___spinwait_8hpp_1a3b3c6f2bf7ccdba188009ac865b4613a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type Kokkos::Impl::root_spinwait_while_equal</definition>
        <argsstring>(T const volatile &amp;flag, const T value)</argsstring>
        <name>root_spinwait_while_equal</name>
        <qualifiedname>Kokkos::Impl::root_spinwait_while_equal</qualifiedname>
        <param>
          <type>T const volatile &amp;</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" line="70" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" bodystart="70" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___spinwait_8hpp_1a9e7ae702a0d6b02e63700bdf0985f8a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type Kokkos::Impl::root_spinwait_until_equal</definition>
        <argsstring>(T const volatile &amp;flag, const T value)</argsstring>
        <name>root_spinwait_until_equal</name>
        <qualifiedname>Kokkos::Impl::root_spinwait_until_equal</qualifiedname>
        <param>
          <type>T const volatile &amp;</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" line="81" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___spinwait_8hpp_1abe56856f211f357ed09d08fe5c508051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type Kokkos::Impl::spinwait_while_equal</definition>
        <argsstring>(T const volatile &amp;flag, const T value)</argsstring>
        <name>spinwait_while_equal</name>
        <qualifiedname>Kokkos::Impl::spinwait_while_equal</qualifiedname>
        <param>
          <type>T const volatile &amp;</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" line="92" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" bodystart="92" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___spinwait_8hpp_1a0df54dd8ce334dd544c62c00eb05bfbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type Kokkos::Impl::yield_while_equal</definition>
        <argsstring>(T const volatile &amp;flag, const T value)</argsstring>
        <name>yield_while_equal</name>
        <qualifiedname>Kokkos::Impl::yield_while_equal</qualifiedname>
        <param>
          <type>T const volatile &amp;</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" line="103" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___spinwait_8hpp_1aee0da3a8e83980fa060480a876cb3c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type Kokkos::Impl::spinwait_until_equal</definition>
        <argsstring>(T const volatile &amp;flag, const T value)</argsstring>
        <name>spinwait_until_equal</name>
        <qualifiedname>Kokkos::Impl::spinwait_until_equal</qualifiedname>
        <param>
          <type>T const volatile &amp;</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" line="114" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" bodystart="114" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___spinwait_8hpp_1acc9d39ca2915d0c8fddd2edf41871fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; std::is_integral&lt; T &gt;::value, void &gt;::type Kokkos::Impl::yield_until_equal</definition>
        <argsstring>(T const volatile &amp;flag, const T value)</argsstring>
        <name>yield_until_equal</name>
        <qualifiedname>Kokkos::Impl::yield_until_equal</qualifiedname>
        <param>
          <type>T const volatile &amp;</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" line="125" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Spinwait.hpp" bodystart="125" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1afecda6fb5dc0b27c40485076bedc1b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Kokkos::Impl::backtrace</definition>
        <argsstring>(void **, int)</argsstring>
        <name>backtrace</name>
        <qualifiedname>Kokkos::Impl::backtrace</qualifiedname>
        <param>
          <type>void **</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="20" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1a9af40ed04b79b564c27e88793038094f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char ** Kokkos::Impl::backtrace_symbols</definition>
        <argsstring>(void *const *, int)</argsstring>
        <name>backtrace_symbols</name>
        <qualifiedname>Kokkos::Impl::backtrace_symbols</qualifiedname>
        <param>
          <type>void *const *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="21" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1ac6f13725f596864d22dc684562b59daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Kokkos::Impl::demangle</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>demangle</name>
        <qualifiedname>Kokkos::Impl::demangle</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return the demangled version of the input symbol, or the original input if demangling is not possible. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="24" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="24" bodyend="57" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.hpp" declline="13" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1abe1ac771850536e275f05f755a7d2316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::save_stacktrace</definition>
        <argsstring>()</argsstring>
        <name>save_stacktrace</name>
        <qualifiedname>Kokkos::Impl::save_stacktrace</qualifiedname>
        <briefdescription>
<para>Save the current stacktrace. </para>
        </briefdescription>
        <detaileddescription>
<para>You may only save one stacktrace at a time. If you call this twice, the second call will overwrite the result of the first call. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="94" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="94" bodyend="96" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.hpp" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1a914b4f5024fe961f9f8329136323e36f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Kokkos::Impl::find_first_non_whitespace</definition>
        <argsstring>(const std::string &amp;s, const size_t start_pos)</argsstring>
        <name>find_first_non_whitespace</name>
        <qualifiedname>Kokkos::Impl::find_first_non_whitespace</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>start_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="98" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1a22023e0502968b2a3bc196559e516887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Kokkos::Impl::find_first_whitespace</definition>
        <argsstring>(const std::string &amp;s, const size_t start_pos)</argsstring>
        <name>find_first_whitespace</name>
        <qualifiedname>Kokkos::Impl::find_first_whitespace</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>start_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="104" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1ac9a24be7fef549b32333f836893d8187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Callback</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kokkos::Impl::for_each_token</definition>
        <argsstring>(const std::string &amp;s, Callback c)</argsstring>
        <name>for_each_token</name>
        <qualifiedname>Kokkos::Impl::for_each_token</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Callback</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="111" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="111" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1abfa79eea63abc559d8a58d923ba3b408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_kokkos_1_1_impl_1_1main__column__info" kindref="compound">main_column_info</ref></type>
        <definition>main_column_info Kokkos::Impl::find_main_column</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;traceback)</argsstring>
        <name>find_main_column</name>
        <qualifiedname>Kokkos::Impl::find_main_column</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>traceback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="133" column="18" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="133" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1ad217abf1a5ad112c28e2177fa3ec0594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::demangle_and_print_traceback_entry</definition>
        <argsstring>(std::ostream &amp;out, const std::string &amp;traceback_entry, const bool found_main, const size_t main_col, const std::vector&lt; size_t &gt; &amp;max_col_lens)</argsstring>
        <name>demangle_and_print_traceback_entry</name>
        <qualifiedname>Kokkos::Impl::demangle_and_print_traceback_entry</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>traceback_entry</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>found_main</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>main_col</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <declname>max_col_lens</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="173" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="173" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1a2ef6202c90f689f21eb064142c49deee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::demangle_and_print_traceback</definition>
        <argsstring>(std::ostream &amp;out, const std::vector&lt; std::string &gt; &amp;traceback)</argsstring>
        <name>demangle_and_print_traceback</name>
        <qualifiedname>Kokkos::Impl::demangle_and_print_traceback</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>traceback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="200" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="200" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1a349e96c405d4fde5bad4c9dee541cb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::print_saved_stacktrace</definition>
        <argsstring>(std::ostream &amp;out)</argsstring>
        <name>print_saved_stacktrace</name>
        <qualifiedname>Kokkos::Impl::print_saved_stacktrace</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Print the raw form of the currently saved stacktrace, if any, to the given output stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="210" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="210" bodyend="215" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.hpp" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1acdab34f70973ac2d94d86f67d3571879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::print_demangled_saved_stacktrace</definition>
        <argsstring>(std::ostream &amp;out)</argsstring>
        <name>print_demangled_saved_stacktrace</name>
        <qualifiedname>Kokkos::Impl::print_demangled_saved_stacktrace</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Print the currently saved, demangled stacktrace, if any, to the given output stream. </para>
        </briefdescription>
        <detaileddescription>
<para>Demangling is best effort only. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="217" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="217" bodyend="219" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.hpp" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1add0d512f6521477a081d316793e36169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::kokkos_terminate_handler</definition>
        <argsstring>()</argsstring>
        <name>kokkos_terminate_handler</name>
        <qualifiedname>Kokkos::Impl::kokkos_terminate_handler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="223" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="223" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___stacktrace_8cpp_1a29e72d87efbbfc3973891bf676d990b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::set_kokkos_terminate_handler</definition>
        <argsstring>(std::function&lt; void()&gt; user_post=nullptr)</argsstring>
        <name>set_kokkos_terminate_handler</name>
        <qualifiedname>Kokkos::Impl::set_kokkos_terminate_handler</qualifiedname>
        <param>
          <type>std::function&lt; void()&gt;</type>
          <declname>user_post</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Set the std::terminate handler so that it prints the currently saved stack trace, then calls user_post. </para>
        </briefdescription>
        <detaileddescription>
<para>This is useful if you want to call, say, MPI_Abort instead of std::abort. The MPI Standard frowns upon calling MPI functions without including their header file, and Kokkos does not depend on MPI, so there&apos;s no way for Kokkos to depend on MPI_Abort in a portable way. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" line="241" column="6" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.cpp" bodystart="241" bodyend="244" declfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Stacktrace.hpp" declline="40" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___traits_8hpp_1a4121ac1e85a0c6de3212628d5421d336" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr bool</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr bool Kokkos::Impl::is_integral_power_of_two</definition>
        <argsstring>(const size_t N)</argsstring>
        <name>is_integral_power_of_two</name>
        <qualifiedname>Kokkos::Impl::is_integral_power_of_two</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
<para>There exists integral &apos;k&apos; such that N = 2^k. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Traits.hpp" line="245" column="16" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Traits.hpp" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___traits_8hpp_1a2e10e50b57a7baf417d62264e75ae769" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr unsigned</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr unsigned Kokkos::Impl::integral_power_of_two_assume_valid</definition>
        <argsstring>(const size_t N)</argsstring>
        <name>integral_power_of_two_assume_valid</name>
        <qualifiedname>Kokkos::Impl::integral_power_of_two_assume_valid</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
<para>Return integral &apos;k&apos; such that N = 2^k, assuming valid. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Traits.hpp" line="251" column="20" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Traits.hpp" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___traits_8hpp_1a45decbc74c6f4a3ee1922e82a6b417f6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr unsigned</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr unsigned Kokkos::Impl::integral_power_of_two</definition>
        <argsstring>(const size_t N)</argsstring>
        <name>integral_power_of_two</name>
        <qualifiedname>Kokkos::Impl::integral_power_of_two</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
<para>Return integral &apos;k&apos; such that N = 2^k, if exists. If does not exist return ~0u. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Traits.hpp" line="259" column="20" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Traits.hpp" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___traits_8hpp_1a139cc8cc4255a93c18ae869c13229b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_FORCEINLINE_FUNCTION unsigned</type>
        <definition>KOKKOS_FORCEINLINE_FUNCTION unsigned Kokkos::Impl::power_of_two_if_valid</definition>
        <argsstring>(const unsigned N)</argsstring>
        <name>power_of_two_if_valid</name>
        <qualifiedname>Kokkos::Impl::power_of_two_if_valid</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>N</declname>
        </param>
        <briefdescription>
<para>If power of two then return power, otherwise return ~0u. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Traits.hpp" line="293" column="10" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Traits.hpp" bodystart="293" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___utilities_8hpp_1a2e37518982f8756df2b1326950394250" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr KOKKOS_INLINE_FUNCTION <ref refid="struct_kokkos_1_1_impl_1_1__fold__comma__emulation__return" kindref="compound">_fold_comma_emulation_return</ref></type>
        <definition>constexpr KOKKOS_INLINE_FUNCTION _fold_comma_emulation_return Kokkos::Impl::emulate_fold_comma_operator</definition>
        <argsstring>(Ts &amp;&amp;...) noexcept</argsstring>
        <name>emulate_fold_comma_operator</name>
        <qualifiedname>Kokkos::Impl::emulate_fold_comma_operator</qualifiedname>
        <param>
          <type>Ts &amp;&amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" line="116" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_Utilities.hpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_mapping_8hpp_1a2321f1acd5be92eae39f48c5bbb4686e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Kokkos::Impl::is_zero_byte</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>is_zero_byte</name>
        <qualifiedname>Kokkos::Impl::is_zero_byte</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2823" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2823" bodyend="2836"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_mapping_8hpp_1a071fed9a5f8039d5564fdec3304caae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
          </param>
          <param>
            <type>class MapType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>KOKKOS_INLINE_FUNCTION bool Kokkos::Impl::view_verify_operator_bounds</definition>
        <argsstring>(const MapType &amp;)</argsstring>
        <name>view_verify_operator_bounds</name>
        <qualifiedname>Kokkos::Impl::view_verify_operator_bounds</qualifiedname>
        <param>
          <type>const MapType &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3880" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3880" bodyend="3882"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_mapping_8hpp_1a208fc2b6cc95d66ba31125ea77ed0777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>class MapType</type>
          </param>
          <param>
            <type>class iType</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>KOKKOS_INLINE_FUNCTION bool Kokkos::Impl::view_verify_operator_bounds</definition>
        <argsstring>(const MapType &amp;map, const iType &amp;i, Args... args)</argsstring>
        <name>view_verify_operator_bounds</name>
        <qualifiedname>Kokkos::Impl::view_verify_operator_bounds</qualifiedname>
        <param>
          <type>const MapType &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const iType &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3885" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3885" bodyend="3890"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_mapping_8hpp_1a6c963174f6c9001bd8908c3f0af2416c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
          </param>
          <param>
            <type>class MapType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kokkos::Impl::view_error_operator_bounds</definition>
        <argsstring>(char *, int, const MapType &amp;)</argsstring>
        <name>view_error_operator_bounds</name>
        <qualifiedname>Kokkos::Impl::view_error_operator_bounds</qualifiedname>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>const MapType &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3893" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3893" bodyend="3893"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_mapping_8hpp_1a4c086458a040877ac7a8adbfd51b9b3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
          <param>
            <type>class MapType</type>
          </param>
          <param>
            <type>class iType</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kokkos::Impl::view_error_operator_bounds</definition>
        <argsstring>(char *buf, int len, const MapType &amp;map, const iType &amp;i, Args... args)</argsstring>
        <name>view_error_operator_bounds</name>
        <qualifiedname>Kokkos::Impl::view_error_operator_bounds</qualifiedname>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const MapType &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const iType &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3896" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3896" bodyend="3902"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_mapping_8hpp_1aaadfeac7ef7b99aae5eb7560f20778a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Map</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION std::enable_if_t&lt;!is_detected&lt; printable_label_typedef_t, Map &gt;::value &gt;</type>
        <definition>KOKKOS_FUNCTION std::enable_if_t&lt;!is_detected&lt; printable_label_typedef_t, Map &gt;::value &gt; Kokkos::Impl::operator_bounds_error_on_device</definition>
        <argsstring>(Map const &amp;)</argsstring>
        <name>operator_bounds_error_on_device</name>
        <qualifiedname>Kokkos::Impl::operator_bounds_error_on_device</qualifiedname>
        <param>
          <type>Map const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3950" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3950" bodyend="3952"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_mapping_8hpp_1a7f59e3e7201446fb41b8ccb61a75e57b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Map</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_FUNCTION std::enable_if_t&lt; is_detected&lt; printable_label_typedef_t, Map &gt;::value &gt;</type>
        <definition>KOKKOS_FUNCTION std::enable_if_t&lt; is_detected&lt; printable_label_typedef_t, Map &gt;::value &gt; Kokkos::Impl::operator_bounds_error_on_device</definition>
        <argsstring>(Map const &amp;map)</argsstring>
        <name>operator_bounds_error_on_device</name>
        <qualifiedname>Kokkos::Impl::operator_bounds_error_on_device</qualifiedname>
        <param>
          <type>Map const &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3957" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3957" bodyend="3959"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_mapping_8hpp_1a15654de3e6f8c53de7ea8c064e80bd32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MemorySpace</type>
          </param>
          <param>
            <type>class ViewType</type>
          </param>
          <param>
            <type>class MapType</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::view_verify_operator_bounds</definition>
        <argsstring>(Kokkos::Impl::ViewTracker&lt; ViewType &gt; const &amp;tracker, const MapType &amp;map, Args... args)</argsstring>
        <name>view_verify_operator_bounds</name>
        <qualifiedname>Kokkos::Impl::view_verify_operator_bounds</qualifiedname>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_view_tracker" kindref="compound">Kokkos::Impl::ViewTracker</ref>&lt; ViewType &gt; const &amp;</type>
          <declname>tracker</declname>
        </param>
        <param>
          <type>const MapType &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3964" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3964" bodyend="3990"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos_exp___iterate_tile_g_p_u_8hpp_1ab6a453135172abdcbfc0be4ccbd7c9b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tag</type>
          </param>
          <param>
            <type>class Functor</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_IMPL_FORCEINLINE_FUNCTION std::enable_if_t&lt; std::is_void&lt; Tag &gt;::value &gt;</type>
        <definition>KOKKOS_IMPL_FORCEINLINE_FUNCTION std::enable_if_t&lt; std::is_void&lt; Tag &gt;::value &gt; Kokkos::Impl::_tag_invoke</definition>
        <argsstring>(Functor const &amp;f, Args &amp;&amp;... args)</argsstring>
        <name>_tag_invoke</name>
        <qualifiedname>Kokkos::Impl::_tag_invoke</qualifiedname>
        <param>
          <type>Functor const &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/KokkosExp_IterateTileGPU.hpp" line="71" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/KokkosExp_IterateTileGPU.hpp" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos_exp___iterate_tile_g_p_u_8hpp_1ab6f07ee44c6d3aa19aed58a4b830d928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tag</type>
          </param>
          <param>
            <type>class Functor</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_IMPL_FORCEINLINE_FUNCTION std::enable_if_t&lt;!std::is_void&lt; Tag &gt;::value &gt;</type>
        <definition>KOKKOS_IMPL_FORCEINLINE_FUNCTION std::enable_if_t&lt;!std::is_void&lt; Tag &gt;::value &gt; Kokkos::Impl::_tag_invoke</definition>
        <argsstring>(Functor const &amp;f, Args &amp;&amp;... args)</argsstring>
        <name>_tag_invoke</name>
        <qualifiedname>Kokkos::Impl::_tag_invoke</qualifiedname>
        <param>
          <type>Functor const &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/KokkosExp_IterateTileGPU.hpp" line="77" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/KokkosExp_IterateTileGPU.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos_exp___iterate_tile_g_p_u_8hpp_1acd9818a88fdf4f53b1c4d0eb83d825fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tag</type>
          </param>
          <param>
            <type>class Functor</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>size_t...</type>
            <declname>Idxs</declname>
            <defname>Idxs</defname>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_IMPL_FORCEINLINE_FUNCTION void</type>
        <definition>KOKKOS_IMPL_FORCEINLINE_FUNCTION void Kokkos::Impl::_tag_invoke_array_helper</definition>
        <argsstring>(Functor const &amp;f, T(&amp;vals)[N], std::integer_sequence&lt; size_t, Idxs... &gt;, Args &amp;&amp;... args)</argsstring>
        <name>_tag_invoke_array_helper</name>
        <qualifiedname>Kokkos::Impl::_tag_invoke_array_helper</qualifiedname>
        <param>
          <type>Functor const &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>T(&amp;)</type>
          <declname>vals</declname>
          <array>[N]</array>
        </param>
        <param>
          <type>std::integer_sequence&lt; size_t, Idxs... &gt;</type>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/KokkosExp_IterateTileGPU.hpp" line="83" column="39" bodyfile="src/Kokkos/kokkos/core/src/impl/KokkosExp_IterateTileGPU.hpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos_exp___iterate_tile_g_p_u_8hpp_1afe1559b6655041f5f4c0a2cd4408ca48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tag</type>
          </param>
          <param>
            <type>class Functor</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_IMPL_FORCEINLINE_FUNCTION void</type>
        <definition>KOKKOS_IMPL_FORCEINLINE_FUNCTION void Kokkos::Impl::_tag_invoke_array</definition>
        <argsstring>(Functor const &amp;f, T(&amp;vals)[N], Args &amp;&amp;... args)</argsstring>
        <name>_tag_invoke_array</name>
        <qualifiedname>Kokkos::Impl::_tag_invoke_array</qualifiedname>
        <param>
          <type>Functor const &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>T(&amp;)</type>
          <declname>vals</declname>
          <array>[N]</array>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/KokkosExp_IterateTileGPU.hpp" line="90" column="39" bodyfile="src/Kokkos/kokkos/core/src/impl/KokkosExp_IterateTileGPU.hpp" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___atomic_8hpp_1a4438c0e8eb945366216c3781eb223507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::desul_atomic_dec</definition>
        <argsstring>(T *dest, MemoryOrderSeqCst, MemoryScopeDevice)</argsstring>
        <name>desul_atomic_dec</name>
        <qualifiedname>Kokkos::Impl::desul_atomic_dec</qualifiedname>
        <param>
          <type>T *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_memory_order_seq_cst" kindref="compound">MemoryOrderSeqCst</ref></type>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_memory_scope_device" kindref="compound">MemoryScopeDevice</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Atomic.hpp" line="391" column="29" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Atomic.hpp" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___atomic_8hpp_1a725695881402d412975db062e3702de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::desul_atomic_inc</definition>
        <argsstring>(T *dest, MemoryOrderSeqCst, MemoryScopeDevice)</argsstring>
        <name>desul_atomic_inc</name>
        <qualifiedname>Kokkos::Impl::desul_atomic_inc</qualifiedname>
        <param>
          <type>T *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_memory_order_seq_cst" kindref="compound">MemoryOrderSeqCst</ref></type>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_memory_scope_device" kindref="compound">MemoryScopeDevice</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Atomic.hpp" line="397" column="29" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Atomic.hpp" bodystart="397" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___atomic_8hpp_1a980fc8a060dfd30509c37db1e4308945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION T</type>
        <definition>KOKKOS_INLINE_FUNCTION T Kokkos::Impl::desul_atomic_exchange</definition>
        <argsstring>(T *dest, Kokkos::Impl::identity_t&lt; const T &gt; val, MemoryOrderSeqCst, MemoryScopeDevice)</argsstring>
        <name>desul_atomic_exchange</name>
        <qualifiedname>Kokkos::Impl::desul_atomic_exchange</qualifiedname>
        <param>
          <type>T *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>Kokkos::Impl::identity_t&lt; const T &gt;</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_memory_order_seq_cst" kindref="compound">MemoryOrderSeqCst</ref></type>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_memory_scope_device" kindref="compound">MemoryScopeDevice</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Atomic.hpp" line="404" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Atomic.hpp" bodystart="404" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___atomic_8hpp_1acef865a077fbdd941b658c96bdc3d8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION T</type>
        <definition>KOKKOS_INLINE_FUNCTION T Kokkos::Impl::desul_atomic_compare_exchange</definition>
        <argsstring>(T *dest, Kokkos::Impl::identity_t&lt; const T &gt; compare, Kokkos::Impl::identity_t&lt; const T &gt; val, MemoryOrderSeqCst, MemoryScopeDevice)</argsstring>
        <name>desul_atomic_compare_exchange</name>
        <qualifiedname>Kokkos::Impl::desul_atomic_compare_exchange</qualifiedname>
        <param>
          <type>T *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>Kokkos::Impl::identity_t&lt; const T &gt;</type>
          <declname>compare</declname>
        </param>
        <param>
          <type>Kokkos::Impl::identity_t&lt; const T &gt;</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_memory_order_seq_cst" kindref="compound">MemoryOrderSeqCst</ref></type>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_impl_1_1_memory_scope_device" kindref="compound">MemoryScopeDevice</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Atomic.hpp" line="410" column="26" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Atomic.hpp" bodystart="410" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___copy_views_8hpp_1a62784fe988cec87f02be8e243150dd00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ExecutionSpace</type>
          </param>
          <param>
            <type>class DstType</type>
          </param>
          <param>
            <type>class SrcType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kokkos::Impl::view_copy</definition>
        <argsstring>(const ExecutionSpace &amp;space, const DstType &amp;dst, const SrcType &amp;src)</argsstring>
        <name>view_copy</name>
        <qualifiedname>Kokkos::Impl::view_copy</qualifiedname>
        <param>
          <type>const ExecutionSpace &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const DstType &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const SrcType &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" line="541" column="6" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" bodystart="541" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___copy_views_8hpp_1a13568c102dfae9095768ab405868ef62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DstType</type>
          </param>
          <param>
            <type>class SrcType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kokkos::Impl::view_copy</definition>
        <argsstring>(const DstType &amp;dst, const SrcType &amp;src)</argsstring>
        <name>view_copy</name>
        <qualifiedname>Kokkos::Impl::view_copy</qualifiedname>
        <param>
          <type>const DstType &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const SrcType &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" line="618" column="6" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" bodystart="618" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___copy_views_8hpp_1a3ace3962c4dac9dcbb156e46e6f6f6e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionSpace</type>
          </param>
          <param>
            <type>class DT</type>
          </param>
          <param>
            <type>class...</type>
            <declname>DP</declname>
            <defname>DP</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kokkos::Impl::contiguous_fill</definition>
        <argsstring>(const ExecutionSpace &amp;exec_space, const View&lt; DT, DP... &gt; &amp;dst, typename ViewTraits&lt; DT, DP... &gt;::const_value_type &amp;value)</argsstring>
        <name>contiguous_fill</name>
        <qualifiedname>Kokkos::Impl::contiguous_fill</qualifiedname>
        <param>
          <type>const ExecutionSpace &amp;</type>
          <declname>exec_space</declname>
        </param>
        <param>
          <type>const <ref refid="class_kokkos_1_1_view" kindref="compound">View</ref>&lt; DT, DP... &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" line="1257" column="13" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" bodystart="1257" bodyend="1278"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___copy_views_8hpp_1a49ef946dd9e917335805a16ce511c0a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionSpace</type>
          </param>
          <param>
            <type>class DT</type>
          </param>
          <param>
            <type>class...</type>
            <declname>DP</declname>
            <defname>DP</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_trivial&lt; typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &gt;::value &amp;&amp;std::is_trivially_copy_assignable&lt; typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &gt;::value &gt;</type>
        <definition>std::enable_if_t&lt; std::is_trivial&lt; typename ViewTraits&lt; DT, DP... &gt;::const_value_type &gt;::value &amp;&amp; std::is_trivially_copy_assignable&lt; typename ViewTraits&lt; DT, DP... &gt;::const_value_type &gt;::value &gt; Kokkos::Impl::contiguous_fill_or_memset</definition>
        <argsstring>(const ExecutionSpace &amp;exec_space, const View&lt; DT, DP... &gt; &amp;dst, typename ViewTraits&lt; DT, DP... &gt;::const_value_type &amp;value)</argsstring>
        <name>contiguous_fill_or_memset</name>
        <qualifiedname>Kokkos::Impl::contiguous_fill_or_memset</qualifiedname>
        <param>
          <type>const ExecutionSpace &amp;</type>
          <declname>exec_space</declname>
        </param>
        <param>
          <type>const <ref refid="class_kokkos_1_1_view" kindref="compound">View</ref>&lt; DT, DP... &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" line="1298" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" bodystart="1298" bodyend="1305"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___copy_views_8hpp_1ae2b7d40a5a69e264f3b844843c1ca0e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionSpace</type>
          </param>
          <param>
            <type>class DT</type>
          </param>
          <param>
            <type>class...</type>
            <declname>DP</declname>
            <defname>DP</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt;!(std::is_trivial&lt; typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &gt;::value &amp;&amp;std::is_trivially_copy_assignable&lt; typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &gt;::value)&gt;</type>
        <definition>std::enable_if_t&lt;!( std::is_trivial&lt; typename ViewTraits&lt; DT, DP... &gt;::const_value_type &gt;::value &amp;&amp; std::is_trivially_copy_assignable&lt; typename ViewTraits&lt; DT, DP... &gt;::const_value_type &gt;::value)&gt; Kokkos::Impl::contiguous_fill_or_memset</definition>
        <argsstring>(const ExecutionSpace &amp;exec_space, const View&lt; DT, DP... &gt; &amp;dst, typename ViewTraits&lt; DT, DP... &gt;::const_value_type &amp;value)</argsstring>
        <name>contiguous_fill_or_memset</name>
        <qualifiedname>Kokkos::Impl::contiguous_fill_or_memset</qualifiedname>
        <param>
          <type>const ExecutionSpace &amp;</type>
          <declname>exec_space</declname>
        </param>
        <param>
          <type>const <ref refid="class_kokkos_1_1_view" kindref="compound">View</ref>&lt; DT, DP... &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" line="1312" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" bodystart="1312" bodyend="1316"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___copy_views_8hpp_1a227f2bc2018512e290896ef57ffe284c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DT</type>
          </param>
          <param>
            <type>class...</type>
            <declname>DP</declname>
            <defname>DP</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_trivial&lt; typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &gt;::value &amp;&amp;std::is_trivially_copy_assignable&lt; typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &gt;::value &gt;</type>
        <definition>std::enable_if_t&lt; std::is_trivial&lt; typename ViewTraits&lt; DT, DP... &gt;::const_value_type &gt;::value &amp;&amp; std::is_trivially_copy_assignable&lt; typename ViewTraits&lt; DT, DP... &gt;::const_value_type &gt;::value &gt; Kokkos::Impl::contiguous_fill_or_memset</definition>
        <argsstring>(const View&lt; DT, DP... &gt; &amp;dst, typename ViewTraits&lt; DT, DP... &gt;::const_value_type &amp;value)</argsstring>
        <name>contiguous_fill_or_memset</name>
        <qualifiedname>Kokkos::Impl::contiguous_fill_or_memset</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_view" kindref="compound">View</ref>&lt; DT, DP... &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" line="1323" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" bodystart="1323" bodyend="1333"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___copy_views_8hpp_1aad5e0217389759d53a3ca122d7694b4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DT</type>
          </param>
          <param>
            <type>class...</type>
            <declname>DP</declname>
            <defname>DP</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt;!(std::is_trivial&lt; typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &gt;::value &amp;&amp;std::is_trivially_copy_assignable&lt; typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &gt;::value)&gt;</type>
        <definition>std::enable_if_t&lt;!( std::is_trivial&lt; typename ViewTraits&lt; DT, DP... &gt;::const_value_type &gt;::value &amp;&amp; std::is_trivially_copy_assignable&lt; typename ViewTraits&lt; DT, DP... &gt;::const_value_type &gt;::value)&gt; Kokkos::Impl::contiguous_fill_or_memset</definition>
        <argsstring>(const View&lt; DT, DP... &gt; &amp;dst, typename ViewTraits&lt; DT, DP... &gt;::const_value_type &amp;value)</argsstring>
        <name>contiguous_fill_or_memset</name>
        <qualifiedname>Kokkos::Impl::contiguous_fill_or_memset</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_view" kindref="compound">View</ref>&lt; DT, DP... &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; DT, DP... &gt;::const_value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" line="1340" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" bodystart="1340" bodyend="1347"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___copy_views_8hpp_1a3f9e8fe31163934f2803cf4ce5174262" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ViewType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Kokkos::Impl::size_mismatch</definition>
        <argsstring>(const ViewType &amp;view, unsigned int max_extent, const size_t new_extents[8])</argsstring>
        <name>size_mismatch</name>
        <qualifiedname>Kokkos::Impl::size_mismatch</qualifiedname>
        <param>
          <type>const ViewType &amp;</type>
          <declname>view</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>max_extent</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>new_extents</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" line="2887" column="6" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp" bodystart="2887" bodyend="2894"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___core_8hpp_1ab7f1bbc2b1733d35d7df0805e99a074f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SpaceInitializerType</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int Kokkos::Impl::initialize_space_factory</definition>
        <argsstring>(std::string name)</argsstring>
        <name>initialize_space_factory</name>
        <qualifiedname>Kokkos::Impl::initialize_space_factory</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Core.hpp" line="132" column="5" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Core.hpp" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___exec_policy_8hpp_1a808b13b394ada510e1173f47f5363d3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class iType</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_integral&lt; iType &gt;::value, iType &gt;::type</type>
        <definition>std::enable_if&lt; std::is_integral&lt; iType &gt;::value, iType &gt;::type Kokkos::Impl::extract_vector_length</definition>
        <argsstring>(iType val, Args...)</argsstring>
        <name>extract_vector_length</name>
        <qualifiedname>Kokkos::Impl::extract_vector_length</qualifiedname>
        <param>
          <type>iType</type>
          <declname>val</declname>
        </param>
        <param>
          <type>Args...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="461" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" bodystart="461" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___exec_policy_8hpp_1ad6627f6d2782bbf23b65df3d5ddead3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class iType</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;!std::is_integral&lt; iType &gt;::value, int &gt;::type</type>
        <definition>std::enable_if&lt;!std::is_integral&lt; iType &gt;::value, int &gt;::type Kokkos::Impl::extract_vector_length</definition>
        <argsstring>(iType, Args...)</argsstring>
        <name>extract_vector_length</name>
        <qualifiedname>Kokkos::Impl::extract_vector_length</qualifiedname>
        <param>
          <type>iType</type>
        </param>
        <param>
          <type>Args...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" line="467" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_ExecPolicy.hpp" bodystart="467" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___parallel___reduce_8hpp_1aa45fa30fecf4c63234492871672a4f76" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ExecutionSpace</type>
          </param>
          <param>
            <type>class Arg</type>
          </param>
        </templateparamlist>
        <type>constexpr std::enable_if_t&lt; !<ref refid="struct_kokkos_1_1_impl_1_1_reducer_has_test_reference_function" kindref="compound">ReducerHasTestReferenceFunction</ref>&lt; Arg &gt;::value &amp;&amp;!<ref refid="struct_kokkos_1_1is__view" kindref="compound">Kokkos::is_view</ref>&lt; Arg &gt;::value, bool &gt;</type>
        <definition>constexpr std::enable_if_t&lt; !ReducerHasTestReferenceFunction&lt; Arg &gt;::value &amp;&amp; !Kokkos::is_view&lt; Arg &gt;::value, bool &gt; Kokkos::Impl::parallel_reduce_needs_fence</definition>
        <argsstring>(ExecutionSpace const &amp;, Arg const &amp;)</argsstring>
        <name>parallel_reduce_needs_fence</name>
        <qualifiedname>Kokkos::Impl::parallel_reduce_needs_fence</qualifiedname>
        <param>
          <type>ExecutionSpace const &amp;</type>
        </param>
        <param>
          <type>Arg const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Parallel_Reduce.hpp" line="921" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Parallel_Reduce.hpp" bodystart="921" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___parallel___reduce_8hpp_1aec7890923ead70d25e184034e9a24061" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ExecutionSpace</type>
          </param>
          <param>
            <type>class Reducer</type>
          </param>
        </templateparamlist>
        <type>constexpr std::enable_if_t&lt; <ref refid="struct_kokkos_1_1_impl_1_1_reducer_has_test_reference_function" kindref="compound">ReducerHasTestReferenceFunction</ref>&lt; Reducer &gt;::value, bool &gt;</type>
        <definition>constexpr std::enable_if_t&lt; ReducerHasTestReferenceFunction&lt; Reducer &gt;::value, bool &gt; Kokkos::Impl::parallel_reduce_needs_fence</definition>
        <argsstring>(ExecutionSpace const &amp;, Reducer const &amp;reducer)</argsstring>
        <name>parallel_reduce_needs_fence</name>
        <qualifiedname>Kokkos::Impl::parallel_reduce_needs_fence</qualifiedname>
        <param>
          <type>ExecutionSpace const &amp;</type>
        </param>
        <param>
          <type>Reducer const &amp;</type>
          <declname>reducer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Parallel_Reduce.hpp" line="934" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Parallel_Reduce.hpp" bodystart="934" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___parallel___reduce_8hpp_1a3ac97516a3945aaa95dae1055c26f848" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ExecutionSpace</type>
          </param>
          <param>
            <type>class ViewLike</type>
          </param>
        </templateparamlist>
        <type>constexpr std::enable_if_t&lt; <ref refid="struct_kokkos_1_1is__view" kindref="compound">Kokkos::is_view</ref>&lt; ViewLike &gt;::value, bool &gt;</type>
        <definition>constexpr std::enable_if_t&lt; Kokkos::is_view&lt; ViewLike &gt;::value, bool &gt; Kokkos::Impl::parallel_reduce_needs_fence</definition>
        <argsstring>(ExecutionSpace const &amp;, ViewLike const &amp;)</argsstring>
        <name>parallel_reduce_needs_fence</name>
        <qualifiedname>Kokkos::Impl::parallel_reduce_needs_fence</qualifiedname>
        <param>
          <type>ExecutionSpace const &amp;</type>
        </param>
        <param>
          <type>ViewLike const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Parallel_Reduce.hpp" line="944" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Parallel_Reduce.hpp" bodystart="944" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_8hpp_1a85d3c2d3ed1185d5aff8467c9f2cb3fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION std::size_t</type>
        <definition>KOKKOS_INLINE_FUNCTION std::size_t Kokkos::Impl::count_valid_integers</definition>
        <argsstring>(const IntType i0, const IntType i1, const IntType i2, const IntType i3, const IntType i4, const IntType i5, const IntType i6, const IntType i7)</argsstring>
        <name>count_valid_integers</name>
        <qualifiedname>Kokkos::Impl::count_valid_integers</qualifiedname>
        <param>
          <type>const IntType</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>const IntType</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>const IntType</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>const IntType</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>const IntType</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>const IntType</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>const IntType</type>
          <declname>i6</declname>
        </param>
        <param>
          <type>const IntType</type>
          <declname>i7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="82" column="36" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_8hpp_1a764267462e2c81178e79fa83aa4e4573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::runtime_check_rank_device</definition>
        <argsstring>(const size_t dyn_rank, const bool is_void_spec, const size_t i0, const size_t i1, const size_t i2, const size_t i3, const size_t i4, const size_t i5, const size_t i6, const size_t i7)</argsstring>
        <name>runtime_check_rank_device</name>
        <qualifiedname>Kokkos::Impl::runtime_check_rank_device</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>dyn_rank</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>is_void_spec</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i6</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="95" column="6" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="95" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_8hpp_1af6b2bb4f747d95d02d2714c4929b9d9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::shared_allocation_tracking_disable</definition>
        <argsstring>()</argsstring>
        <name>shared_allocation_tracking_disable</name>
        <qualifiedname>Kokkos::Impl::shared_allocation_tracking_disable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="1986" column="13" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="1986" bodyend="1988"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___view_8hpp_1ae97d75ce43f130dcba4c499e63b7b7ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::shared_allocation_tracking_enable</definition>
        <argsstring>()</argsstring>
        <name>shared_allocation_tracking_enable</name>
        <qualifiedname>Kokkos::Impl::shared_allocation_tracking_enable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="1990" column="13" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="1990" bodyend="1992"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos_exp___m_d_range_policy_8hpp_1a8db59f0a9aa09da5ce09a991652a0307" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr std::enable_if_t&lt;!std::is_signed&lt; T &gt;::value, bool &gt;</type>
        <definition>constexpr std::enable_if_t&lt;!std::is_signed&lt; T &gt;::value, bool &gt; Kokkos::Impl::is_less_than_value_initialized_variable</definition>
        <argsstring>(T)</argsstring>
        <name>is_less_than_value_initialized_variable</name>
        <qualifiedname>Kokkos::Impl::is_less_than_value_initialized_variable</qualifiedname>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" line="87" column="1" bodyfile="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos_exp___m_d_range_policy_8hpp_1af27f1eb8bbcab7b540cb7f76dbcc58b7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr std::enable_if_t&lt; std::is_signed&lt; T &gt;::value, bool &gt;</type>
        <definition>constexpr std::enable_if_t&lt; std::is_signed&lt; T &gt;::value, bool &gt; Kokkos::Impl::is_less_than_value_initialized_variable</definition>
        <argsstring>(T arg)</argsstring>
        <name>is_less_than_value_initialized_variable</name>
        <qualifiedname>Kokkos::Impl::is_less_than_value_initialized_variable</qualifiedname>
        <param>
          <type>T</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" line="93" column="1" bodyfile="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos_exp___m_d_range_policy_8hpp_1a218a8b1e9b956d44278230640c0e82a9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class To</type>
          </param>
          <param>
            <type>class From</type>
          </param>
        </templateparamlist>
        <type>constexpr To</type>
        <definition>constexpr To Kokkos::Impl::checked_narrow_cast</definition>
        <argsstring>(From arg)</argsstring>
        <name>checked_narrow_cast</name>
        <qualifiedname>Kokkos::Impl::checked_narrow_cast</qualifiedname>
        <param>
          <type>From</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" line="99" column="14" bodyfile="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" bodystart="99" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos_exp___m_d_range_policy_8hpp_1a9f3f60146c7ddf2673ee0f34065914e3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IndexType</type>
          </param>
          <param>
            <type>class Array</type>
          </param>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_kokkos_1_1_array" kindref="compound">Array</ref></type>
        <definition>constexpr Array Kokkos::Impl::to_array_potentially_narrowing</definition>
        <argsstring>(const U(&amp;init)[M])</argsstring>
        <name>to_array_potentially_narrowing</name>
        <qualifiedname>Kokkos::Impl::to_array_potentially_narrowing</qualifiedname>
        <param>
          <type>const U(&amp;)</type>
          <declname>init</declname>
          <array>[M]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" line="118" column="17" bodyfile="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" bodystart="118" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos_exp___m_d_range_policy_8hpp_1a1d5f0c33e2e6dde02534aad44dd2b296" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IndexType</type>
          </param>
          <param>
            <type>class NVCC_WONT_LET_ME_CALL_YOU_Array</type>
          </param>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr NVCC_WONT_LET_ME_CALL_YOU_Array</type>
        <definition>constexpr NVCC_WONT_LET_ME_CALL_YOU_Array Kokkos::Impl::to_array_potentially_narrowing</definition>
        <argsstring>(Kokkos::Array&lt; U, M &gt; const &amp;other)</argsstring>
        <name>to_array_potentially_narrowing</name>
        <qualifiedname>Kokkos::Impl::to_array_potentially_narrowing</qualifiedname>
        <param>
          <type><ref refid="struct_kokkos_1_1_array" kindref="compound">Kokkos::Array</ref>&lt; U, M &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" line="141" column="43" bodyfile="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" bodystart="141" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos_exp___m_d_range_policy_8hpp_1ab21a1a6da691f66eccf735bd702a7a95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExecutionSpace</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_kokkos_1_1_impl_1_1_tile_size_properties" kindref="compound">TileSizeProperties</ref></type>
        <definition>TileSizeProperties Kokkos::Impl::get_tile_size_properties</definition>
        <argsstring>(const ExecutionSpace &amp;)</argsstring>
        <name>get_tile_size_properties</name>
        <qualifiedname>Kokkos::Impl::get_tile_size_properties</qualifiedname>
        <param>
          <type>const ExecutionSpace &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" line="162" column="20" bodyfile="src/Kokkos/kokkos/core/src/KokkosExp_MDRangePolicy.hpp" bodystart="162" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___open_m_p_target___error_8hpp_1ac34a491333ce76ffb2eab77863989b17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::ompt_internal_safe_call</definition>
        <argsstring>(int e, const char *name, const char *file=nullptr, const int line=0)</argsstring>
        <name>ompt_internal_safe_call</name>
        <qualifiedname>Kokkos::Impl::ompt_internal_safe_call</qualifiedname>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>line</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Error.hpp" line="54" column="13" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Error.hpp" bodystart="54" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___s_y_c_l___m_d_range_policy_8hpp_1aa2687e66a0ea8c92ed78eaf5a4f4ccda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="struct_kokkos_1_1_impl_1_1_tile_size_properties" kindref="compound">TileSizeProperties</ref></type>
        <definition>TileSizeProperties Kokkos::Impl::get_tile_size_properties&lt; Kokkos::Experimental::SYCL &gt;</definition>
        <argsstring>(const Kokkos::Experimental::SYCL &amp;space)</argsstring>
        <name>get_tile_size_properties&lt; Kokkos::Experimental::SYCL &gt;</name>
        <qualifiedname>Kokkos::Impl::get_tile_size_properties&lt; Kokkos::Experimental::SYCL &gt;</qualifiedname>
        <param>
          <type>const Kokkos::Experimental::SYCL &amp;</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_MDRangePolicy.hpp" line="24" column="8" bodyfile="src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_MDRangePolicy.hpp" bodystart="24" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___s_y_c_l___space_8cpp_1a7e2ea76914660a536b56b064a62d6f16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::DeepCopySYCL</definition>
        <argsstring>(void *dst, const void *src, size_t n)</argsstring>
        <name>DeepCopySYCL</name>
        <qualifiedname>Kokkos::Impl::DeepCopySYCL</qualifiedname>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Space.cpp" line="60" column="6" bodyfile="src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Space.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___s_y_c_l___space_8cpp_1a61a68e67389001087b07a936b7e954c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::DeepCopyAsyncSYCL</definition>
        <argsstring>(const Kokkos::Experimental::SYCL &amp;instance, void *dst, const void *src, size_t n)</argsstring>
        <name>DeepCopyAsyncSYCL</name>
        <qualifiedname>Kokkos::Impl::DeepCopyAsyncSYCL</qualifiedname>
        <param>
          <type>const Kokkos::Experimental::SYCL &amp;</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Space.cpp" line="66" column="6" bodyfile="src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Space.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="_kokkos___s_y_c_l___space_8cpp_1a118fcbbb7ed0769b83f4d88319c63da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::DeepCopyAsyncSYCL</definition>
        <argsstring>(void *dst, const void *src, size_t n)</argsstring>
        <name>DeepCopyAsyncSYCL</name>
        <qualifiedname>Kokkos::Impl::DeepCopyAsyncSYCL</qualifiedname>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Space.cpp" line="71" column="6" bodyfile="src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Space.cpp" bodystart="71" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/algorithms/src/Kokkos_Random.hpp" line="562" column="1"/>
  </compounddef>
</doxygen>
