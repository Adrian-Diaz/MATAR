<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespacedesul_1_1_impl" kind="namespace" language="C++">
    <compoundname>desul::Impl</compoundname>
    <innerclass refid="structdesul_1_1_impl_1_1_add_oper" prot="public">desul::Impl::AddOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_and_oper" prot="public">desul::Impl::AndOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type" prot="public">desul::Impl::atomic_compare_exchange_type</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type_3_0116_01_4" prot="public">desul::Impl::atomic_compare_exchange_type&lt; 16 &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type_3_014_01_4" prot="public">desul::Impl::atomic_compare_exchange_type&lt; 4 &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type_3_018_01_4" prot="public">desul::Impl::atomic_compare_exchange_type&lt; 8 &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1basic__atomic__ref" prot="public">desul::Impl::basic_atomic_ref</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_01_5_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4" prot="public">desul::Impl::basic_atomic_ref&lt; T *, MemoryOrder, MemoryScope, false, false &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4" prot="public">desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4" prot="public">desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4" prot="public">desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_cmp_exch_failure_order" prot="public">desul::Impl::CmpExchFailureOrder</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_div_oper" prot="public">desul::Impl::DivOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1dont__deduce__this__parameter" prot="public">desul::Impl::dont_deduce_this_parameter</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1host__locks____" prot="public">desul::Impl::host_locks__</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1is__openmp__atomic__type__t" prot="public">desul::Impl::is_openmp_atomic_type_t</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_load_oper" prot="public">desul::Impl::LoadOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_l_shift_oper" prot="public">desul::Impl::LShiftOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_max_oper" prot="public">desul::Impl::MaxOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1may__exit__early" prot="public">desul::Impl::may_exit_early</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1may__exit__early_3_01_op_00_01_scalar1_00_01_scalar2_00_01decltype_07_opbda65801b6365997fa1eeb12ddf46756" prot="public">desul::Impl::may_exit_early&lt; Op, Scalar1, Scalar2, decltype(Op::check_early_exit(std::declval&lt; Scalar1 const &amp; &gt;(), std::declval&lt; Scalar2 const &amp; &gt;()))&gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_min_oper" prot="public">desul::Impl::MinOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_mod_oper" prot="public">desul::Impl::ModOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_mul_oper" prot="public">desul::Impl::MulOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_nand_oper" prot="public">desul::Impl::NandOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1numeric__limits__max" prot="public">desul::Impl::numeric_limits_max</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1numeric__limits__max_3_01uint32__t_01_4" prot="public">desul::Impl::numeric_limits_max&lt; uint32_t &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1numeric__limits__max_3_01uint64__t_01_4" prot="public">desul::Impl::numeric_limits_max&lt; uint64_t &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_or_oper" prot="public">desul::Impl::OrOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_r_shift_oper" prot="public">desul::Impl::RShiftOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_store_oper" prot="public">desul::Impl::StoreOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_sub_oper" prot="public">desul::Impl::SubOper</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_xor_oper" prot="public">desul::Impl::XorOper</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_common_8hpp_1a3db0d1470e824cba23d757291e2311f1" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename MemoryOrder</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdesul_1_1_impl_1_1_cmp_exch_failure_order" kindref="compound">CmpExchFailureOrder</ref>&lt; MemoryOrder &gt;::memory_order</type>
        <definition>using desul::Impl::cmpexch_failure_memory_order = typedef typename CmpExchFailureOrder&lt;MemoryOrder&gt;::memory_order</definition>
        <argsstring></argsstring>
        <name>cmpexch_failure_memory_order</name>
        <qualifiedname>desul::Impl::cmpexch_failure_memory_order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" line="134" column="1" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_common_8hpp_1aa6b2dede8c9d5bba182e3a4331f2e3af" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdesul_1_1_impl_1_1dont__deduce__this__parameter" kindref="compound">dont_deduce_this_parameter</ref>&lt; T &gt;::type</type>
        <definition>using desul::Impl::dont_deduce_this_parameter_t = typedef typename dont_deduce_this_parameter&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>dont_deduce_this_parameter_t</name>
        <qualifiedname>desul::Impl::dont_deduce_this_parameter_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" line="195" column="1" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_open_m_p__40_8hpp_1a62c7faf1688f5de7e4d5d5a7c790932b" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool desul::Impl::is_openmp_atomic_type_v</definition>
        <argsstring></argsstring>
        <name>is_openmp_atomic_type_v</name>
        <qualifiedname>desul::Impl::is_openmp_atomic_type_v</qualifiedname>
        <initializer>= <ref refid="structdesul_1_1_impl_1_1is__openmp__atomic__type__t" kindref="compound">is_openmp_atomic_type_t</ref>&lt;T&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="50" column="18" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_common_8hpp_1abf4c53a1eb0b947fcaf817a41513bfd1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool desul::Impl::atomic_always_lock_free</definition>
        <argsstring>(std::size_t size)</argsstring>
        <name>atomic_always_lock_free</name>
        <qualifiedname>desul::Impl::atomic_always_lock_free</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" line="156" column="16" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" bodystart="156" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="_common_8hpp_1ab5afe92851ef69941aa0cc6774252624" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>Size</declname>
            <defname>Size</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Align</declname>
            <defname>Align</defname>
          </param>
        </templateparamlist>
        <type>DESUL_INLINE_FUNCTION bool</type>
        <definition>DESUL_INLINE_FUNCTION bool desul::Impl::atomic_is_lock_free</definition>
        <argsstring>() noexcept</argsstring>
        <name>atomic_is_lock_free</name>
        <qualifiedname>desul::Impl::atomic_is_lock_free</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" line="165" column="28" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="_compare___exchange___open_m_p_8hpp_1ad09b37a580af53928177e6ff5fc20fc6" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>static constexpr bool desul::Impl::omp_on_host</definition>
        <argsstring>()</argsstring>
        <name>omp_on_host</name>
        <qualifiedname>desul::Impl::omp_on_host</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_OpenMP.hpp" line="18" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_OpenMP.hpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="_generic_8hpp_1a6be5e304fe067f77cc256309f365f9d3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Op</type>
          </param>
          <param>
            <type>typename Scalar1</type>
          </param>
          <param>
            <type>typename Scalar2</type>
          </param>
        </templateparamlist>
        <type>constexpr DESUL_FUNCTION std::enable_if&lt; <ref refid="structdesul_1_1_impl_1_1may__exit__early" kindref="compound">may_exit_early</ref>&lt; Op, Scalar1, Scalar2 &gt;::value, bool &gt;::type</type>
        <definition>constexpr DESUL_FUNCTION std::enable_if&lt; may_exit_early&lt; Op, Scalar1, Scalar2 &gt;::value, bool &gt;::type desul::Impl::check_early_exit</definition>
        <argsstring>(Op const &amp;, Scalar1 const &amp;val1, Scalar2 const &amp;val2)</argsstring>
        <name>check_early_exit</name>
        <qualifiedname>desul::Impl::check_early_exit</qualifiedname>
        <param>
          <type>Op const &amp;</type>
        </param>
        <param>
          <type>Scalar1 const &amp;</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>Scalar2 const &amp;</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Generic.hpp" line="63" column="1" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Generic.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="_generic_8hpp_1a52d9a745635359f1480f037933ac05e2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Op</type>
          </param>
          <param>
            <type>typename Scalar1</type>
          </param>
          <param>
            <type>typename Scalar2</type>
          </param>
        </templateparamlist>
        <type>constexpr DESUL_FUNCTION std::enable_if&lt;!<ref refid="structdesul_1_1_impl_1_1may__exit__early" kindref="compound">may_exit_early</ref>&lt; Op, Scalar1, Scalar2 &gt;::value, bool &gt;::type</type>
        <definition>constexpr DESUL_FUNCTION std::enable_if&lt;!may_exit_early&lt; Op, Scalar1, Scalar2 &gt;::value, bool &gt;::type desul::Impl::check_early_exit</definition>
        <argsstring>(Op const &amp;, Scalar1 const &amp;, Scalar2 const &amp;)</argsstring>
        <name>check_early_exit</name>
        <qualifiedname>desul::Impl::check_early_exit</qualifiedname>
        <param>
          <type>Op const &amp;</type>
        </param>
        <param>
          <type>Scalar1 const &amp;</type>
        </param>
        <param>
          <type>Scalar2 const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Generic.hpp" line="69" column="1" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Generic.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="_generic_8hpp_1a3967b0b053ffae7a445f2593b8c7cc88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Oper</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>class MemoryOrder</type>
          </param>
          <param>
            <type>class MemoryScope</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; atomic_always_lock_free(sizeof(T)), int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>DESUL_INLINE_FUNCTION T</type>
        <definition>DESUL_INLINE_FUNCTION T desul::Impl::atomic_fetch_oper</definition>
        <argsstring>(const Oper &amp;op, T *const dest, dont_deduce_this_parameter_t&lt; const T &gt; val, MemoryOrder order, MemoryScope scope)</argsstring>
        <name>atomic_fetch_oper</name>
        <qualifiedname>desul::Impl::atomic_fetch_oper</qualifiedname>
        <param>
          <type>const Oper &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>T *const</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>dont_deduce_this_parameter_t&lt; const T &gt;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>MemoryOrder</type>
          <declname>order</declname>
        </param>
        <param>
          <type>MemoryScope</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Generic.hpp" line="165" column="1" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Generic.hpp" bodystart="165" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="_generic_8hpp_1a5fe0f9744c34969dd496cf785d0a9566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Oper</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>class MemoryOrder</type>
          </param>
          <param>
            <type>class MemoryScope</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; atomic_always_lock_free(sizeof(T)), int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>DESUL_INLINE_FUNCTION T</type>
        <definition>DESUL_INLINE_FUNCTION T desul::Impl::atomic_oper_fetch</definition>
        <argsstring>(const Oper &amp;op, T *const dest, dont_deduce_this_parameter_t&lt; const T &gt; val, MemoryOrder order, MemoryScope scope)</argsstring>
        <name>atomic_oper_fetch</name>
        <qualifiedname>desul::Impl::atomic_oper_fetch</qualifiedname>
        <param>
          <type>const Oper &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>T *const</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>dont_deduce_this_parameter_t&lt; const T &gt;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>MemoryOrder</type>
          <declname>order</declname>
        </param>
        <param>
          <type>MemoryScope</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Generic.hpp" line="193" column="1" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Generic.hpp" bodystart="193" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="_lock___array_8hpp_1adaa171b9c6dc254fb03d663ac182e9e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void desul::Impl::init_lock_arrays</definition>
        <argsstring>()</argsstring>
        <name>init_lock_arrays</name>
        <qualifiedname>desul::Impl::init_lock_arrays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array.hpp" line="33" column="13" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array.hpp" bodystart="33" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="_lock___array_8hpp_1aa949cd8eb7995bb5578cf7a3269c010b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void desul::Impl::finalize_lock_arrays</definition>
        <argsstring>()</argsstring>
        <name>finalize_lock_arrays</name>
        <qualifiedname>desul::Impl::finalize_lock_arrays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array.hpp" line="49" column="13" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array.hpp" bodystart="49" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="_lock___array_8hpp_1ad2e48b4addd4b6e68e4b467de471b935" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MemoryScope</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool desul::Impl::lock_address</definition>
        <argsstring>(void *ptr, MemoryScope ms)</argsstring>
        <name>lock_address</name>
        <qualifiedname>desul::Impl::lock_address</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>MemoryScope</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array.hpp" line="59" column="13" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array.hpp" bodystart="59" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="_lock___array_8hpp_1a93fd4f3a31e3495582b6a49979fe9794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MemoryScope</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void desul::Impl::unlock_address</definition>
        <argsstring>(void *ptr, MemoryScope ms)</argsstring>
        <name>unlock_address</name>
        <qualifiedname>desul::Impl::unlock_address</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>MemoryScope</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array.hpp" line="66" column="6" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array.hpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="_open_m_p__40_8hpp_1a1e39f8904411713a396952818a38a1fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MEMORY_ORDER_TMP</type>
          </param>
          <param>
            <type>class MEMORY_SCOPE_TMP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void desul::Impl::openmp_maybe_call_pre_capture_flush</definition>
        <argsstring>(MEMORY_ORDER_TMP, MEMORY_SCOPE_TMP)</argsstring>
        <name>openmp_maybe_call_pre_capture_flush</name>
        <qualifiedname>desul::Impl::openmp_maybe_call_pre_capture_flush</qualifiedname>
        <param>
          <type>MEMORY_ORDER_TMP</type>
        </param>
        <param>
          <type>MEMORY_SCOPE_TMP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="16" column="8" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="_open_m_p__40_8hpp_1a9b69e0b7c418f60bcc61600e4852d216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MEMORY_SCOPE_TMP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void desul::Impl::openmp_maybe_call_pre_capture_flush</definition>
        <argsstring>(MemoryOrderAcquire, MEMORY_SCOPE_TMP)</argsstring>
        <name>openmp_maybe_call_pre_capture_flush</name>
        <qualifiedname>desul::Impl::openmp_maybe_call_pre_capture_flush</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_memory_order_acquire" kindref="compound">MemoryOrderAcquire</ref></type>
        </param>
        <param>
          <type>MEMORY_SCOPE_TMP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="18" column="8" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="_open_m_p__40_8hpp_1aa2fd9c02d3ede43bd160e3019006def6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MEMORY_SCOPE_TMP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void desul::Impl::openmp_maybe_call_pre_capture_flush</definition>
        <argsstring>(MemoryOrderAcqRel, MEMORY_SCOPE_TMP)</argsstring>
        <name>openmp_maybe_call_pre_capture_flush</name>
        <qualifiedname>desul::Impl::openmp_maybe_call_pre_capture_flush</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_memory_order_acq_rel" kindref="compound">MemoryOrderAcqRel</ref></type>
        </param>
        <param>
          <type>MEMORY_SCOPE_TMP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="22" column="8" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="_open_m_p__40_8hpp_1a934068b271abec5563daef03f639fa1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MEMORY_SCOPE_TMP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void desul::Impl::openmp_maybe_call_pre_capture_flush</definition>
        <argsstring>(MemoryOrderSeqCst, MEMORY_SCOPE_TMP)</argsstring>
        <name>openmp_maybe_call_pre_capture_flush</name>
        <qualifiedname>desul::Impl::openmp_maybe_call_pre_capture_flush</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_memory_order_seq_cst" kindref="compound">MemoryOrderSeqCst</ref></type>
        </param>
        <param>
          <type>MEMORY_SCOPE_TMP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="26" column="8" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="_open_m_p__40_8hpp_1a9dc61ffa80d4d5616382bb76d14729c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MEMORY_ORDER_TMP</type>
          </param>
          <param>
            <type>class MEMORY_SCOPE_TMP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void desul::Impl::openmp_maybe_call_post_capture_flush</definition>
        <argsstring>(MEMORY_ORDER_TMP, MEMORY_SCOPE_TMP)</argsstring>
        <name>openmp_maybe_call_post_capture_flush</name>
        <qualifiedname>desul::Impl::openmp_maybe_call_post_capture_flush</qualifiedname>
        <param>
          <type>MEMORY_ORDER_TMP</type>
        </param>
        <param>
          <type>MEMORY_SCOPE_TMP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="31" column="8" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_open_m_p__40_8hpp_1add5933b4026340a3f2d55f74ae934e9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MEMORY_SCOPE_TMP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void desul::Impl::openmp_maybe_call_post_capture_flush</definition>
        <argsstring>(MemoryOrderRelease, MEMORY_SCOPE_TMP)</argsstring>
        <name>openmp_maybe_call_post_capture_flush</name>
        <qualifiedname>desul::Impl::openmp_maybe_call_post_capture_flush</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_memory_order_release" kindref="compound">MemoryOrderRelease</ref></type>
        </param>
        <param>
          <type>MEMORY_SCOPE_TMP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="33" column="8" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_open_m_p__40_8hpp_1a7e5b2f6739c8f48bc37c0705e30c7920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MEMORY_SCOPE_TMP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void desul::Impl::openmp_maybe_call_post_capture_flush</definition>
        <argsstring>(MemoryOrderAcqRel, MEMORY_SCOPE_TMP)</argsstring>
        <name>openmp_maybe_call_post_capture_flush</name>
        <qualifiedname>desul::Impl::openmp_maybe_call_post_capture_flush</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_memory_order_acq_rel" kindref="compound">MemoryOrderAcqRel</ref></type>
        </param>
        <param>
          <type>MEMORY_SCOPE_TMP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="37" column="8" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="_open_m_p__40_8hpp_1a095edfeca77ffee45720e6064df9ed0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MEMORY_SCOPE_TMP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void desul::Impl::openmp_maybe_call_post_capture_flush</definition>
        <argsstring>(MemoryOrderSeqCst, MEMORY_SCOPE_TMP)</argsstring>
        <name>openmp_maybe_call_post_capture_flush</name>
        <qualifiedname>desul::Impl::openmp_maybe_call_post_capture_flush</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_memory_order_seq_cst" kindref="compound">MemoryOrderSeqCst</ref></type>
        </param>
        <param>
          <type>MEMORY_SCOPE_TMP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="41" column="8" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="41" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="21" column="1"/>
  </compounddef>
</doxygen>
