<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_kokkos___view_mapping_8hpp" kind="file" language="C++">
    <compoundname>Kokkos_ViewMapping.hpp</compoundname>
    <includes local="no">type_traits</includes>
    <includes local="no">initializer_list</includes>
    <includes refid="_kokkos___core__fwd_8hpp" local="no">Kokkos_Core_fwd.hpp</includes>
    <includes refid="_kokkos___detection_idiom_8hpp" local="no">Kokkos_DetectionIdiom.hpp</includes>
    <includes refid="_kokkos___pair_8hpp" local="no">Kokkos_Pair.hpp</includes>
    <includes refid="_kokkos___layout_8hpp" local="no">Kokkos_Layout.hpp</includes>
    <includes refid="_kokkos___extents_8hpp" local="no">Kokkos_Extents.hpp</includes>
    <includes refid="_kokkos___error_8hpp" local="no">impl/Kokkos_Error.hpp</includes>
    <includes refid="_kokkos___traits_8hpp" local="no">impl/Kokkos_Traits.hpp</includes>
    <includes refid="_kokkos___view_tracker_8hpp" local="no">impl/Kokkos_ViewTracker.hpp</includes>
    <includes refid="_kokkos___view_ctor_8hpp" local="no">impl/Kokkos_ViewCtor.hpp</includes>
    <includes refid="_kokkos___atomic___view_8hpp" local="no">impl/Kokkos_Atomic_View.hpp</includes>
    <includes refid="_kokkos___tools_8hpp" local="no">impl/Kokkos_Tools.hpp</includes>
    <includedby refid="_kokkos___view_8hpp" local="no">src/Kokkos/kokkos/core/src/Kokkos_View.hpp</includedby>
    <includedby refid="_kokkos_exp___view_mapping_8hpp" local="no">src/Kokkos/kokkos/core/src/impl/KokkosExp_ViewMapping.hpp</includedby>
    <incdepgraph>
      <node id="51">
        <label>KokkosExp_MDRangePolicy.hpp</label>
        <link refid="_kokkos_exp___m_d_range_policy_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>Kokkos_Array.hpp</label>
        <link refid="_kokkos___array_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Kokkos_Atomic.hpp</label>
        <link refid="_kokkos___atomic_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Kokkos_Concepts.hpp</label>
        <link refid="_kokkos___concepts_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Kokkos_Core_fwd.hpp</label>
        <link refid="_kokkos___core__fwd_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Kokkos_DetectionIdiom.hpp</label>
        <link refid="_kokkos___detection_idiom_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>Kokkos_ExecPolicy.hpp</label>
        <link refid="_kokkos___exec_policy_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Kokkos_Extents.hpp</label>
        <link refid="_kokkos___extents_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Kokkos_HostSpace.hpp</label>
        <link refid="_kokkos___host_space_8hpp_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Kokkos_Layout.hpp</label>
        <link refid="_kokkos___layout_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Kokkos_Macros.hpp</label>
        <link refid="_kokkos___macros_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Kokkos_MemoryTraits.hpp</label>
        <link refid="_kokkos___memory_traits_8hpp_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Kokkos_Pair.hpp</label>
        <link refid="_kokkos___pair_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>Kokkos_Rank.hpp</label>
        <link refid="_kokkos___rank_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>Kokkos_Tuners.hpp</label>
        <link refid="_kokkos___tuners_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>impl/KokkosExp_Host_IterateTile.hpp</label>
        <link refid="_kokkos_exp___host___iterate_tile_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>impl/Kokkos_AnalyzePolicy.hpp</label>
        <link refid="_kokkos___analyze_policy_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>impl/Kokkos_Atomic_Assembly.hpp</label>
        <link refid="_kokkos___atomic___assembly_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>impl/Kokkos_Atomic_Compare_Exchange_Strong.hpp</label>
        <link refid="_kokkos___atomic___compare___exchange___strong_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>impl/Kokkos_Atomic_Decrement.hpp</label>
        <link refid="_kokkos___atomic___decrement_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>impl/Kokkos_Atomic_Exchange.hpp</label>
        <link refid="_kokkos___atomic___exchange_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>impl/Kokkos_Atomic_Fetch_Add.hpp</label>
        <link refid="_kokkos___atomic___fetch___add_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>impl/Kokkos_Atomic_Fetch_And.hpp</label>
        <link refid="_kokkos___atomic___fetch___and_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>impl/Kokkos_Atomic_Fetch_Or.hpp</label>
        <link refid="_kokkos___atomic___fetch___or_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>impl/Kokkos_Atomic_Fetch_Sub.hpp</label>
        <link refid="_kokkos___atomic___fetch___sub_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>impl/Kokkos_Atomic_Generic.hpp</label>
        <link refid="_kokkos___atomic___generic_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>impl/Kokkos_Atomic_Generic_Secondary.hpp</label>
        <link refid="_kokkos___atomic___generic___secondary_8hpp_source"/>
      </node>
      <node id="81">
        <label>impl/Kokkos_Atomic_Increment.hpp</label>
        <link refid="_kokkos___atomic___increment_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>impl/Kokkos_Atomic_Load.hpp</label>
        <link refid="_kokkos___atomic___load_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>impl/Kokkos_Atomic_Memory_Order.hpp</label>
        <link refid="_kokkos___atomic___memory___order_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>impl/Kokkos_Atomic_MinMax.hpp</label>
        <link refid="_kokkos___atomic___min_max_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>impl/Kokkos_Atomic_Store.hpp</label>
        <link refid="_kokkos___atomic___store_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>impl/Kokkos_Atomic_View.hpp</label>
        <link refid="_kokkos___atomic___view_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>impl/Kokkos_BitOps.hpp</label>
        <link refid="_kokkos___bit_ops_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>impl/Kokkos_Error.hpp</label>
        <link refid="_kokkos___error_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>impl/Kokkos_GraphImpl_fwd.hpp</label>
        <link refid="_kokkos___graph_impl__fwd_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>impl/Kokkos_HostSpace_deepcopy.hpp</label>
        <link refid="_kokkos___host_space__deepcopy_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>impl/Kokkos_Memory_Fence.hpp</label>
        <link refid="_kokkos___memory___fence_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>impl/Kokkos_Profiling.hpp</label>
        <link refid="_kokkos___profiling_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>impl/Kokkos_Profiling_C_Interface.h</label>
        <link refid="_kokkos___profiling___c___interface_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>impl/Kokkos_Profiling_DeviceInfo.hpp</label>
        <link refid="_kokkos___profiling___device_info_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>impl/Kokkos_Profiling_Interface.hpp</label>
        <link refid="_kokkos___profiling___interface_8hpp_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>impl/Kokkos_SharedAlloc.hpp</label>
        <link refid="_kokkos___shared_alloc_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>impl/Kokkos_Tools.hpp</label>
        <link refid="_kokkos___tools_8hpp_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>impl/Kokkos_Traits.hpp</label>
        <link refid="_kokkos___traits_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>impl/Kokkos_Utilities.hpp</label>
        <link refid="_kokkos___utilities_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>impl/Kokkos_ViewCtor.hpp</label>
        <link refid="_kokkos___view_ctor_8hpp_source"/>
      </node>
      <node id="1">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp</label>
        <link refid="_kokkos___view_mapping_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>impl/Kokkos_ViewTracker.hpp</label>
        <link refid="_kokkos___view_tracker_8hpp_source"/>
      </node>
      <node id="87">
        <label>impl/Kokkos_Volatile_Load.hpp</label>
        <link refid="_kokkos___volatile___load_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>traits/Kokkos_ExecutionSpaceTrait.hpp</label>
        <link refid="_kokkos___execution_space_trait_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>traits/Kokkos_GraphKernelTrait.hpp</label>
        <link refid="_kokkos___graph_kernel_trait_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>traits/Kokkos_IndexTypeTrait.hpp</label>
        <link refid="_kokkos___index_type_trait_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>traits/Kokkos_IterationPatternTrait.hpp</label>
        <link refid="_kokkos___iteration_pattern_trait_8hpp_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>traits/Kokkos_LaunchBoundsTrait.hpp</label>
        <link refid="_kokkos___launch_bounds_trait_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>traits/Kokkos_OccupancyControlTrait.hpp</label>
        <link refid="_kokkos___occupancy_control_trait_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>traits/Kokkos_PolicyTraitAdaptor.hpp</label>
        <link refid="_kokkos___policy_trait_adaptor_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>traits/Kokkos_ScheduleTrait.hpp</label>
        <link refid="_kokkos___schedule_trait_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>traits/Kokkos_Traits_fwd.hpp</label>
        <link refid="_kokkos___traits__fwd_8hpp_source"/>
      </node>
      <node id="48">
        <label>traits/Kokkos_WorkItemPropertyTrait.hpp</label>
        <link refid="_kokkos___work_item_property_trait_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>traits/Kokkos_WorkTagTrait.hpp</label>
        <link refid="_kokkos___work_tag_trait_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>KokkosCore_Config_FwdBackend.hpp</label>
      </node>
      <node id="7">
        <label>KokkosCore_Config_SetupBackend.hpp</label>
      </node>
      <node id="6">
        <label>KokkosCore_config.h</label>
      </node>
      <node id="53">
        <label>algorithm</label>
      </node>
      <node id="64">
        <label>array</label>
      </node>
      <node id="74">
        <label>atomic</label>
      </node>
      <node id="68">
        <label>cassert</label>
      </node>
      <node id="57">
        <label>cinttypes</label>
      </node>
      <node id="21">
        <label>climits</label>
      </node>
      <node id="18">
        <label>cstddef</label>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="58">
        <label>cstdlib</label>
      </node>
      <node id="28">
        <label>cstring</label>
      </node>
      <node id="3">
        <label>initializer_list</label>
      </node>
      <node id="10">
        <label>iosfwd</label>
      </node>
      <node id="54">
        <label>limits</label>
      </node>
      <node id="67">
        <label>map</label>
      </node>
      <node id="69">
        <label>memory</label>
      </node>
      <node id="71">
        <label>mutex</label>
      </node>
      <node id="63">
        <label>stdbool.h</label>
      </node>
      <node id="61">
        <label>stddef.h</label>
      </node>
      <node id="62">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="65">
        <label>tuple</label>
      </node>
      <node id="2">
        <label>type_traits</label>
      </node>
      <node id="29">
        <label>typeinfo</label>
      </node>
      <node id="70">
        <label>unordered_map</label>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="66">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11">
        <label>src/Kokkos/kokkos/algorithms/src/Kokkos_Random.hpp</label>
        <link refid="_kokkos___random_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/Kokkos/kokkos/algorithms/src/Kokkos_Sort.hpp</label>
        <link refid="_kokkos___sort_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/Kokkos/kokkos/algorithms/unit_tests/TestRandom.hpp</label>
        <link refid="_test_random_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/Kokkos/kokkos/algorithms/unit_tests/TestRandomCommon.hpp</label>
        <link refid="_test_random_common_8hpp_source"/>
      </node>
      <node id="14">
        <label>src/Kokkos/kokkos/algorithms/unit_tests/TestSort.hpp</label>
        <link refid="_test_sort_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/Kokkos/kokkos/algorithms/unit_tests/TestSortCommon.hpp</label>
        <link refid="_test_sort_common_8hpp_source"/>
      </node>
      <node id="19">
        <label>src/Kokkos/kokkos/benchmarks/bytes_and_flops/bench.hpp</label>
        <link refid="bench_8hpp_source"/>
      </node>
      <node id="17">
        <label>src/Kokkos/kokkos/benchmarks/gather/gather.hpp</label>
        <link refid="gather_8hpp_source"/>
      </node>
      <node id="16">
        <label>src/Kokkos/kokkos/benchmarks/gather/gather_unroll.hpp</label>
        <link refid="gather__unroll_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/Kokkos/kokkos/benchmarks/policy_performance/policy_perf_test.hpp</label>
        <link refid="policy__perf__test_8hpp_source"/>
      </node>
      <node id="21">
        <label>src/Kokkos/kokkos/containers/performance_tests/TestDynRankView.hpp</label>
        <link refid="_test_dyn_rank_view_8hpp_source"/>
      </node>
      <node id="22">
        <label>src/Kokkos/kokkos/containers/performance_tests/TestGlobal2LocalIds.hpp</label>
        <link refid="_test_global2_local_ids_8hpp_source"/>
      </node>
      <node id="40">
        <label>src/Kokkos/kokkos/containers/performance_tests/TestScatterView.hpp</label>
        <link refid="performance__tests_2_test_scatter_view_8hpp_source"/>
      </node>
      <node id="23">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_Bitset.hpp</label>
        <link refid="_kokkos___bitset_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_DualView.hpp</label>
        <link refid="_kokkos___dual_view_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_DynRankView.hpp</label>
        <link refid="_kokkos___dyn_rank_view_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_DynamicView.hpp</label>
        <link refid="_kokkos___dynamic_view_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_ErrorReporter.hpp</label>
        <link refid="_kokkos___error_reporter_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_OffsetView.hpp</label>
        <link refid="_kokkos___offset_view_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_ScatterView.hpp</label>
        <link refid="_kokkos___scatter_view_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_StaticCrsGraph.hpp</label>
        <link refid="_kokkos___static_crs_graph_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_UnorderedMap.hpp</label>
        <link refid="_kokkos___unordered_map_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/Kokkos/kokkos/containers/src/Kokkos_Vector.hpp</label>
        <link refid="_kokkos___vector_8hpp_source"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestBitset.hpp</label>
        <link refid="_test_bitset_8hpp_source"/>
      </node>
      <node id="30">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDualView.hpp</label>
        <link refid="_test_dual_view_8hpp_source"/>
      </node>
      <node id="32">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI.hpp</label>
        <link refid="_test_dyn_view_a_p_i_8hpp_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_generic.hpp</label>
        <link refid="_test_dyn_view_a_p_i__generic_8hpp_source"/>
      </node>
      <node id="34">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_rank12345.hpp</label>
        <link refid="_test_dyn_view_a_p_i__rank12345_8hpp_source"/>
      </node>
      <node id="35">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDynViewAPI_rank67.hpp</label>
        <link refid="_test_dyn_view_a_p_i__rank67_8hpp_source"/>
      </node>
      <node id="38">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestDynamicView.hpp</label>
        <link refid="_test_dynamic_view_8hpp_source"/>
      </node>
      <node id="4">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestErrorReporter.hpp</label>
        <link refid="_test_error_reporter_8hpp_source"/>
      </node>
      <node id="6">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestOffsetView.hpp</label>
        <link refid="_test_offset_view_8hpp_source"/>
      </node>
      <node id="41">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestScatterView.hpp</label>
        <link refid="unit__tests_2_test_scatter_view_8hpp_source"/>
      </node>
      <node id="8">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestStaticCrsGraph.hpp</label>
        <link refid="_test_static_crs_graph_8hpp_source"/>
      </node>
      <node id="25">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestUnorderedMap.hpp</label>
        <link refid="_test_unordered_map_8hpp_source"/>
      </node>
      <node id="29">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestVector.hpp</label>
        <link refid="_test_vector_8hpp_source"/>
      </node>
      <node id="36">
        <label>src/Kokkos/kokkos/containers/unit_tests/TestViewCtorPropEmbeddedDim.hpp</label>
        <link refid="containers_2unit__tests_2_test_view_ctor_prop_embedded_dim_8hpp_source"/>
      </node>
      <node id="42">
        <label>src/Kokkos/kokkos/core/perf_test/PerfTest_ViewCopy.hpp</label>
        <link refid="_perf_test___view_copy_8hpp_source"/>
      </node>
      <node id="43">
        <label>src/Kokkos/kokkos/core/perf_test/PerfTest_ViewFill.hpp</label>
        <link refid="_perf_test___view_fill_8hpp_source"/>
      </node>
      <node id="44">
        <label>src/Kokkos/kokkos/core/perf_test/PerfTest_ViewResize.hpp</label>
        <link refid="_perf_test___view_resize_8hpp_source"/>
      </node>
      <node id="182">
        <label>src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Parallel_MDRange.hpp</label>
        <link refid="_kokkos___h_i_p___parallel___m_d_range_8hpp_source"/>
      </node>
      <node id="183">
        <label>src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Parallel_Range.hpp</label>
        <link refid="_kokkos___h_i_p___parallel___range_8hpp_source"/>
      </node>
      <node id="184">
        <label>src/Kokkos/kokkos/core/src/HIP/Kokkos_HIP_Parallel_Team.hpp</label>
        <link refid="_kokkos___h_i_p___parallel___team_8hpp_source"/>
      </node>
      <node id="9">
        <label>src/Kokkos/kokkos/core/src/KokkosExp_InterOp.hpp</label>
        <link refid="_kokkos_exp___inter_op_8hpp_source"/>
      </node>
      <node id="45">
        <label>src/Kokkos/kokkos/core/src/Kokkos_AcquireUniqueTokenImpl.hpp</label>
        <link refid="_kokkos___acquire_unique_token_impl_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>src/Kokkos/kokkos/core/src/Kokkos_CopyViews.hpp</label>
        <link refid="_kokkos___copy_views_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Core.hpp</label>
        <link refid="_kokkos___core_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Crs.hpp</label>
        <link refid="_kokkos___crs_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Graph.hpp</label>
        <link refid="_kokkos___graph_8hpp_source"/>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="195">
        <label>src/Kokkos/kokkos/core/src/Kokkos_GraphNode.hpp</label>
        <link refid="_kokkos___graph_node_8hpp_source"/>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>src/Kokkos/kokkos/core/src/Kokkos_MemoryPool.hpp</label>
        <link refid="_kokkos___memory_pool_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Parallel.hpp</label>
        <link refid="_kokkos___parallel_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>src/Kokkos/kokkos/core/src/Kokkos_Parallel_Reduce.hpp</label>
        <link refid="_kokkos___parallel___reduce_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/Kokkos/kokkos/core/src/Kokkos_View.hpp</label>
        <link refid="_kokkos___view_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>src/Kokkos/kokkos/core/src/Kokkos_WorkGraphPolicy.hpp</label>
        <link refid="_kokkos___work_graph_policy_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Instance.hpp</label>
        <link refid="_kokkos___open_m_p_target___instance_8hpp_source"/>
      </node>
      <node id="187">
        <label>src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp</label>
        <link refid="_kokkos___open_m_p_target___parallel_8hpp_source"/>
      </node>
      <node id="188">
        <label>src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel_MDRange.hpp</label>
        <link refid="_kokkos___open_m_p_target___parallel___m_d_range_8hpp_source"/>
      </node>
      <node id="189">
        <label>src/Kokkos/kokkos/core/src/SYCL/Kokkos_SYCL_Parallel_Team.hpp</label>
        <link refid="_kokkos___s_y_c_l___parallel___team_8hpp_source"/>
      </node>
      <node id="199">
        <label>src/Kokkos/kokkos/core/src/impl/KokkosExp_ViewMapping.hpp</label>
        <link refid="_kokkos_exp___view_mapping_8hpp_source"/>
      </node>
      <node id="196">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Combined_Reducer.hpp</label>
        <link refid="_kokkos___combined___reducer_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Default_GraphNodeKernel.hpp</label>
        <link refid="_kokkos___default___graph_node_kernel_8hpp_source"/>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Default_GraphNode_Impl.hpp</label>
        <link refid="_kokkos___default___graph_node___impl_8hpp_source"/>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_Default_Graph_Impl.hpp</label>
        <link refid="_kokkos___default___graph___impl_8hpp_source"/>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_PhysicalLayout.hpp</label>
        <link refid="_kokkos___physical_layout_8hpp_source"/>
      </node>
      <node id="198">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp</label>
        <link refid="_kokkos___view_layout_tiled_8hpp_source"/>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp</label>
        <link refid="_kokkos___view_mapping_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations.hpp</label>
        <link refid="_test_atomic_operations_8hpp_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_complexdouble.hpp</label>
        <link refid="_test_atomic_operations__complexdouble_8hpp_source"/>
      </node>
      <node id="49">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_complexfloat.hpp</label>
        <link refid="_test_atomic_operations__complexfloat_8hpp_source"/>
      </node>
      <node id="50">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_double.hpp</label>
        <link refid="_test_atomic_operations__double_8hpp_source"/>
      </node>
      <node id="51">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_float.hpp</label>
        <link refid="_test_atomic_operations__float_8hpp_source"/>
      </node>
      <node id="52">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_int.hpp</label>
        <link refid="_test_atomic_operations__int_8hpp_source"/>
      </node>
      <node id="53">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_longint.hpp</label>
        <link refid="_test_atomic_operations__longint_8hpp_source"/>
      </node>
      <node id="54">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_longlongint.hpp</label>
        <link refid="_test_atomic_operations__longlongint_8hpp_source"/>
      </node>
      <node id="55">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_unsignedint.hpp</label>
        <link refid="_test_atomic_operations__unsignedint_8hpp_source"/>
      </node>
      <node id="56">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicOperations_unsignedlongint.hpp</label>
        <link refid="_test_atomic_operations__unsignedlongint_8hpp_source"/>
      </node>
      <node id="58">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomicViews.hpp</label>
        <link refid="_test_atomic_views_8hpp_source"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp</label>
        <link refid="_test_atomics_8hpp_source"/>
      </node>
      <node id="60">
        <label>src/Kokkos/kokkos/core/unit_test/TestBlockSizeDeduction.hpp</label>
        <link refid="_test_block_size_deduction_8hpp_source"/>
      </node>
      <node id="61">
        <label>src/Kokkos/kokkos/core/unit_test/TestCXX11.hpp</label>
        <link refid="_test_c_x_x11_8hpp_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>src/Kokkos/kokkos/core/unit_test/TestCXX11Deduction.hpp</label>
        <link refid="_test_c_x_x11_deduction_8hpp_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>src/Kokkos/kokkos/core/unit_test/TestCompilerMacros.hpp</label>
        <link refid="_test_compiler_macros_8hpp_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>src/Kokkos/kokkos/core/unit_test/TestComplex.hpp</label>
        <link refid="_test_complex_8hpp_source"/>
      </node>
      <node id="68">
        <label>src/Kokkos/kokkos/core/unit_test/TestConcepts.hpp</label>
        <link refid="_test_concepts_8hpp_source"/>
      </node>
      <node id="69">
        <label>src/Kokkos/kokkos/core/unit_test/TestCrs.hpp</label>
        <link refid="_test_crs_8hpp_source"/>
      </node>
      <node id="70">
        <label>src/Kokkos/kokkos/core/unit_test/TestDeepCopyAlignment.hpp</label>
        <link refid="_test_deep_copy_alignment_8hpp_source"/>
      </node>
      <node id="71">
        <label>src/Kokkos/kokkos/core/unit_test/TestDefaultDeviceTypeInit.hpp</label>
        <link refid="_test_default_device_type_init_8hpp_source"/>
      </node>
      <node id="72">
        <label>src/Kokkos/kokkos/core/unit_test/TestExecSpacePartitioning.hpp</label>
        <link refid="_test_exec_space_partitioning_8hpp_source"/>
      </node>
      <node id="73">
        <label>src/Kokkos/kokkos/core/unit_test/TestExecutionSpace.hpp</label>
        <link refid="_test_execution_space_8hpp_source"/>
      </node>
      <node id="74">
        <label>src/Kokkos/kokkos/core/unit_test/TestFunctorAnalysis.hpp</label>
        <link refid="_test_functor_analysis_8hpp_source"/>
      </node>
      <node id="75">
        <label>src/Kokkos/kokkos/core/unit_test/TestGraph.hpp</label>
        <link refid="_test_graph_8hpp_source"/>
      </node>
      <node id="76">
        <label>src/Kokkos/kokkos/core/unit_test/TestHostSharedPtrAccessOnDevice.hpp</label>
        <link refid="_test_host_shared_ptr_access_on_device_8hpp_source"/>
      </node>
      <node id="66">
        <label>src/Kokkos/kokkos/core/unit_test/TestInit.hpp</label>
        <link refid="_test_init_8hpp_source"/>
      </node>
      <node id="77">
        <label>src/Kokkos/kokkos/core/unit_test/TestIrregularLayout.hpp</label>
        <link refid="_test_irregular_layout_8hpp_source"/>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>src/Kokkos/kokkos/core/unit_test/TestLocalDeepCopy.hpp</label>
        <link refid="_test_local_deep_copy_8hpp_source"/>
      </node>
      <node id="80">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange.hpp</label>
        <link refid="_test_m_d_range_8hpp_source"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_a.hpp</label>
        <link refid="_test_m_d_range__a_8hpp_source"/>
      </node>
      <node id="82">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_b.hpp</label>
        <link refid="_test_m_d_range__b_8hpp_source"/>
      </node>
      <node id="83">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_c.hpp</label>
        <link refid="_test_m_d_range__c_8hpp_source"/>
      </node>
      <node id="84">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_d.hpp</label>
        <link refid="_test_m_d_range__d_8hpp_source"/>
      </node>
      <node id="85">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_e.hpp</label>
        <link refid="_test_m_d_range__e_8hpp_source"/>
      </node>
      <node id="86">
        <label>src/Kokkos/kokkos/core/unit_test/TestMDRange_f.hpp</label>
        <link refid="_test_m_d_range__f_8hpp_source"/>
      </node>
      <node id="87">
        <label>src/Kokkos/kokkos/core/unit_test/TestMathematicalFunctions.hpp</label>
        <link refid="_test_mathematical_functions_8hpp_source"/>
      </node>
      <node id="88">
        <label>src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp</label>
        <link refid="_test_mathematical_special_functions_8hpp_source"/>
      </node>
      <node id="89">
        <label>src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp</label>
        <link refid="_test_non_trivial_scalar_types_8hpp_source"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>src/Kokkos/kokkos/core/unit_test/TestNumericTraits.hpp</label>
        <link refid="_test_numeric_traits_8hpp_source"/>
      </node>
      <node id="62">
        <label>src/Kokkos/kokkos/core/unit_test/TestOther.hpp</label>
        <link refid="_test_other_8hpp_source"/>
      </node>
      <node id="95">
        <label>src/Kokkos/kokkos/core/unit_test/TestPolicyConstruction.hpp</label>
        <link refid="_test_policy_construction_8hpp_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>src/Kokkos/kokkos/core/unit_test/TestRange.hpp</label>
        <link refid="_test_range_8hpp_source"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>src/Kokkos/kokkos/core/unit_test/TestRangePolicy.hpp</label>
        <link refid="_test_range_policy_8hpp_source"/>
      </node>
      <node id="98">
        <label>src/Kokkos/kokkos/core/unit_test/TestRangePolicyRequire.hpp</label>
        <link refid="_test_range_policy_require_8hpp_source"/>
      </node>
      <node id="99">
        <label>src/Kokkos/kokkos/core/unit_test/TestReduce.hpp</label>
        <link refid="_test_reduce_8hpp_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>src/Kokkos/kokkos/core/unit_test/TestReduceCombinatorical.hpp</label>
        <link refid="_test_reduce_combinatorical_8hpp_source"/>
      </node>
      <node id="101">
        <label>src/Kokkos/kokkos/core/unit_test/TestReducers.hpp</label>
        <link refid="_test_reducers_8hpp_source"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>src/Kokkos/kokkos/core/unit_test/TestReducers_a.hpp</label>
        <link refid="_test_reducers__a_8hpp_source"/>
      </node>
      <node id="103">
        <label>src/Kokkos/kokkos/core/unit_test/TestReducers_b.hpp</label>
        <link refid="_test_reducers__b_8hpp_source"/>
      </node>
      <node id="104">
        <label>src/Kokkos/kokkos/core/unit_test/TestReducers_c.hpp</label>
        <link refid="_test_reducers__c_8hpp_source"/>
      </node>
      <node id="90">
        <label>src/Kokkos/kokkos/core/unit_test/TestReducers_d.hpp</label>
        <link refid="_test_reducers__d_8hpp_source"/>
      </node>
      <node id="64">
        <label>src/Kokkos/kokkos/core/unit_test/TestReductions.hpp</label>
        <link refid="_test_reductions_8hpp_source"/>
      </node>
      <node id="105">
        <label>src/Kokkos/kokkos/core/unit_test/TestReductions_DeviceView.hpp</label>
        <link refid="_test_reductions___device_view_8hpp_source"/>
      </node>
      <node id="106">
        <label>src/Kokkos/kokkos/core/unit_test/TestResize.hpp</label>
        <link refid="_test_resize_8hpp_source"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>src/Kokkos/kokkos/core/unit_test/TestScan.hpp</label>
        <link refid="_test_scan_8hpp_source"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>src/Kokkos/kokkos/core/unit_test/TestSharedAlloc.hpp</label>
        <link refid="_test_shared_alloc_8hpp_source"/>
      </node>
      <node id="110">
        <label>src/Kokkos/kokkos/core/unit_test/TestStackTrace.hpp</label>
        <link refid="_test_stack_trace_8hpp_source"/>
      </node>
      <node id="137">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_a.hpp</label>
        <link refid="_test_sub_view__a_8hpp_source"/>
      </node>
      <node id="138">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_b.hpp</label>
        <link refid="_test_sub_view__b_8hpp_source"/>
      </node>
      <node id="139">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c01.hpp</label>
        <link refid="_test_sub_view__c01_8hpp_source"/>
      </node>
      <node id="140">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c02.hpp</label>
        <link refid="_test_sub_view__c02_8hpp_source"/>
      </node>
      <node id="141">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c03.hpp</label>
        <link refid="_test_sub_view__c03_8hpp_source"/>
      </node>
      <node id="142">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c04.hpp</label>
        <link refid="_test_sub_view__c04_8hpp_source"/>
      </node>
      <node id="143">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c05.hpp</label>
        <link refid="_test_sub_view__c05_8hpp_source"/>
      </node>
      <node id="144">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c06.hpp</label>
        <link refid="_test_sub_view__c06_8hpp_source"/>
      </node>
      <node id="145">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c07.hpp</label>
        <link refid="_test_sub_view__c07_8hpp_source"/>
      </node>
      <node id="146">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c08.hpp</label>
        <link refid="_test_sub_view__c08_8hpp_source"/>
      </node>
      <node id="147">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c09.hpp</label>
        <link refid="_test_sub_view__c09_8hpp_source"/>
      </node>
      <node id="148">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c10.hpp</label>
        <link refid="_test_sub_view__c10_8hpp_source"/>
      </node>
      <node id="149">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c11.hpp</label>
        <link refid="_test_sub_view__c11_8hpp_source"/>
      </node>
      <node id="150">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c12.hpp</label>
        <link refid="_test_sub_view__c12_8hpp_source"/>
      </node>
      <node id="151">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c13.hpp</label>
        <link refid="_test_sub_view__c13_8hpp_source"/>
      </node>
      <node id="152">
        <label>src/Kokkos/kokkos/core/unit_test/TestSubView_c14.hpp</label>
        <link refid="_test_sub_view__c14_8hpp_source"/>
      </node>
      <node id="111">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeam.hpp</label>
        <link refid="_test_team_8hpp_source"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp</label>
        <link refid="_test_team_basic_8hpp_source"/>
      </node>
      <node id="112">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamReductionScan.hpp</label>
        <link refid="_test_team_reduction_scan_8hpp_source"/>
      </node>
      <node id="114">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamScan.hpp</label>
        <link refid="_test_team_scan_8hpp_source"/>
      </node>
      <node id="113">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamScratch.hpp</label>
        <link refid="_test_team_scratch_8hpp_source"/>
      </node>
      <node id="115">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamTeamSize.hpp</label>
        <link refid="_test_team_team_size_8hpp_source"/>
      </node>
      <node id="91">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamVector.hpp</label>
        <link refid="_test_team_vector_8hpp_source"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>src/Kokkos/kokkos/core/unit_test/TestTeamVectorRange.hpp</label>
        <link refid="_test_team_vector_range_8hpp_source"/>
      </node>
      <node id="117">
        <label>src/Kokkos/kokkos/core/unit_test/TestTemplateMetaFunctions.hpp</label>
        <link refid="_test_template_meta_functions_8hpp_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>src/Kokkos/kokkos/core/unit_test/TestUniqueToken.hpp</label>
        <link refid="_test_unique_token_8hpp_source"/>
      </node>
      <node id="119">
        <label>src/Kokkos/kokkos/core/unit_test/TestUtilities.hpp</label>
        <link refid="_test_utilities_8hpp_source"/>
      </node>
      <node id="120">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI.hpp</label>
        <link refid="_test_view_a_p_i_8hpp_source"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI_a.hpp</label>
        <link refid="_test_view_a_p_i__a_8hpp_source"/>
      </node>
      <node id="122">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI_b.hpp</label>
        <link refid="_test_view_a_p_i__b_8hpp_source"/>
      </node>
      <node id="123">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI_c.hpp</label>
        <link refid="_test_view_a_p_i__c_8hpp_source"/>
      </node>
      <node id="124">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI_d.hpp</label>
        <link refid="_test_view_a_p_i__d_8hpp_source"/>
      </node>
      <node id="125">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewAPI_e.hpp</label>
        <link refid="_test_view_a_p_i__e_8hpp_source"/>
      </node>
      <node id="126">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewCopy_a.hpp</label>
        <link refid="_test_view_copy__a_8hpp_source"/>
      </node>
      <node id="127">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewCopy_b.hpp</label>
        <link refid="_test_view_copy__b_8hpp_source"/>
      </node>
      <node id="128">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewCtorPropEmbeddedDim.hpp</label>
        <link refid="core_2unit__test_2_test_view_ctor_prop_embedded_dim_8hpp_source"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewIsAssignable.hpp</label>
        <link refid="_test_view_is_assignable_8hpp_source"/>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewLayoutStrideAssignment.hpp</label>
        <link refid="_test_view_layout_stride_assignment_8hpp_source"/>
      </node>
      <node id="130">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewLayoutTiled.hpp</label>
        <link refid="_test_view_layout_tiled_8hpp_source"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewMapping_a.hpp</label>
        <link refid="_test_view_mapping__a_8hpp_source"/>
      </node>
      <node id="132">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewMapping_b.hpp</label>
        <link refid="_test_view_mapping__b_8hpp_source"/>
      </node>
      <node id="133">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewMapping_subview.hpp</label>
        <link refid="_test_view_mapping__subview_8hpp_source"/>
      </node>
      <node id="134">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewOfClass.hpp</label>
        <link refid="_test_view_of_class_8hpp_source"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewResize.hpp</label>
        <link refid="_test_view_resize_8hpp_source"/>
      </node>
      <node id="135">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewSpaceAssign.hpp</label>
        <link refid="_test_view_space_assign_8hpp_source"/>
      </node>
      <node id="136">
        <label>src/Kokkos/kokkos/core/unit_test/TestViewSubview.hpp</label>
        <link refid="_test_view_subview_8hpp_source"/>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>src/Kokkos/kokkos/core/unit_test/TestView_64bit.hpp</label>
        <link refid="_test_view__64bit_8hpp_source"/>
      </node>
      <node id="154">
        <label>src/Kokkos/kokkos/core/unit_test/TestWorkGraph.hpp</label>
        <link refid="_test_work_graph_8hpp_source"/>
      </node>
      <node id="155">
        <label>src/Kokkos/kokkos/core/unit_test/Test_InterOp_Streams.hpp</label>
        <link refid="_test___inter_op___streams_8hpp_source"/>
      </node>
      <node id="156">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test01_execspace.hpp</label>
        <link refid="_test01__execspace_8hpp_source"/>
      </node>
      <node id="157">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test02_atomic_host.hpp</label>
        <link refid="_test02__atomic__host_8hpp_source"/>
      </node>
      <node id="158">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test03a_MemorySpace_malloc.hpp</label>
        <link refid="_test03a___memory_space__malloc_8hpp_source"/>
      </node>
      <node id="159">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test03b_MemorySpace_free.hpp</label>
        <link refid="_test03b___memory_space__free_8hpp_source"/>
      </node>
      <node id="160">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp</label>
        <link refid="_test04___parallel_for___range_policy_8hpp_source"/>
      </node>
      <node id="161">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test05_ParallelReduce_RangePolicy.hpp</label>
        <link refid="_test05___parallel_reduce___range_policy_8hpp_source"/>
      </node>
      <node id="162">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test06_ParallelFor_MDRangePolicy.hpp</label>
        <link refid="_test06___parallel_for___m_d_range_policy_8hpp_source"/>
      </node>
      <node id="163">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test08_deep_copy.hpp</label>
        <link refid="_test08__deep__copy_8hpp_source"/>
      </node>
      <node id="164">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test10_HierarchicalBasics.hpp</label>
        <link refid="_test10___hierarchical_basics_8hpp_source"/>
      </node>
      <node id="165">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test11a_ParallelFor_TeamThreadRange.hpp</label>
        <link refid="_test11a___parallel_for___team_thread_range_8hpp_source"/>
      </node>
      <node id="166">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test11b_ParallelFor_TeamVectorRange.hpp</label>
        <link refid="_test11b___parallel_for___team_vector_range_8hpp_source"/>
      </node>
      <node id="167">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test11c_ParallelFor_ThreadVectorRange.hpp</label>
        <link refid="_test11c___parallel_for___thread_vector_range_8hpp_source"/>
      </node>
      <node id="168">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test12a_ThreadScratch.hpp</label>
        <link refid="_test12a___thread_scratch_8hpp_source"/>
      </node>
      <node id="169">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test12b_TeamScratch.hpp</label>
        <link refid="_test12b___team_scratch_8hpp_source"/>
      </node>
      <node id="170">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test13a_ParallelRed_TeamThreadRange.hpp</label>
        <link refid="_test13a___parallel_red___team_thread_range_8hpp_source"/>
      </node>
      <node id="171">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test13b_ParallelRed_TeamVectorRange.hpp</label>
        <link refid="_test13b___parallel_red___team_vector_range_8hpp_source"/>
      </node>
      <node id="172">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test13c_ParallelRed_ThreadVectorRange.hpp</label>
        <link refid="_test13c___parallel_red___thread_vector_range_8hpp_source"/>
      </node>
      <node id="173">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test14_MDRangeReduce.hpp</label>
        <link refid="_test14___m_d_range_reduce_8hpp_source"/>
      </node>
      <node id="174">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test16_ParallelScan.hpp</label>
        <link refid="_test16___parallel_scan_8hpp_source"/>
      </node>
      <node id="175">
        <label>src/Kokkos/kokkos/core/unit_test/incremental/Test17_CompleteAtomic.hpp</label>
        <link refid="_test17___complete_atomic_8hpp_source"/>
      </node>
      <node id="57">
        <label>src/Kokkos/kokkos/core/unit_test/openmp/TestOpenMP.hpp</label>
        <link refid="_test_open_m_p_8hpp_source"/>
      </node>
      <node id="93">
        <label>src/Kokkos/kokkos/core/unit_test/openmptarget/TestOpenMPTarget.hpp</label>
        <link refid="_test_open_m_p_target_8hpp_source"/>
      </node>
      <node id="176">
        <label>src/Kokkos/kokkos/core/unit_test/tools/TestEventCorrectness.hpp</label>
        <link refid="_test_event_correctness_8hpp_source"/>
      </node>
      <node id="177">
        <label>src/Kokkos/kokkos/core/unit_test/tools/TestLogicalSpaces.hpp</label>
        <link refid="_test_logical_spaces_8hpp_source"/>
      </node>
      <node id="178">
        <label>src/Kokkos/kokkos/example/virtual_functions/classes.hpp</label>
        <link refid="classes_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_kokkos_1_1_impl_1_1variadic__size__t" prot="public">Kokkos::Impl::variadic_size_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1variadic__size__t_3_010_00_01_val_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::variadic_size_t&lt; 0, Val, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1variadic__size__t_3_01_i_00_01_val_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::variadic_size_t&lt; I, Val, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1rank__dynamic_3_4" prot="public">Kokkos::Impl::rank_dynamic&lt;&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1rank__dynamic_3_01_val_00_01_args_8_8_8_01_4" prot="public">Kokkos::Impl::rank_dynamic&lt; Val, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension0" prot="public">Kokkos::Impl::ViewDimension0</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension0_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension0&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension1" prot="public">Kokkos::Impl::ViewDimension1</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension1_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension1&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension2" prot="public">Kokkos::Impl::ViewDimension2</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension2_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension2&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension3" prot="public">Kokkos::Impl::ViewDimension3</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension3_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension3&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension4" prot="public">Kokkos::Impl::ViewDimension4</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension4_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension4&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension5" prot="public">Kokkos::Impl::ViewDimension5</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension5_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension5&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension6" prot="public">Kokkos::Impl::ViewDimension6</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension6_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension6&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension7" prot="public">Kokkos::Impl::ViewDimension7</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension7_3_010u_00_01_r_d_01_4" prot="public">Kokkos::Impl::ViewDimension7&lt; 0u, RD &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension" prot="public">Kokkos::Impl::ViewDimension</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension_1_1prepend" prot="public">Kokkos::Impl::ViewDimension::prepend</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension_1_1append" prot="public">Kokkos::Impl::ViewDimension::append</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension_join_3_01_view_dimension_3_01_a_8_8_8_01_4_00_01_view_a6ffa2c5a9af5a54e654cede11e223cf" prot="public">Kokkos::Impl::ViewDimensionJoin&lt; ViewDimension&lt; A... &gt;, ViewDimension&lt; B... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_dimension_assignable_3_01_view_dimension_3_01_dst_args_8_8_8_01_32e5eb95062827502c6fee154e395435" prot="public">Kokkos::Impl::ViewDimensionAssignable&lt; ViewDimension&lt; DstArgs... &gt;, ViewDimension&lt; SrcArgs... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_a_l_l__t" prot="public">Kokkos::Impl::ALL_t</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" prot="public">Kokkos::Impl::is_integral_extent_type</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type_3_01std_1_1pair_3_01i_type_00_01i_type_01_4_01_4" prot="public">Kokkos::Impl::is_integral_extent_type&lt; std::pair&lt; iType, iType &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type_3_01_kokkos_1_1pair_3_01i_type_00_01i_type_01_4_01_4" prot="public">Kokkos::Impl::is_integral_extent_type&lt; Kokkos::pair&lt; iType, iType &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type_3_01std_1_1initializer__list_3_01i_type_01_4_01_4" prot="public">Kokkos::Impl::is_integral_extent_type&lt; std::initializer_list&lt; iType &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1is__integral__extent" prot="public">Kokkos::Impl::is_integral_extent</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_left_00_01_kok49eec8f4573bacab246b5ca4745ad0a6" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutLeft, Kokkos::LayoutLeft, RankDest, RankSrc, CurrentArg, Arg, SubViewArgs... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_left_00_01_kokd72aceb560928d98b6ef0ee24c012980" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutLeft, Kokkos::LayoutLeft, RankDest, RankSrc, CurrentArg, Arg &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_right_00_01_ko09d0ad2cf16832917458eda4edaa6778" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutRight, Kokkos::LayoutRight, RankDest, RankSrc, CurrentArg, Arg, SubViewArgs... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_right_00_01_ko25cf0c3a14adc77c603e948353fabe75" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutRight, Kokkos::LayoutRight, RankDest, RankSrc, CurrentArg, Arg &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_stride_00_01_kfb2ceff0b353233c11ac93b3d40e7b2a" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutStride, Kokkos::LayoutLeft, RankDest, RankSrc, CurrentArg, SubViewArgs... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_stride_00_01_k291f25c63ac60718e06b7732a839240e" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutStride, Kokkos::LayoutRight, RankDest, RankSrc, CurrentArg, SubViewArgs... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_stride_00_01_k881c1058f0424e1f0d1ce0d844ea37c7" prot="public">Kokkos::Impl::SubviewLegalArgsCompileTime&lt; Kokkos::LayoutStride, Kokkos::LayoutStride, RankDest, RankSrc, CurrentArg, SubViewArgs... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_subview_extents" prot="public">Kokkos::Impl::SubviewExtents</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_type_3_01_t_00_01_view_dimension_3_4_01_4" prot="public">Kokkos::Impl::ViewDataType&lt; T, ViewDimension&lt;&gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_type_3_01_t_00_01_view_dimension_3_010_00_01_args_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::ViewDataType&lt; T, ViewDimension&lt; 0, Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_type_3_01_t_00_01_view_dimension_3_01_n_00_01_args_8_8_8_01_4_01_4" prot="public">Kokkos::Impl::ViewDataType&lt; T, ViewDimension&lt; N, Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" prot="public">Kokkos::Impl::ViewArrayAnalysis</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_array_analysis_3_01_t_0f_n_0e_4" prot="public">Kokkos::Impl::ViewArrayAnalysis&lt; T[N]&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_array_analysis_3_01_t_0f_0e_4" prot="public">Kokkos::Impl::ViewArrayAnalysis&lt; T[]&gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_array_analysis_3_01_t_01_5_01_4" prot="public">Kokkos::Impl::ViewArrayAnalysis&lt; T * &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_analysis" prot="public">Kokkos::Impl::ViewDataAnalysis</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset" prot="public">Kokkos::Impl::ViewOffset</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamef5a9a83dcd8c8ce23e7874c5bea845af" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typename166a67d8af77fb099457cb7891100e48" prot="private">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::Padding</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1 &gt;=Dimension::rank||0==Dimension::rank_dynamic)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenambcaf3dbbf3769c186f6539fcb06a7a86" prot="private">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::Padding</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_010_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 0 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_011_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 1 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_012_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 2 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_013_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 3 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_014_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 4 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_015_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 5 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_016_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 6 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_017_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 7 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_stride_3_018_01_4" prot="public">Kokkos::Impl::ViewStride&lt; 8 &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_stride_00_01void_01_4" prot="public">Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutStride, void &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_handle" prot="public">Kokkos::Impl::ViewDataHandle</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07st938ebca89995e28d97a55e257ca9a341" prot="public">Kokkos::Impl::ViewDataHandle&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::non_const_value_type, typename Traits::value_type &gt;::value &amp;&amp;std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;Traits::memory_traits::is_atomic)&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07stbc5d2690bc22ef07bccd6c58af20e87a" prot="public">Kokkos::Impl::ViewDataHandle&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;(!Traits::memory_traits::is_aligned) &amp;&amp;Traits::memory_traits::is_restrict &amp;&amp;(!Traits::memory_traits::is_atomic))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07ste24704fcde5ef4ad99dc6b3e8de1cd8a" prot="public">Kokkos::Impl::ViewDataHandle&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;Traits::memory_traits::is_aligned &amp;&amp;(!Traits::memory_traits::is_restrict) &amp;&amp;(!Traits::memory_traits::is_atomic))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07st6e63042290570a38914c91e3b65fe351" prot="public">Kokkos::Impl::ViewDataHandle&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;Traits::memory_traits::is_aligned &amp;&amp;Traits::memory_traits::is_restrict &amp;&amp;(!Traits::memory_traits::is_atomic))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01false_01_4" prot="public">Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4" prot="public">Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a" prot="public">Kokkos::Impl::ViewMapping&lt; Traits, typename std::enable_if&lt;(std::is_same&lt; typename Traits::specialize, void &gt;::value &amp;&amp;ViewOffset&lt; typename Traits::dimension, typename Traits::array_layout, void &gt;::is_mapping_plugin::value)&gt;::type &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_dst_traits_00_01_src_traits_00_01typename_01std_1_1e1c3c077b111785296d2fc9410bbe05b1" prot="public">Kokkos::Impl::ViewMapping&lt; DstTraits, SrcTraits, typename std::enable_if&lt;(!(std::is_same&lt; typename SrcTraits::array_layout, LayoutStride &gt;::value) &amp;&amp;std::is_same&lt; typename DstTraits::specialize, void &gt;::value &amp;&amp;std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename DstTraits::array_layout, typename SrcTraits::array_layout &gt;::value||((std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutStride &gt;::value) &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))))&gt;::type &gt;</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_dst_traits_00_01_src_traits_00_01typename_01std_1_1e98ccb6c5b4de88f404c0cfebecd6851f" prot="public">Kokkos::Impl::ViewMapping&lt; DstTraits, SrcTraits, typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value &amp;&amp;std::is_same&lt; typename DstTraits::specialize, void &gt;::value &amp;&amp;std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename DstTraits::array_layout, typename SrcTraits::array_layout &gt;::value||(std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename DstTraits::array_layout, Kokkos::LayoutStride &gt;::value)))&gt;::type &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01void_00_01_value_type_00_01_kokkos_1_1_experimental_1_1_extents_3_4_01_4" prot="public">Kokkos::Impl::SubViewDataTypeImpl&lt; void, ValueType, Kokkos::Experimental::Extents&lt;&gt; &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01typename_01std_1_1enable__if_3_01std_1_1iaeb7d5ccccbd3ef003685b3c8050b160" prot="public">Kokkos::Impl::SubViewDataTypeImpl&lt; typename std::enable_if&lt; std::is_integral&lt; typename std::decay&lt; Integral &gt;::type &gt;::value &gt;::type, ValueType, Kokkos::Experimental::Extents&lt; Ext, Exts... &gt;, Integral, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01void_00_01_value_type_00_01_kokkos_1_1_ex38d52f2174174c3ac37061db5ee00104" prot="public">Kokkos::Impl::SubViewDataTypeImpl&lt; void, ValueType, Kokkos::Experimental::Extents&lt; Ext, Exts... &gt;, ALL_t, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01typename_01std_1_1enable__if_3_01is__paire12d285196d053141a48962706cc3dd7" prot="public">Kokkos::Impl::SubViewDataTypeImpl&lt; typename std::enable_if&lt; is_pair_like&lt; PairLike &gt;::value &gt;::type, ValueType, Kokkos::Experimental::Extents&lt; Ext, Exts... &gt;, PairLike, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type" prot="public">Kokkos::Impl::SubViewDataType</innerclass>
    <innerclass refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_08b1c6ef2380458c1b1a9604a1caef735" prot="public">Kokkos::Impl::ViewMapping&lt; typename std::enable_if&lt;(std::is_same&lt; typename SrcTraits::specialize, void &gt;::value &amp;&amp;(std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutLeft &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutRight &gt;::value||std::is_same&lt; typename SrcTraits::array_layout, Kokkos::LayoutStride &gt;::value))&gt;::type, SrcTraits, Args... &gt;::apply</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device_3_01_map_type_00_01false_01_4" prot="public">Kokkos::Impl::OperatorBoundsErrorOnDevice&lt; MapType, false &gt;</innerclass>
    <innerclass refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device_3_01_map_type_00_01true_01_4" prot="public">Kokkos::Impl::OperatorBoundsErrorOnDevice&lt; MapType, true &gt;</innerclass>
    <innernamespace refid="namespace_kokkos">Kokkos</innernamespace>
    <innernamespace refid="namespace_kokkos_1_1_impl">Kokkos::Impl</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_kokkos___view_mapping_8hpp_1ae43d2d760e9036b615af59b2e9828179" prot="public" static="no">
        <name>KOKKOS_IMPL_VIEW_DIMENSION</name>
        <param><defname>R</defname></param>
        <initializer>  template &lt;size_t V, unsigned&gt;                                             \
  struct ViewDimension##R {                                                 \
    static constexpr size_t ArgN##R = (V != KOKKOS_INVALID_INDEX ? V : 1);  \
    static constexpr size_t N##R    = (V != KOKKOS_INVALID_INDEX ? V : 1);  \
    KOKKOS_INLINE_FUNCTION explicit ViewDimension##R(size_t) {}             \
    ViewDimension##R()                        = default;                    \
    ViewDimension##R(const ViewDimension##R&amp;) = default;                    \
    ViewDimension##R&amp; operator=(const ViewDimension##R&amp;) = default;         \
  };                                                                        \
  template &lt;size_t V, unsigned RD&gt;                                          \
  constexpr size_t ViewDimension##R&lt;V, RD&gt;::ArgN##R;                        \
  template &lt;size_t V, unsigned RD&gt;                                          \
  constexpr size_t ViewDimension##R&lt;V, RD&gt;::N##R;                           \
  template &lt;unsigned RD&gt;                                                    \
  struct ViewDimension##R&lt;0u, RD&gt; {                                         \
    static constexpr size_t ArgN##R = 0;                                    \
    typename std::conditional&lt;(RD &lt; 3), size_t, unsigned&gt;::type N##R;       \
    ViewDimension##R()                        = default;                    \
    ViewDimension##R(const ViewDimension##R&amp;) = default;                    \
    ViewDimension##R&amp; operator=(const ViewDimension##R&amp;) = default;         \
    KOKKOS_INLINE_FUNCTION explicit ViewDimension##R(size_t V) : N##R(V) {} \
  };                                                                        \
  template &lt;unsigned RD&gt;                                                    \
  constexpr size_t ViewDimension##R&lt;0u, RD&gt;::ArgN##R;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="97" column="9" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/>************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos<sp/>v.<sp/>3.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(2020)<sp/>National<sp/>Technology<sp/>&amp;<sp/>Engineering</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Solutions<sp/>of<sp/>Sandia,<sp/>LLC<sp/>(NTESS).</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract<sp/>DE-NA0003525<sp/>with<sp/>NTESS,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>the<sp/>U.S.<sp/>Government<sp/>retains<sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>met:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Corporation<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>NTESS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>NTESS<sp/>OR<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/>Questions?<sp/>Contact<sp/>Christian<sp/>R.<sp/>Trott<sp/>(crtrott@sandia.gov)</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//<sp/>************************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment">//@HEADER</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>KOKKOS_EXPERIMENTAL_VIEW_MAPPING_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOKKOS_EXPERIMENTAL_VIEW_MAPPING_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Kokkos_Core_fwd.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Kokkos_DetectionIdiom.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_kokkos___pair_8hpp" kindref="compound">Kokkos_Pair.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_kokkos___layout_8hpp" kindref="compound">Kokkos_Layout.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Kokkos_Extents.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;impl/Kokkos_Error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;impl/Kokkos_Traits.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;impl/Kokkos_ViewTracker.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;impl/Kokkos_ViewCtor.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;impl/Kokkos_Atomic_View.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;impl/Kokkos_Tools.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Kokkos<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="70" refid="struct_kokkos_1_1_impl_1_1variadic__size__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/>KOKKOS_INVALID_INDEX<sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Val,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="75" refid="struct_kokkos_1_1_impl_1_1variadic__size__t_3_010_00_01_val_00_01_args_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;0,<sp/>Val,<sp/>Args...&gt;<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/>Val<sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Val,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="80" refid="struct_kokkos_1_1_impl_1_1variadic__size__t_3_01_i_00_01_val_00_01_args_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;I,<sp/>Val,<sp/>Args...&gt;<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;I<sp/>-<sp/>1,<sp/>Args...&gt;::value<sp/>};</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="85" refid="struct_kokkos_1_1_impl_1_1rank__dynamic" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="88" refid="struct_kokkos_1_1_impl_1_1rank__dynamic_3_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>&lt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Val,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="93" refid="struct_kokkos_1_1_impl_1_1rank__dynamic_3_01_val_00_01_args_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>&lt;Val,<sp/>Args...&gt;<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/>(Val<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>+<sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic&lt;Args...&gt;::value</ref><sp/>};</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOKKOS_IMPL_VIEW_DIMENSION(R)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;size_t<sp/>V,<sp/>unsigned&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/>struct<sp/>ViewDimension##R<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>size_t<sp/>ArgN##R<sp/>=<sp/>(V<sp/>!=<sp/>KOKKOS_INVALID_INDEX<sp/>?<sp/>V<sp/>:<sp/>1);<sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>size_t<sp/>N##R<sp/><sp/><sp/><sp/>=<sp/>(V<sp/>!=<sp/>KOKKOS_INVALID_INDEX<sp/>?<sp/>V<sp/>:<sp/>1);<sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>explicit<sp/>ViewDimension##R(size_t)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ViewDimension##R()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>default;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ViewDimension##R(const<sp/>ViewDimension##R&amp;)<sp/>=<sp/>default;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ViewDimension##R&amp;<sp/>operator=(const<sp/>ViewDimension##R&amp;)<sp/>=<sp/>default;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;size_t<sp/>V,<sp/>unsigned<sp/>RD&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/>constexpr<sp/>size_t<sp/>ViewDimension##R&lt;V,<sp/>RD&gt;::ArgN##R;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;size_t<sp/>V,<sp/>unsigned<sp/>RD&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/>constexpr<sp/>size_t<sp/>ViewDimension##R&lt;V,<sp/>RD&gt;::N##R;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;unsigned<sp/>RD&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/>struct<sp/>ViewDimension##R&lt;0u,<sp/>RD&gt;<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>size_t<sp/>ArgN##R<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>std::conditional&lt;(RD<sp/>&lt;<sp/>3),<sp/>size_t,<sp/>unsigned&gt;::type<sp/>N##R;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ViewDimension##R()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>default;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ViewDimension##R(const<sp/>ViewDimension##R&amp;)<sp/>=<sp/>default;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ViewDimension##R&amp;<sp/>operator=(const<sp/>ViewDimension##R&amp;)<sp/>=<sp/>default;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>explicit<sp/>ViewDimension##R(size_t<sp/>V)<sp/>:<sp/>N##R(V)<sp/>{}<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;unsigned<sp/>RD&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/>constexpr<sp/>size_t<sp/>ViewDimension##R&lt;0u,<sp/>RD&gt;::ArgN##R;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="struct_kokkos_1_1_impl_1_1_view_dimension0" refkind="compound"><highlight class="normal">KOKKOS_IMPL_VIEW_DIMENSION(0)</highlight></codeline>
<codeline lineno="124" refid="struct_kokkos_1_1_impl_1_1_view_dimension1" refkind="compound"><highlight class="normal">KOKKOS_IMPL_VIEW_DIMENSION(1)</highlight></codeline>
<codeline lineno="125" refid="struct_kokkos_1_1_impl_1_1_view_dimension2" refkind="compound"><highlight class="normal">KOKKOS_IMPL_VIEW_DIMENSION(2)</highlight></codeline>
<codeline lineno="126" refid="struct_kokkos_1_1_impl_1_1_view_dimension3" refkind="compound"><highlight class="normal">KOKKOS_IMPL_VIEW_DIMENSION(3)</highlight></codeline>
<codeline lineno="127" refid="struct_kokkos_1_1_impl_1_1_view_dimension4" refkind="compound"><highlight class="normal">KOKKOS_IMPL_VIEW_DIMENSION(4)</highlight></codeline>
<codeline lineno="128" refid="struct_kokkos_1_1_impl_1_1_view_dimension5" refkind="compound"><highlight class="normal">KOKKOS_IMPL_VIEW_DIMENSION(5)</highlight></codeline>
<codeline lineno="129" refid="struct_kokkos_1_1_impl_1_1_view_dimension6" refkind="compound"><highlight class="normal">KOKKOS_IMPL_VIEW_DIMENSION(6)</highlight></codeline>
<codeline lineno="130" refid="struct_kokkos_1_1_impl_1_1_view_dimension7" refkind="compound"><highlight class="normal">KOKKOS_IMPL_VIEW_DIMENSION(7)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>KOKKOS_IMPL_VIEW_DIMENSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MSVC<sp/>does<sp/>not<sp/>do<sp/>empty<sp/>base<sp/>class<sp/>optimization<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Per<sp/>standard<sp/>it<sp/>is<sp/>required<sp/>for<sp/>standard<sp/>layout<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Vals&gt;</highlight></codeline>
<codeline lineno="137" refid="struct_kokkos_1_1_impl_1_1_view_dimension" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">KOKKOS_IMPL_ENFORCE_EMPTY_BASE_OPTIMIZATION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension0" kindref="compound">ViewDimension0</ref>&lt;variadic_size_t&lt;0u,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank_dynamic&lt;Vals...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension1" kindref="compound">ViewDimension1</ref>&lt;variadic_size_t&lt;1u,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank_dynamic&lt;Vals...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension2" kindref="compound">ViewDimension2</ref>&lt;variadic_size_t&lt;2u,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank_dynamic&lt;Vals...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension3" kindref="compound">ViewDimension3</ref>&lt;variadic_size_t&lt;3u,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank_dynamic&lt;Vals...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension4" kindref="compound">ViewDimension4</ref>&lt;variadic_size_t&lt;4u,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank_dynamic&lt;Vals...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension5" kindref="compound">ViewDimension5</ref>&lt;variadic_size_t&lt;5u,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank_dynamic&lt;Vals...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension6" kindref="compound">ViewDimension6</ref>&lt;variadic_size_t&lt;6u,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank_dynamic&lt;Vals...&gt;::value&gt;,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension7" kindref="compound">ViewDimension7</ref>&lt;variadic_size_t&lt;7u,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank_dynamic&lt;Vals...&gt;::value&gt;<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension0" kindref="compound">D0</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension0" kindref="compound">ViewDimension0</ref>&lt;<ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;0U,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>&lt;Vals...&gt;::value&gt;;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension1" kindref="compound">D1</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension1" kindref="compound">ViewDimension1</ref>&lt;<ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;1U,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>&lt;Vals...&gt;::value&gt;;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension2" kindref="compound">D2</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension2" kindref="compound">ViewDimension2</ref>&lt;<ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;2U,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>&lt;Vals...&gt;::value&gt;;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension3" kindref="compound">D3</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension3" kindref="compound">ViewDimension3</ref>&lt;<ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;3U,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>&lt;Vals...&gt;::value&gt;;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension4" kindref="compound">D4</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension4" kindref="compound">ViewDimension4</ref>&lt;<ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;4U,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>&lt;Vals...&gt;::value&gt;;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension5" kindref="compound">D5</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension5" kindref="compound">ViewDimension5</ref>&lt;<ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;5U,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>&lt;Vals...&gt;::value&gt;;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension6" kindref="compound">D6</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension6" kindref="compound">ViewDimension6</ref>&lt;<ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;6U,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>&lt;Vals...&gt;::value&gt;;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension7" kindref="compound">D7</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension7" kindref="compound">ViewDimension7</ref>&lt;<ref refid="struct_kokkos_1_1_impl_1_1variadic__size__t" kindref="compound">variadic_size_t</ref>&lt;7U,<sp/>Vals...&gt;::value,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref>&lt;Vals...&gt;::value&gt;;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D0::ArgN0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D1::ArgN1;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D2::ArgN2;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D3::ArgN3;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D4::ArgN4;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D5::ArgN5;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D6::ArgN6;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D7::ArgN7;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D0::N0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D1::N1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D2::N2;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D3::N3;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D4::N4;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D5::N5;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D6::N6;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">D7::N7;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>{<sp/>rank<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Vals)<sp/>};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>{<sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">rank_dynamic</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1rank__dynamic" kindref="compound">Impl::rank_dynamic</ref>&lt;Vals...&gt;::value<sp/>};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n3,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n4,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n5,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n6,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n7)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension0" kindref="compound">D0</ref>(n0),<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension1" kindref="compound">D1</ref>(n1),<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension2" kindref="compound">D2</ref>(n2),<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension3" kindref="compound">D3</ref>(n3),<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension4" kindref="compound">D4</ref>(n4),<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension5" kindref="compound">D5</ref>(n5),<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension6" kindref="compound">D6</ref>(n6),<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension7" kindref="compound">D7</ref>(n7)<sp/>{}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>extent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>r)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>N0</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>N1</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>2</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>N2</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>3</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>N3</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>4</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>N4</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>5</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>N5</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>6</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>N6</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>7<sp/>?<sp/>N7</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0)))))));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>static_extent(</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>r)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ArgN0</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ArgN1</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>2</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ArgN2</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>3</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ArgN3</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>4</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ArgN4</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>5</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ArgN5</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>6</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ArgN6</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>7<sp/>?<sp/>ArgN7</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0)))))));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="242" refid="struct_kokkos_1_1_impl_1_1_view_dimension_1_1prepend" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_1_1prepend" kindref="compound">prepend</ref><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">type</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;N,<sp/>Vals...&gt;;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="247" refid="struct_kokkos_1_1_impl_1_1_view_dimension_1_1append" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_1_1append" kindref="compound">append</ref><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">type</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;Vals...,<sp/>N&gt;;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="250"><highlight class="normal">};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="253" refid="struct_kokkos_1_1_impl_1_1_view_dimension_join" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_join" kindref="compound">ViewDimensionJoin</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>A,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>B&gt;</highlight></codeline>
<codeline lineno="256" refid="struct_kokkos_1_1_impl_1_1_view_dimension_join_3_01_view_dimension_3_01_a_8_8_8_01_4_00_01_view_a6ffa2c5a9af5a54e654cede11e223cf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_join" kindref="compound">ViewDimensionJoin</ref>&lt;<ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;A...&gt;,<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;B...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">type</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;A...,<sp/>B...&gt;;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DstDim,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcDim&gt;</highlight></codeline>
<codeline lineno="263" refid="struct_kokkos_1_1_impl_1_1_view_dimension_assignable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_assignable" kindref="compound">ViewDimensionAssignable</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DstArgs,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>SrcArgs&gt;</highlight></codeline>
<codeline lineno="266" refid="struct_kokkos_1_1_impl_1_1_view_dimension_assignable_3_01_view_dimension_3_01_dst_args_8_8_8_01_32e5eb95062827502c6fee154e395435" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_assignable" kindref="compound">ViewDimensionAssignable</ref>&lt;<ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;DstArgs...&gt;,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;SrcArgs...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">dst</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;DstArgs...&gt;;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">src</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;SrcArgs...&gt;;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>unsigned(dst::rank)<sp/>==<sp/>unsigned(src::rank)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compile<sp/>time<sp/>check<sp/>that<sp/>potential<sp/>static<sp/>dimensions<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1<sp/>&gt;<sp/>dst::rank_dynamic<sp/>&amp;&amp;<sp/>1<sp/>&gt;<sp/>src::rank_dynamic)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(dst::ArgN0)<sp/>==<sp/>size_t(src::ArgN0))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((2<sp/>&gt;<sp/>dst::rank_dynamic<sp/>&amp;&amp;<sp/>2<sp/>&gt;<sp/>src::rank_dynamic)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(dst::ArgN1)<sp/>==<sp/>size_t(src::ArgN1))</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((3<sp/>&gt;<sp/>dst::rank_dynamic<sp/>&amp;&amp;<sp/>3<sp/>&gt;<sp/>src::rank_dynamic)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(dst::ArgN2)<sp/>==<sp/>size_t(src::ArgN2))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((4<sp/>&gt;<sp/>dst::rank_dynamic<sp/>&amp;&amp;<sp/>4<sp/>&gt;<sp/>src::rank_dynamic)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(dst::ArgN3)<sp/>==<sp/>size_t(src::ArgN3))</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((5<sp/>&gt;<sp/>dst::rank_dynamic<sp/>&amp;&amp;<sp/>5<sp/>&gt;<sp/>src::rank_dynamic)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(dst::ArgN4)<sp/>==<sp/>size_t(src::ArgN4))</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((6<sp/>&gt;<sp/>dst::rank_dynamic<sp/>&amp;&amp;<sp/>6<sp/>&gt;<sp/>src::rank_dynamic)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(dst::ArgN5)<sp/>==<sp/>size_t(src::ArgN5))</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((7<sp/>&gt;<sp/>dst::rank_dynamic<sp/>&amp;&amp;<sp/>7<sp/>&gt;<sp/>src::rank_dynamic)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(dst::ArgN6)<sp/>==<sp/>size_t(src::ArgN6))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((8<sp/>&gt;<sp/>dst::rank_dynamic<sp/>&amp;&amp;<sp/>8<sp/>&gt;<sp/>src::rank_dynamic)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(dst::ArgN7)<sp/>==<sp/>size_t(src::ArgN7))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Kokkos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Kokkos<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="struct_kokkos_1_1_impl_1_1_a_l_l__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_a_l_l__t" kindref="compound">ALL_t</ref><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_a_l_l__t" kindref="compound">ALL_t</ref>&amp;<sp/>operator()()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_a_l_l__t" kindref="compound">ALL_t</ref>&amp;)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal">};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Kokkos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Kokkos<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="326" refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" kindref="compound">is_integral_extent_type</ref><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/>std::is_same&lt;T,<sp/>Kokkos::Impl::ALL_t&gt;::value<sp/>?<sp/>1<sp/>:<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="328"><highlight class="normal">};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="331" refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type_3_01std_1_1pair_3_01i_type_00_01i_type_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" kindref="compound">is_integral_extent_type</ref>&lt;std::<ref refid="struct_kokkos_1_1pair" kindref="compound">pair</ref>&lt;iType,<sp/>iType&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/>std::is_integral&lt;iType&gt;::value<sp/>?<sp/>1<sp/>:<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="333"><highlight class="normal">};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="336" refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type_3_01_kokkos_1_1pair_3_01i_type_00_01i_type_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" kindref="compound">is_integral_extent_type</ref>&lt;Kokkos::<ref refid="struct_kokkos_1_1pair" kindref="compound">pair</ref>&lt;iType,<sp/>iType&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/>std::is_integral&lt;iType&gt;::value<sp/>?<sp/>1<sp/>:<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="338"><highlight class="normal">};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assuming<sp/>&apos;2<sp/>==<sp/>initializer_list&lt;iType&gt;::size()&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="342" refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type_3_01std_1_1initializer__list_3_01i_type_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" kindref="compound">is_integral_extent_type</ref>&lt;std::initializer_list&lt;iType&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/>std::is_integral&lt;iType&gt;::value<sp/>?<sp/>1<sp/>:<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="344"><highlight class="normal">};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="347" refid="struct_kokkos_1_1_impl_1_1is__integral__extent" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent</ref><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get_type<sp/>is<sp/>void<sp/>when<sp/>sizeof...(Args)<sp/>&lt;=<sp/>I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_cv&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_reference&lt;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1get__type" kindref="compound">Kokkos::Impl::get_type</ref>&lt;I,<sp/>Args...&gt;::type&gt;::type&gt;::type;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" kindref="compound">is_integral_extent_type&lt;type&gt;::value</ref><sp/>};</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(value<sp/>||<sp/>std::is_integral&lt;type&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;type,<sp/>void&gt;::value,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;subview<sp/>argument<sp/>must<sp/>be<sp/>either<sp/>integral<sp/>or<sp/>integral<sp/>extent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">};</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rules<sp/>for<sp/>subview<sp/>arguments<sp/>and<sp/>layouts<sp/>matching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LayoutDest,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LayoutSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankSrc,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurrentArg,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>SubViewArgs&gt;</highlight></codeline>
<codeline lineno="363" refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rules<sp/>which<sp/>allow<sp/>LayoutLeft<sp/>to<sp/>LayoutLeft<sp/>assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurrentArg,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Arg,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>SubViewArgs&gt;</highlight></codeline>
<codeline lineno="369" refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_left_00_01_kok49eec8f4573bacab246b5ca4745ad0a6" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt;Kokkos::<ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref>,<sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RankDest,<sp/>RankSrc,<sp/>CurrentArg,<sp/>Arg,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SubViewArgs...&gt;<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(((CurrentArg<sp/>==<sp/>RankDest<sp/>-<sp/>1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" kindref="compound">Kokkos::Impl::is_integral_extent_type&lt;Arg&gt;::value</ref>))<sp/>||</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CurrentArg<sp/>&gt;=<sp/>RankDest)<sp/>&amp;&amp;<sp/>(std::is_integral&lt;Arg&gt;::value))<sp/>||</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CurrentArg<sp/>&lt;<sp/>RankDest)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::is_same&lt;Arg,<sp/>Kokkos::Impl::ALL_t&gt;::value))<sp/>||</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CurrentArg<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" kindref="compound">Kokkos::Impl::is_integral_extent_type&lt;Arg&gt;::value</ref>)))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt;<ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>,<sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RankDest,<sp/>RankSrc,<sp/>CurrentArg<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SubViewArgs...&gt;::value)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="384"><highlight class="normal">};</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurrentArg,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Arg&gt;</highlight></codeline>
<codeline lineno="387" refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_left_00_01_kokd72aceb560928d98b6ef0ee24c012980" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt;Kokkos::<ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref>,<sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RankDest,<sp/>RankSrc,<sp/>CurrentArg,<sp/>Arg&gt;<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((CurrentArg<sp/>==<sp/>RankDest<sp/>-<sp/>1)<sp/>||<sp/>(std::is_integral&lt;Arg&gt;::value))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CurrentArg<sp/>==<sp/>RankSrc<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="393"><highlight class="normal">};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rules<sp/>which<sp/>allow<sp/>LayoutRight<sp/>to<sp/>LayoutRight<sp/>assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurrentArg,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Arg,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>SubViewArgs&gt;</highlight></codeline>
<codeline lineno="399" refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_right_00_01_ko09d0ad2cf16832917458eda4edaa6778" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt;Kokkos::<ref refid="struct_kokkos_1_1_layout_right" kindref="compound">LayoutRight</ref>,<sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RankDest,<sp/>RankSrc,<sp/>CurrentArg,<sp/>Arg,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SubViewArgs...&gt;<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(((CurrentArg<sp/>==<sp/>RankSrc<sp/>-<sp/>RankDest)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent__type" kindref="compound">Kokkos::Impl::is_integral_extent_type&lt;Arg&gt;::value</ref>))<sp/>||</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CurrentArg<sp/>&lt;<sp/>RankSrc<sp/>-<sp/>RankDest)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::is_integral&lt;Arg&gt;::value))<sp/>||</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CurrentArg<sp/>&gt;=<sp/>RankSrc<sp/>-<sp/>RankDest)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::is_same&lt;Arg,<sp/>Kokkos::Impl::ALL_t&gt;::value)))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt;<ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>,<sp/>RankDest,<sp/>RankSrc,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentArg<sp/>+<sp/>1,<sp/>SubViewArgs...&gt;::value)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="413"><highlight class="normal">};</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurrentArg,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Arg&gt;</highlight></codeline>
<codeline lineno="416" refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_right_00_01_ko25cf0c3a14adc77c603e948353fabe75" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt;Kokkos::<ref refid="struct_kokkos_1_1_layout_right" kindref="compound">LayoutRight</ref>,<sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RankDest,<sp/>RankSrc,<sp/>CurrentArg,<sp/>Arg&gt;<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((CurrentArg<sp/>==<sp/>RankSrc<sp/>-<sp/>1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::is_same&lt;Arg,<sp/>Kokkos::Impl::ALL_t&gt;::value))</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="422"><highlight class="normal">};</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rules<sp/>which<sp/>allow<sp/>assignment<sp/>to<sp/>LayoutStride</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurrentArg,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>SubViewArgs&gt;</highlight></codeline>
<codeline lineno="427" refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_stride_00_01_kfb2ceff0b353233c11ac93b3d40e7b2a" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt;Kokkos::<ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">LayoutStride</ref>,<sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RankDest,<sp/>RankSrc,<sp/>CurrentArg,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SubViewArgs...&gt;<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="431"><highlight class="normal">};</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurrentArg,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>SubViewArgs&gt;</highlight></codeline>
<codeline lineno="434" refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_stride_00_01_k291f25c63ac60718e06b7732a839240e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt;Kokkos::<ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">LayoutStride</ref>,<sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RankDest,<sp/>RankSrc,<sp/>CurrentArg,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SubViewArgs...&gt;<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="438"><highlight class="normal">};</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RankSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CurrentArg,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>SubViewArgs&gt;</highlight></codeline>
<codeline lineno="441" refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time_3_01_kokkos_1_1_layout_stride_00_01_k881c1058f0424e1f0d1ce0d844ea37c7" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt;Kokkos::<ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">LayoutStride</ref>,<sp/><ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref>,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RankDest,<sp/>RankSrc,<sp/>CurrentArg,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SubViewArgs...&gt;<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>enum<sp/>:<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>DomainRank,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>RangeRank&gt;</highlight></codeline>
<codeline lineno="448" refid="struct_kokkos_1_1_impl_1_1_subview_extents" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_subview_extents" kindref="compound">SubviewExtents</ref><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cannot<sp/>declare<sp/>zero-length<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;+&apos;<sp/>is<sp/>used<sp/>to<sp/>silence<sp/>GCC<sp/>7.2.0<sp/>-Wduplicated-branches<sp/>warning<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>RangeRank=1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>InternalRangeRank<sp/>=<sp/>RangeRank<sp/>?<sp/>RangeRank<sp/>:<sp/>+1u<sp/>};</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_begin[DomainRank];</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_length[InternalRangeRank];</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>m_index[InternalRangeRank];</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs&gt;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>domain_rank,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_rank,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val,<sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>v<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>m_begin[domain_rank]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set(domain_rank<sp/>+<sp/>1,<sp/>range_rank,<sp/>dim,<sp/>args...)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(KOKKOS_ENABLE_DEBUG_BOUNDS_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(v<sp/>&lt;<sp/>dim.extent(domain_rank))</highlight></codeline>
<codeline lineno="477"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ALL_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>domain_rank,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_rank,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_a_l_l__t" kindref="compound">Kokkos::Impl::ALL_t</ref>,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>m_begin[domain_rank]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>m_length[range_rank]<sp/>=<sp/>dim.extent(domain_rank);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>m_index[range_rank]<sp/><sp/>=<sp/>domain_rank;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set(domain_rank<sp/>+<sp/>1,<sp/>range_rank<sp/>+<sp/>1,<sp/>dim,<sp/>args...);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::pair<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>domain_rank,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_rank,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;T,<sp/>T&gt;&amp;<sp/>val,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>b<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.first);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>e<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.second);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>m_begin[domain_rank]<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>m_length[range_rank]<sp/>=<sp/>e<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>m_index[range_rank]<sp/><sp/>=<sp/>domain_rank;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set(domain_rank<sp/>+<sp/>1,<sp/>range_rank<sp/>+<sp/>1,<sp/>dim,<sp/>args...)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(KOKKOS_ENABLE_DEBUG_BOUNDS_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(e<sp/>&lt;=<sp/>b<sp/>+<sp/>dim.extent(domain_rank))</highlight></codeline>
<codeline lineno="512"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Kokkos::pair<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>domain_rank,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_rank,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1pair" kindref="compound">Kokkos::pair&lt;T, T&gt;</ref>&amp;<sp/>val,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>b<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.first);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>e<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.second);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>m_begin[domain_rank]<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>m_length[range_rank]<sp/>=<sp/>e<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>m_index[range_rank]<sp/><sp/>=<sp/>domain_rank;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set(domain_rank<sp/>+<sp/>1,<sp/>range_rank<sp/>+<sp/>1,<sp/>dim,<sp/>args...)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(KOKKOS_ENABLE_DEBUG_BOUNDS_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(e<sp/>&lt;=<sp/>b<sp/>+<sp/>dim.extent(domain_rank))</highlight></codeline>
<codeline lineno="533"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{<sp/>begin<sp/>,<sp/>end<sp/>}<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>domain_rank,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_rank,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;T&gt;&amp;<sp/>val,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>b<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.begin()[0]);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>e<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.begin()[1]);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>m_begin[domain_rank]<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>m_length[range_rank]<sp/>=<sp/>e<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>m_index[range_rank]<sp/><sp/>=<sp/>domain_rank;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set(domain_rank<sp/>+<sp/>1,<sp/>range_rank<sp/>+<sp/>1,<sp/>dim,<sp/>args...)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(KOKKOS_ENABLE_DEBUG_BOUNDS_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(val.size()<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>(e<sp/>&lt;=<sp/>b<sp/>+<sp/>dim.extent(domain_rank))</highlight></codeline>
<codeline lineno="554"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(KOKKOS_ENABLE_DEBUG_BOUNDS_CHECK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs&gt;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>domain_rank,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_rank,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::min(</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_len,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buf,<sp/>buf_len,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%lu<sp/>&lt;<sp/>%lu<sp/>%c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val),</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dim.extent(domain_rank)),</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>error(buf<sp/>+<sp/>n,<sp/>buf_len<sp/>-<sp/>n,<sp/>domain_rank<sp/>+<sp/>1,<sp/>range_rank,<sp/>dim,<sp/>args...);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::pair<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>domain_rank,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_rank,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_a_l_l__t" kindref="compound">Kokkos::Impl::ALL_t</ref>,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::min(buf_len,<sp/>snprintf(buf,<sp/>buf_len,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Kokkos::ALL<sp/>%c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>error(buf<sp/>+<sp/>n,<sp/>buf_len<sp/>-<sp/>n,<sp/>domain_rank<sp/>+<sp/>1,<sp/>range_rank<sp/>+<sp/>1,<sp/>dim,<sp/>args...);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::pair<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>domain_rank,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_rank,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;T,<sp/>T&gt;&amp;<sp/>val,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>d<sp/>&lt;=<sp/>e<sp/>-<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::min(</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_len,<sp/>snprintf(buf,<sp/>buf_len,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%lu<sp/>&lt;=<sp/>%lu<sp/>-<sp/>%lu<sp/>%c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dim.extent(domain_rank)),</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.second),</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.first),</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>error(buf<sp/>+<sp/>n,<sp/>buf_len<sp/>-<sp/>n,<sp/>domain_rank<sp/>+<sp/>1,<sp/>range_rank<sp/>+<sp/>1,<sp/>dim,<sp/>args...);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Kokkos::pair<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>domain_rank,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_rank,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1pair" kindref="compound">Kokkos::pair&lt;T, T&gt;</ref>&amp;<sp/>val,<sp/>Args...<sp/>args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>d<sp/>&lt;=<sp/>e<sp/>-<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::min(</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_len,<sp/>snprintf(buf,<sp/>buf_len,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%lu<sp/>&lt;=<sp/>%lu<sp/>-<sp/>%lu<sp/>%c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dim.extent(domain_rank)),</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.second),</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.first),</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>error(buf<sp/>+<sp/>n,<sp/>buf_len<sp/>-<sp/>n,<sp/>domain_rank<sp/>+<sp/>1,<sp/>range_rank<sp/>+<sp/>1,<sp/>dim,<sp/>args...);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{<sp/>begin<sp/>,<sp/>end<sp/>}<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>domain_rank,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_rank,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;T&gt;&amp;<sp/>val,<sp/>Args...<sp/>args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>d<sp/>&lt;=<sp/>e<sp/>-<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val.size()<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>std::min(buf_len,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buf,<sp/>buf_len,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%lu<sp/>&lt;=<sp/>%lu<sp/>-<sp/>%lu<sp/>%c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dim.extent(domain_rank)),</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.begin()[0]),</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.begin()[1]),</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>std::min(buf_len,<sp/>snprintf(buf,<sp/>buf_len,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{<sp/>...<sp/>}.size()<sp/>==<sp/>%u<sp/>%c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(val.size()),</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>error(buf<sp/>+<sp/>n,<sp/>buf_len<sp/>-<sp/>n,<sp/>domain_rank<sp/>+<sp/>1,<sp/>range_rank<sp/>+<sp/>1,<sp/>dim,<sp/>args...);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HOST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>LEN<sp/>=<sp/>1024<sp/>};</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[LEN];</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>snprintf(buffer,<sp/>LEN,<sp/></highlight><highlight class="stringliteral">&quot;Kokkos::subview<sp/>bounds<sp/>error<sp/>(&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>error(buffer<sp/>+<sp/>n,<sp/>LEN<sp/>-<sp/>n,<sp/>0,<sp/>0,<sp/>dim,<sp/>args...);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::Impl::throw_runtime_exception(std::string(buffer));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight><highlight class="stringliteral">&quot;Kokkos::subview<sp/>bounds<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>DimArgs,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_subview_extents" kindref="compound">SubviewExtents</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;DimArgs...&gt;</ref>&amp;<sp/>dim,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(DomainRank<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(DimArgs),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(DomainRank<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifies<sp/>that<sp/>all<sp/>arguments,<sp/>up<sp/>to<sp/>8,<sp/>are<sp/>integral<sp/>types,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integral<sp/>extents,<sp/>or<sp/>don&apos;t<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeRank<sp/>==<sp/>unsigned(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;0, Args...&gt;::value</ref>)<sp/>+</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;1, Args...&gt;::value</ref>)<sp/>+</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;2, Args...&gt;::value</ref>)<sp/>+</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;3, Args...&gt;::value</ref>)<sp/>+</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;4, Args...&gt;::value</ref>)<sp/>+</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;5, Args...&gt;::value</ref>)<sp/>+</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;6, Args...&gt;::value</ref>)<sp/>+</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;7, Args...&gt;::value</ref>),</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RangeRank<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_length[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_index[0]<sp/><sp/>=<sp/>~0u;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!set(0,<sp/>0,<sp/>dim,<sp/>args...))<sp/>error(dim,<sp/>args...);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>domain_offset(</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iType<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unsigned(i)<sp/>&lt;<sp/>DomainRank<sp/>?<sp/>m_begin[i]<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>range_extent(</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iType<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unsigned(i)<sp/>&lt;<sp/>InternalRangeRank<sp/>?<sp/>m_length[i]<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>range_index(</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iType<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unsigned(i)<sp/>&lt;<sp/>InternalRangeRank<sp/>?<sp/>m_index[i]<sp/>:<sp/>~0u;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal">};</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Kokkos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Kokkos<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Dim&gt;</highlight></codeline>
<codeline lineno="731" refid="struct_kokkos_1_1_impl_1_1_view_data_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_data_type" kindref="compound">ViewDataType</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="734" refid="struct_kokkos_1_1_impl_1_1_view_data_type_3_01_t_00_01_view_dimension_3_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_data_type" kindref="compound">ViewDataType</ref>&lt;T,<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="736"><highlight class="normal">};</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="739" refid="struct_kokkos_1_1_impl_1_1_view_data_type_3_01_t_00_01_view_dimension_3_010_00_01_args_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_data_type" kindref="compound">ViewDataType</ref>&lt;T,<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;0,<sp/>Args...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_data_type" kindref="compound">ViewDataType</ref>&lt;T*,<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;Args...&gt;&gt;::type;</highlight></codeline>
<codeline lineno="741"><highlight class="normal">};</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="744" refid="struct_kokkos_1_1_impl_1_1_view_data_type_3_01_t_00_01_view_dimension_3_01_n_00_01_args_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_data_type" kindref="compound">ViewDataType</ref>&lt;T,<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;N,<sp/>Args...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_data_type" kindref="compound">ViewDataType</ref>&lt;T,<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension</ref>&lt;Args...&gt;&gt;::type[N];</highlight></codeline>
<codeline lineno="746"><highlight class="normal">};</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="758" refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">ViewArrayAnalysis</ref><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">const_value_type<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::add_const&lt;T&gt;::type;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">non_const_value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_const&lt;T&gt;::type;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">static_dimension</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;&gt;</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">dynamic_dimension</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;&gt;</ref>;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">dimension</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">ViewDimension&lt;&gt;</ref>;</highlight></codeline>
<codeline lineno="765"><highlight class="normal">};</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="768" refid="struct_kokkos_1_1_impl_1_1_view_array_analysis_3_01_t_0f_n_0e_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">ViewArrayAnalysis</ref>&lt;T[N]&gt;<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">nested</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">ViewArrayAnalysis&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::value_type;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">const_value_type<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::const_value_type;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">non_const_value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::non_const_value_type;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">static_dimension<sp/>=</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::static_dimension::template<sp/>prepend&lt;N&gt;::type;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dynamic_dimension<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">nested::dynamic_dimension</ref>;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dimension<sp/>=</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_join" kindref="compound">ViewDimensionJoin&lt;dynamic_dimension, static_dimension&gt;::type</ref>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">};</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="787" refid="struct_kokkos_1_1_impl_1_1_view_array_analysis_3_01_t_0f_0e_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">ViewArrayAnalysis</ref>&lt;T[]&gt;<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">nested</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">ViewArrayAnalysis&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">nested_dimension<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">nested::dimension</ref>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::value_type;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">const_value_type<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::const_value_type;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">non_const_value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::non_const_value_type;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dynamic_dimension<sp/>=</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::dynamic_dimension::template<sp/>prepend&lt;0&gt;::type;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">static_dimension<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">nested::static_dimension</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dimension<sp/>=</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_join" kindref="compound">ViewDimensionJoin&lt;dynamic_dimension, static_dimension&gt;::type</ref>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal">};</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="807" refid="struct_kokkos_1_1_impl_1_1_view_array_analysis_3_01_t_01_5_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">ViewArrayAnalysis</ref>&lt;T*&gt;<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">nested</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">ViewArrayAnalysis&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::value_type;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">const_value_type<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::const_value_type;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">non_const_value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::non_const_value_type;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dynamic_dimension<sp/>=</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>nested::dynamic_dimension::template<sp/>prepend&lt;0&gt;::type;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">static_dimension<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">nested::static_dimension</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dimension<sp/>=</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_join" kindref="compound">ViewDimensionJoin&lt;dynamic_dimension, static_dimension&gt;::type</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal">};</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DataType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ArrayLayout,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="826" refid="struct_kokkos_1_1_impl_1_1_view_data_analysis" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_data_analysis" kindref="compound">ViewDataAnalysis</ref><sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">array_analysis</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_array_analysis" kindref="compound">ViewArrayAnalysis&lt;DataType&gt;</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ValueType<sp/>is<sp/>opportunity<sp/>for<sp/>partial<sp/>specialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>match<sp/>array<sp/>analysis<sp/>when<sp/>this<sp/>default<sp/>template<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;ValueType,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>array_analysis::non_const_value_type&gt;::value,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">specialize<sp/>=<sp/>void;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>specialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dimension<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension" kindref="compound">array_analysis::dimension</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>array_analysis::value_type;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">const_value_type<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>array_analysis::const_value_type;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">non_const_value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>array_analysis::non_const_value_type;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>analogous<sp/>multidimensional<sp/>array<sp/>specification<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_data_type" kindref="compound">ViewDataType&lt;value_type, dimension&gt;::type</ref>;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">const_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_data_type" kindref="compound">ViewDataType&lt;const_value_type, dimension&gt;::type</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">non_const_type<sp/>=</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_data_type" kindref="compound">ViewDataType&lt;non_const_value_type, dimension&gt;::type</ref>;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>&quot;flattened&quot;<sp/>multidimensional<sp/>array<sp/>specification<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">scalar_array_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">const_scalar_array_type<sp/><sp/><sp/><sp/><sp/>=<sp/>const_type;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">non_const_scalar_array_type<sp/>=<sp/>non_const_type;</highlight></codeline>
<codeline lineno="855"><highlight class="normal">};</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Kokkos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Kokkos<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Dimension,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Layout,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="867" refid="struct_kokkos_1_1_impl_1_1_view_offset" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_mapping_plugin<sp/>=<sp/>std::false_type;</highlight></codeline>
<codeline lineno="869"><highlight class="normal">};</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LayoutLeft<sp/>AND<sp/>(<sp/>1<sp/>&gt;=<sp/>rank<sp/>OR<sp/>0<sp/>==<sp/>rank_dynamic<sp/>)<sp/>:<sp/>no<sp/>padding<sp/>/<sp/>striding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="874" refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamef5a9a83dcd8c8ce23e7874c5bea845af" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>Dimension,<sp/>Kokkos::<ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref>,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;(1<sp/>&gt;=<sp/>Dimension::rank<sp/>||</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>==<sp/>Dimension::rank_dynamic)&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_mapping_plugin<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_regular<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">size_type<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>size_t;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dimension_type<sp/>=<sp/>Dimension;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">array_layout</ref><sp/><sp/><sp/>=<sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>dimension_type<sp/>m_dim;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0&gt;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1&gt;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>+<sp/>m_dim.N0<sp/>*<sp/>i1;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>+<sp/>m_dim.N0<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>i2);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3&gt;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>+<sp/>m_dim.N0<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>i3));</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4&gt;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>+</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N0<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>i4)));</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5&gt;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,<sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,<sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,<sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,<sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i5)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>+</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N0<sp/>*</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i1<sp/>+</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N1<sp/>*</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>(i4<sp/>+<sp/>m_dim.N4<sp/>*<sp/>i5))));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I6&gt;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,<sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,<sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,<sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,<sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i5,<sp/>I6<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i6)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>+</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N0<sp/>*</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i4<sp/>+<sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i5<sp/>+<sp/>m_dim.N5<sp/>*<sp/>i6)))));</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I7&gt;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,<sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,<sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,<sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,<sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i5,<sp/>I6<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i6,<sp/>I7<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i7)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>+</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N0<sp/>*</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i1<sp/>+</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N1<sp/>*</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i4<sp/>+<sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i5<sp/>+<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i6<sp/>+<sp/>m_dim.N6<sp/>*</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i7))))));</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">array_layout</ref><sp/>layout()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">array_layout</ref>(m_dim.N0,<sp/>m_dim.N1,<sp/>m_dim.N2,<sp/>m_dim.N3,<sp/>m_dim.N4,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N5,<sp/>m_dim.N6,<sp/>m_dim.N7);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_0()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_7()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cardinality<sp/>of<sp/>the<sp/>domain<sp/>index<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Span<sp/>of<sp/>the<sp/>range<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>span()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>span_is_contiguous()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Strides<sp/>of<sp/>dimensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_0()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_7()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stride<sp/>with<sp/>[<sp/>rank<sp/>]<sp/>value<sp/>is<sp/>the<sp/>total<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stride(iType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[1]<sp/>=<sp/>m_dim.N0;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[2]<sp/>=<sp/>s[1]<sp/>*<sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(2<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[3]<sp/>=<sp/>s[2]<sp/>*<sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(3<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[4]<sp/>=<sp/>s[3]<sp/>*<sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(4<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[5]<sp/>=<sp/>s[4]<sp/>*<sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(5<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[6]<sp/>=<sp/>s[5]<sp/>*<sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(6<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[7]<sp/>=<sp/>s[6]<sp/>*<sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(7<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[8]<sp/>=<sp/>s[7]<sp/>*<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MSVC<sp/>(16.5.5)<sp/>+<sp/>CUDA<sp/>(10.2)<sp/>did<sp/>not<sp/>generate<sp/>the<sp/>defaulted<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>and<sp/>errors<sp/>out<sp/>during<sp/>compilation.<sp/>Same<sp/>for<sp/>the<sp/>other<sp/>places<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>changed<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_IMPL_WINDOWS_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>()<sp/>:<sp/>m_dim(dimension_type())<sp/>{}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>src)<sp/>{<sp/>m_dim<sp/>=<sp/>src.m_dim;<sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dim<sp/>=<sp/>src.m_dim;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>TrivialScalarSize&gt;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::integral_constant&lt;unsigned,<sp/>TrivialScalarSize&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_layout)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(arg_layout.dimension[0],<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0)<sp/>{}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, Kokkos::LayoutLeft, void&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>rhs.m_dim.N1,<sp/>rhs.m_dim.N2,<sp/>rhs.m_dim.N3,</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.m_dim.N4,<sp/>rhs.m_dim.N5,<sp/>rhs.m_dim.N6,<sp/>rhs.m_dim.N7)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(int(DimRHS::rank)<sp/>==<sp/>int(dimension_type::rank),</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ViewOffset<sp/>assignment<sp/>requires<sp/>equal<sp/>rank&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>requires<sp/>equal<sp/>static<sp/>dimensions<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, Kokkos::LayoutRight, void&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">((DimRHS::rank<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>dimension_type::rank<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DimRHS::rank<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>dimension_type::rank<sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_type::rank_dynamic<sp/>==<sp/>1),</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ViewOffset<sp/>LayoutLeft<sp/>and<sp/>LayoutRight<sp/>are<sp/>only<sp/>compatible<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;when<sp/>rank<sp/>&lt;=<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, Kokkos::LayoutStride, void&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.m_stride.S0<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Kokkos::Impl::ViewOffset<sp/>assignment<sp/>of<sp/>LayoutLeft<sp/>from<sp/>LayoutStride<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>requires<sp/>stride<sp/>==<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subview<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, Kokkos::LayoutLeft, void&gt;</ref>&amp;,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_subview_extents" kindref="compound">SubviewExtents&lt;DimRHS::rank, dimension_type::rank&gt;</ref>&amp;<sp/>sub)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(sub.range_extent(0),<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">((0<sp/>==<sp/>dimension_type::rank_dynamic)<sp/>||</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>==<sp/>dimension_type::rank<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>==<sp/>dimension_type::rank_dynamic<sp/>&amp;&amp;<sp/>1<sp/>&lt;=<sp/>DimRHS::rank),</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ViewOffset<sp/>subview<sp/>construction<sp/>requires<sp/>compatible<sp/>rank&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LayoutLeft<sp/>AND<sp/>(<sp/>1<sp/>&lt;<sp/>rank<sp/>AND<sp/>0<sp/>&lt;<sp/>rank_dynamic<sp/>)<sp/>:<sp/>has<sp/>padding<sp/>/<sp/>striding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="1156" refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>Dimension,<sp/>Kokkos::<ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref>,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;(1<sp/>&lt;<sp/>Dimension::rank<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>&lt;<sp/>Dimension::rank_dynamic)&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>using<sp/>is_mapping_plugin<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>using<sp/>is_regular<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/>using<sp/>size_type<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>size_t;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>using<sp/>dimension_type<sp/>=<sp/>Dimension;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>using<sp/>array_layout<sp/><sp/><sp/>=<sp/>Kokkos::LayoutLeft;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>dimension_type<sp/>m_dim;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/>size_type<sp/>m_stride;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0&gt;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(I0<sp/>const&amp;<sp/>i0)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i0;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1&gt;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(I0<sp/>const&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/>const&amp;<sp/>i1)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i0<sp/>+<sp/>m_stride<sp/>*<sp/>i1;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2&gt;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(I0<sp/>const&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/>const&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/>const&amp;<sp/>i2)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i0<sp/>+<sp/>m_stride<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>i2);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2,<sp/>typename<sp/>I3&gt;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(I0<sp/>const&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/>const&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/>const&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I3<sp/>const&amp;<sp/>i3)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i0<sp/>+<sp/>m_stride<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>i3));</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2,<sp/>typename<sp/>I3,<sp/>typename<sp/>I4&gt;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(I0<sp/>const&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/>const&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/>const&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I3<sp/>const&amp;<sp/>i3,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I4<sp/>const&amp;<sp/>i4)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i0<sp/>+</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>i4)));</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2,<sp/>typename<sp/>I3,<sp/>typename<sp/>I4,</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>I5&gt;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/>const&amp;<sp/>i0,<sp/>I1<sp/>const&amp;<sp/>i1,<sp/>I2<sp/>const&amp;<sp/>i2,<sp/>I3<sp/>const&amp;<sp/>i3,<sp/>I4<sp/>const&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/>const&amp;<sp/>i5)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i0<sp/>+</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride<sp/>*</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i1<sp/>+</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N1<sp/>*</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>(i4<sp/>+<sp/>m_dim.N4<sp/>*<sp/>i5))));</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2,<sp/>typename<sp/>I3,<sp/>typename<sp/>I4,</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>I5,<sp/>typename<sp/>I6&gt;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/>const&amp;<sp/>i0,<sp/>I1<sp/>const&amp;<sp/>i1,<sp/>I2<sp/>const&amp;<sp/>i2,<sp/>I3<sp/>const&amp;<sp/>i3,<sp/>I4<sp/>const&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/>const&amp;<sp/>i5,<sp/>I6<sp/>const&amp;<sp/>i6)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i0<sp/>+</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride<sp/>*</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i4<sp/>+<sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i5<sp/>+<sp/>m_dim.N5<sp/>*<sp/>i6)))));</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2,<sp/>typename<sp/>I3,<sp/>typename<sp/>I4,</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>I5,<sp/>typename<sp/>I6,<sp/>typename<sp/>I7&gt;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/>const&amp;<sp/>i0,<sp/>I1<sp/>const&amp;<sp/>i1,<sp/>I2<sp/>const&amp;<sp/>i2,<sp/>I3<sp/>const&amp;<sp/>i3,<sp/>I4<sp/>const&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/>const&amp;<sp/>i5,<sp/>I6<sp/>const&amp;<sp/>i6,<sp/>I7<sp/>const&amp;<sp/>i7)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i0<sp/>+</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride<sp/>*</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i1<sp/>+</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N1<sp/>*</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i4<sp/>+<sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i5<sp/>+<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i6<sp/>+<sp/>m_dim.N6<sp/>*</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i7))))));</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>constexpr<sp/>array_layout<sp/>layout()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>array_layout(m_dim.N0,<sp/>m_dim.N1,<sp/>m_dim.N2,<sp/>m_dim.N3,<sp/>m_dim.N4,</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N5,<sp/>m_dim.N6,<sp/>m_dim.N7);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_0()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N0;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_1()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_2()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_3()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_4()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_5()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_6()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_7()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cardinality<sp/>of<sp/>the<sp/>domain<sp/>index<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/>constexpr<sp/>size_type<sp/>size()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Span<sp/>of<sp/>the<sp/>range<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/>constexpr<sp/>size_type<sp/>span()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(m_dim.N0<sp/>&gt;<sp/>size_type(0)<sp/>?<sp/>m_stride<sp/>:<sp/>size_type(0))<sp/>*<sp/>m_dim.N1<sp/>*</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>bool<sp/>span_is_contiguous()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride<sp/>==<sp/>m_dim.N0;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Strides<sp/>of<sp/>dimensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_0()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride<sp/>*<sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_7()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stride<sp/>with<sp/>[<sp/>rank<sp/>]<sp/>value<sp/>is<sp/>the<sp/>total<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stride(iType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[1]<sp/>=<sp/>m_stride;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[2]<sp/>=<sp/>s[1]<sp/>*<sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(2<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[3]<sp/>=<sp/>s[2]<sp/>*<sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(3<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[4]<sp/>=<sp/>s[3]<sp/>*<sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(4<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[5]<sp/>=<sp/>s[4]<sp/>*<sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(5<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[6]<sp/>=<sp/>s[5]<sp/>*<sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(6<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[7]<sp/>=<sp/>s[6]<sp/>*<sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(7<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[8]<sp/>=<sp/>s[7]<sp/>*<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>TrivialScalarSize&gt;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Padding<sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>div<sp/>=<sp/>TrivialScalarSize<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Kokkos::Impl::MEMORY_ALIGNMENT<sp/>/</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TrivialScalarSize<sp/>?<sp/>TrivialScalarSize<sp/>:<sp/>1)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mod<sp/>=<sp/>TrivialScalarSize<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Kokkos::Impl::MEMORY_ALIGNMENT<sp/>%</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TrivialScalarSize<sp/>?<sp/>TrivialScalarSize<sp/>:<sp/>1)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>memory<sp/>alignment<sp/>is<sp/>a<sp/>multiple<sp/>of<sp/>the<sp/>trivial<sp/>scalar<sp/>size<sp/>then<sp/>attempt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>align.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>align<sp/>=<sp/>0<sp/>!=<sp/>TrivialScalarSize<sp/>&amp;&amp;<sp/>0<sp/>==<sp/>mod<sp/>?<sp/>div<sp/>:<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>div_ok<sp/>=<sp/>(div<sp/>!=<sp/>0)<sp/>?<sp/>div<sp/>:<sp/>1</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>valid<sp/>modulo<sp/>zero<sp/>in<sp/>constexpr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((align<sp/>!=<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Kokkos::Impl::MEMORY_ALIGNMENT_THRESHOLD)<sp/>*</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(align))<sp/>&lt;<sp/>N)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((N<sp/>%<sp/>div_ok)<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>N<sp/>+<sp/>align<sp/>-<sp/>(N<sp/>%<sp/>div_ok)</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>N;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MSVC<sp/>(16.5.5)<sp/>+<sp/>CUDA<sp/>(10.2)<sp/>did<sp/>not<sp/>generate<sp/>the<sp/>defaulted<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>and<sp/>errors<sp/>out<sp/>during<sp/>compilation.<sp/>Same<sp/>for<sp/>the<sp/>other<sp/>places<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>changed<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_IMPL_WINDOWS_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/>ViewOffset()<sp/>:<sp/>m_dim(dimension_type()),<sp/>m_stride(0)<sp/>{}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/>ViewOffset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dim<sp/><sp/><sp/><sp/>=<sp/>src.m_dim;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stride<sp/>=<sp/>src.m_stride;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/>ViewOffset&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dim<sp/><sp/><sp/><sp/>=<sp/>src.m_dim;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stride<sp/>=<sp/>src.m_stride;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>ViewOffset()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>ViewOffset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>ViewOffset&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>padding<sp/>for<sp/>trivial<sp/>scalar<sp/>types<sp/>with<sp/>non-zero<sp/>trivial<sp/>scalar<sp/>size</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>TrivialScalarSize&gt;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>ViewOffset(</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::integral_constant&lt;unsigned,<sp/>TrivialScalarSize&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_layout)</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(arg_layout.dimension[0],<sp/>arg_layout.dimension[1],</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_layout.dimension[2],<sp/>arg_layout.dimension[3],</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_layout.dimension[4],<sp/>arg_layout.dimension[5],</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_layout.dimension[6],<sp/>arg_layout.dimension[7]),</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(Padding&lt;TrivialScalarSize&gt;::stride(arg_layout.dimension[0]))<sp/>{}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>ViewOffset(</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&lt;DimRHS,<sp/>Kokkos::LayoutLeft,<sp/>void&gt;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>rhs.m_dim.N1,<sp/>rhs.m_dim.N2,<sp/>rhs.m_dim.N3,</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.m_dim.N4,<sp/>rhs.m_dim.N5,<sp/>rhs.m_dim.N6,<sp/>rhs.m_dim.N7),</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(rhs.stride_1())<sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(int(DimRHS::rank)<sp/>==<sp/>int(dimension_type::rank),</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ViewOffset<sp/>assignment<sp/>requires<sp/>equal<sp/>rank&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>requires<sp/>equal<sp/>static<sp/>dimensions<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>ViewOffset(</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&lt;DimRHS,<sp/>Kokkos::LayoutStride,<sp/>void&gt;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>rhs.m_dim.N1,<sp/>rhs.m_dim.N2,<sp/>rhs.m_dim.N3,</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.m_dim.N4,<sp/>rhs.m_dim.N5,<sp/>rhs.m_dim.N6,<sp/>rhs.m_dim.N7),</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(rhs.stride_1())<sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.m_stride.S0<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Kokkos::Impl::ViewOffset<sp/>assignment<sp/>of<sp/>LayoutLeft<sp/>from<sp/>LayoutStride<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;requires<sp/>stride<sp/>==<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subview<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>subview<sp/>must<sp/>be<sp/>2<sp/>==<sp/>rank<sp/>and<sp/>2<sp/>==<sp/>rank_dynamic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>due<sp/>to<sp/>only<sp/>having<sp/>stride<sp/>#0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>source<sp/>dimension<sp/>#0<sp/>must<sp/>be<sp/>non-zero<sp/>for<sp/>stride-one<sp/>leading<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>most<sp/>subsequent<sp/>dimension<sp/>can<sp/>be<sp/>non-zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>ViewOffset(</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&lt;DimRHS,<sp/>Kokkos::LayoutLeft,<sp/>void&gt;&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubviewExtents&lt;DimRHS::rank,<sp/>dimension_type::rank&gt;&amp;<sp/>sub)</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(sub.range_extent(0),<sp/>sub.range_extent(1),<sp/>sub.range_extent(2),</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub.range_extent(3),<sp/>sub.range_extent(4),<sp/>sub.range_extent(5),</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub.range_extent(6),<sp/>sub.range_extent(7)),</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>==<sp/>sub.range_index(1)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_1()</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(2<sp/>==<sp/>sub.range_index(1)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_2()</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(3<sp/>==<sp/>sub.range_index(1)</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_3()</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(4<sp/>==<sp/>sub.range_index(1)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_4()</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(5<sp/>==<sp/>sub.range_index(1)</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_5()</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(6<sp/>==<sp/>sub.range_index(1)</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_6()</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(7<sp/>==<sp/>sub.range_index(1)</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_7()</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0))))))))<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static_assert(<sp/>(<sp/>2<sp/>==<sp/>dimension_type::rank<sp/>)<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>2<sp/>==<sp/>dimension_type::rank_dynamic<sp/>)<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>2<sp/>&lt;=<sp/>DimRHS::rank<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>&quot;ViewOffset<sp/>subview<sp/>construction<sp/>requires<sp/>compatible<sp/>rank&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LayoutRight<sp/>AND<sp/>(<sp/>1<sp/>&gt;=<sp/>rank<sp/>OR<sp/>0<sp/>==<sp/>rank_dynamic<sp/>)<sp/>:<sp/>no<sp/>padding<sp/>/<sp/>striding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="1500" refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamd2dbab9f92ea45121777b6d82c4bae41" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>Dimension,<sp/>Kokkos::<ref refid="struct_kokkos_1_1_layout_right" kindref="compound">LayoutRight</ref>,</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;(1<sp/>&gt;=<sp/>Dimension::rank<sp/>||</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>==<sp/>Dimension::rank_dynamic)&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_mapping_plugin<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_regular<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">size_type<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>size_t;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dimension_type<sp/>=<sp/>Dimension;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">array_layout</ref><sp/><sp/><sp/>=<sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/>dimension_type<sp/>m_dim;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0&gt;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1&gt;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>i0;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>(i0));</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3&gt;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>(i0)));</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4&gt;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i4<sp/>+<sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>(i0))));</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5&gt;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,<sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,<sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,<sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,<sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i5)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i5<sp/>+</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i4<sp/>+</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>(i0)))));</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I6&gt;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,<sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,<sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,<sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,<sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i5,<sp/>I6<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i6)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i6<sp/>+</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i5<sp/>+</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i4<sp/>+</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>(i0))))));</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I7&gt;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,<sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,<sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,<sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,<sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i5,<sp/>I6<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i6,<sp/>I7<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i7)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i7<sp/>+</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N7<sp/>*</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i6<sp/>+</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i5<sp/>+</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i4<sp/>+</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i3<sp/>+</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N3<sp/>*</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1<sp/>+<sp/>m_dim.N1<sp/>*<sp/>(i0)))))));</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">array_layout</ref><sp/>layout()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">array_layout</ref>(m_dim.N0,<sp/>m_dim.N1,<sp/>m_dim.N2,<sp/>m_dim.N3,<sp/>m_dim.N4,</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N5,<sp/>m_dim.N6,<sp/>m_dim.N7);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_0()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_7()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cardinality<sp/>of<sp/>the<sp/>domain<sp/>index<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Span<sp/>of<sp/>the<sp/>range<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>span()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>span_is_contiguous()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Strides<sp/>of<sp/>dimensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_7()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N5<sp/>*<sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N5<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N5<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_0()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N5<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N2<sp/>*</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stride<sp/>with<sp/>[<sp/>rank<sp/>]<sp/>value<sp/>is<sp/>the<sp/>total<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stride(iType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>size_type<sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(7<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[7]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(6<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[6]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(5<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[5]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(4<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[4]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(3<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[3]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(2<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[2]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[1]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>s[dimension_type::rank]<sp/>=<sp/>n<sp/>*<sp/>m_dim.N0;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MSVC<sp/>(16.5.5)<sp/>+<sp/>CUDA<sp/>(10.2)<sp/>did<sp/>not<sp/>generate<sp/>the<sp/>defaulted<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>and<sp/>errors<sp/>out<sp/>during<sp/>compilation.<sp/>Same<sp/>for<sp/>the<sp/>other<sp/>places<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>changed<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_IMPL_WINDOWS_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>()<sp/>:<sp/>m_dim(dimension_type())<sp/>{}</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>src)<sp/>{<sp/>m_dim<sp/>=<sp/>src.m_dim;<sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dim<sp/>=<sp/>src.m_dim;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>TrivialScalarSize&gt;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::integral_constant&lt;unsigned,<sp/>TrivialScalarSize&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_layout)</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(arg_layout.dimension[0],<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0)<sp/>{}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, Kokkos::LayoutRight, void&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>rhs.m_dim.N1,<sp/>rhs.m_dim.N2,<sp/>rhs.m_dim.N3,</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.m_dim.N4,<sp/>rhs.m_dim.N5,<sp/>rhs.m_dim.N6,<sp/>rhs.m_dim.N7)<sp/>{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(int(DimRHS::rank)<sp/>==<sp/>int(dimension_type::rank),</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ViewOffset<sp/>assignment<sp/>requires<sp/>equal<sp/>rank&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>requires<sp/>equal<sp/>static<sp/>dimensions<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, Kokkos::LayoutLeft, void&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">((DimRHS::rank<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>dimension_type::rank<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DimRHS::rank<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>dimension_type::rank<sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_type::rank_dynamic<sp/>==<sp/>1),</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ViewOffset<sp/>LayoutRight<sp/>and<sp/>LayoutLeft<sp/>are<sp/>only<sp/>compatible<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;when<sp/>rank<sp/>&lt;=<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, Kokkos::LayoutStride, void&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0)<sp/>{}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subview<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, Kokkos::LayoutRight, void&gt;</ref>&amp;,</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_subview_extents" kindref="compound">SubviewExtents&lt;DimRHS::rank, dimension_type::rank&gt;</ref>&amp;<sp/>sub)</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(sub.range_extent(0),<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">((0<sp/>==<sp/>dimension_type::rank_dynamic)<sp/>||</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>==<sp/>dimension_type::rank<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>==<sp/>dimension_type::rank_dynamic<sp/>&amp;&amp;<sp/>1<sp/>&lt;=<sp/>DimRHS::rank),</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ViewOffset<sp/>subview<sp/>construction<sp/>requires<sp/>compatible<sp/>rank&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1782"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LayoutRight<sp/>AND<sp/>(<sp/>1<sp/>&lt;<sp/>rank<sp/>AND<sp/>0<sp/>&lt;<sp/>rank_dynamic<sp/>)<sp/>:<sp/>has<sp/>padding<sp/>/<sp/>striding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="1787" refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>Dimension,<sp/>Kokkos::<ref refid="struct_kokkos_1_1_layout_right" kindref="compound">LayoutRight</ref>,</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;(1<sp/>&lt;<sp/>Dimension::rank<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>&lt;<sp/>Dimension::rank_dynamic)&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/>using<sp/>is_mapping_plugin<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/>using<sp/>is_regular<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/>using<sp/>size_type<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>size_t;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/>using<sp/>dimension_type<sp/>=<sp/>Dimension;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>using<sp/>array_layout<sp/><sp/><sp/>=<sp/>Kokkos::LayoutRight;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>dimension_type<sp/>m_dim;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>size_type<sp/>m_stride;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0&gt;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(I0<sp/>const&amp;<sp/>i0)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i0;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1&gt;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(I0<sp/>const&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/>const&amp;<sp/>i1)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i1<sp/>+<sp/>i0<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2&gt;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(I0<sp/>const&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/>const&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/>const&amp;<sp/>i2)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1)<sp/>+<sp/>i0<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2,<sp/>typename<sp/>I3&gt;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(I0<sp/>const&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/>const&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/>const&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I3<sp/>const&amp;<sp/>i3)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1))<sp/>+<sp/>i0<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2,<sp/>typename<sp/>I3,<sp/>typename<sp/>I4&gt;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(I0<sp/>const&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/>const&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/>const&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I3<sp/>const&amp;<sp/>i3,</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I4<sp/>const&amp;<sp/>i4)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i4<sp/>+<sp/>m_dim.N4<sp/>*<sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1)))<sp/>+</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i0<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2,<sp/>typename<sp/>I3,<sp/>typename<sp/>I4,</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>I5&gt;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/>const&amp;<sp/>i0,<sp/>I1<sp/>const&amp;<sp/>i1,<sp/>I2<sp/>const&amp;<sp/>i2,<sp/>I3<sp/>const&amp;<sp/>i3,<sp/>I4<sp/>const&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/>const&amp;<sp/>i5)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i5<sp/>+</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i4<sp/>+<sp/>m_dim.N4<sp/>*<sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1))))<sp/>+</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i0<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2,<sp/>typename<sp/>I3,<sp/>typename<sp/>I4,</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>I5,<sp/>typename<sp/>I6&gt;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/>const&amp;<sp/>i0,<sp/>I1<sp/>const&amp;<sp/>i1,<sp/>I2<sp/>const&amp;<sp/>i2,<sp/>I3<sp/>const&amp;<sp/>i3,<sp/>I4<sp/>const&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/>const&amp;<sp/>i5,<sp/>I6<sp/>const&amp;<sp/>i6)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i6<sp/>+</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i5<sp/>+<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i4<sp/>+<sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1)))))<sp/>+</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i0<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>I0,<sp/>typename<sp/>I1,<sp/>typename<sp/>I2,<sp/>typename<sp/>I3,<sp/>typename<sp/>I4,</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>I5,<sp/>typename<sp/>I6,<sp/>typename<sp/>I7&gt;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/>const&amp;<sp/>i0,<sp/>I1<sp/>const&amp;<sp/>i1,<sp/>I2<sp/>const&amp;<sp/>i2,<sp/>I3<sp/>const&amp;<sp/>i3,<sp/>I4<sp/>const&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/>const&amp;<sp/>i5,<sp/>I6<sp/>const&amp;<sp/>i6,<sp/>I7<sp/>const&amp;<sp/>i7)<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>i7<sp/>+</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N7<sp/>*</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i6<sp/>+</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i5<sp/>+</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i4<sp/>+<sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i3<sp/>+<sp/>m_dim.N3<sp/>*<sp/>(i2<sp/>+<sp/>m_dim.N2<sp/>*<sp/>(i1))))))<sp/>+</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i0<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>constexpr<sp/>array_layout<sp/>layout()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>array_layout(m_dim.N0,<sp/>m_dim.N1,<sp/>m_dim.N2,<sp/>m_dim.N3,<sp/>m_dim.N4,</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N5,<sp/>m_dim.N6,<sp/>m_dim.N7);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_0()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N0;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_1()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_2()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_3()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_4()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_5()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_6()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>size_type<sp/>dimension_7()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cardinality<sp/>of<sp/>the<sp/>domain<sp/>index<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/>constexpr<sp/>size_type<sp/>size()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Span<sp/>of<sp/>the<sp/>range<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/>constexpr<sp/>size_type<sp/>span()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>size()<sp/>&gt;<sp/>0<sp/>?<sp/>m_dim.N0<sp/>*<sp/>m_stride<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>constexpr<sp/>bool<sp/>span_is_contiguous()<sp/>const<sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride<sp/>==<sp/>m_dim.N7<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N5<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N3<sp/>*</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N2<sp/>*<sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Strides<sp/>of<sp/>dimensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_7()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N5<sp/>*<sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N5<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7<sp/>*<sp/>m_dim.N6<sp/>*<sp/>m_dim.N5<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_0()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stride<sp/>with<sp/>[<sp/>rank<sp/>]<sp/>value<sp/>is<sp/>the<sp/>total<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stride(iType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>size_type<sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(7<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[7]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(6<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[6]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(5<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[5]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(4<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[4]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(3<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[3]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(2<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[2]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[1]<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>m_stride;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/>s[dimension_type::rank]<sp/>=<sp/>m_stride<sp/>*<sp/>m_dim.N0;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>TrivialScalarSize&gt;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Padding<sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>div<sp/>=<sp/>TrivialScalarSize<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Kokkos::Impl::MEMORY_ALIGNMENT<sp/>/</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TrivialScalarSize<sp/>?<sp/>TrivialScalarSize<sp/>:<sp/>1)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mod<sp/>=<sp/>TrivialScalarSize<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Kokkos::Impl::MEMORY_ALIGNMENT<sp/>%</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TrivialScalarSize<sp/>?<sp/>TrivialScalarSize<sp/>:<sp/>1)</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>memory<sp/>alignment<sp/>is<sp/>a<sp/>multiple<sp/>of<sp/>the<sp/>trivial<sp/>scalar<sp/>size<sp/>then<sp/>attempt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>align.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>align<sp/>=<sp/>0<sp/>!=<sp/>TrivialScalarSize<sp/>&amp;&amp;<sp/>0<sp/>==<sp/>mod<sp/>?<sp/>div<sp/>:<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>div_ok<sp/>=<sp/>(div<sp/>!=<sp/>0)<sp/>?<sp/>div<sp/>:<sp/>1</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>valid<sp/>modulo<sp/>zero<sp/>in<sp/>constexpr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((align<sp/>!=<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Kokkos::Impl::MEMORY_ALIGNMENT_THRESHOLD)<sp/>*</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(align))<sp/>&lt;<sp/>N)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((N<sp/>%<sp/>div_ok)<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>N<sp/>+<sp/>align<sp/>-<sp/>(N<sp/>%<sp/>div_ok)</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>N;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MSVC<sp/>(16.5.5)<sp/>+<sp/>CUDA<sp/>(10.2)<sp/>did<sp/>not<sp/>generate<sp/>the<sp/>defaulted<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>and<sp/>errors<sp/>out<sp/>during<sp/>compilation.<sp/>Same<sp/>for<sp/>the<sp/>other<sp/>places<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>changed<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_IMPL_WINDOWS_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/>ViewOffset()<sp/>:<sp/>m_dim(dimension_type()),<sp/>m_stride(0)<sp/>{}</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/>ViewOffset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dim<sp/><sp/><sp/><sp/>=<sp/>src.m_dim;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stride<sp/>=<sp/>src.m_stride;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/>ViewOffset&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dim<sp/><sp/><sp/><sp/>=<sp/>src.m_dim;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stride<sp/>=<sp/>src.m_stride;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>ViewOffset()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/>ViewOffset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/>ViewOffset&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>padding<sp/>for<sp/>trivial<sp/>scalar<sp/>types<sp/>with<sp/>non-zero<sp/>trivial<sp/>scalar<sp/>size.</highlight></codeline>
<codeline lineno="2059"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>TrivialScalarSize&gt;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>ViewOffset(</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::integral_constant&lt;unsigned,<sp/>TrivialScalarSize&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_layout)</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(arg_layout.dimension[0],<sp/>arg_layout.dimension[1],</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_layout.dimension[2],<sp/>arg_layout.dimension[3],</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_layout.dimension[4],<sp/>arg_layout.dimension[5],</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_layout.dimension[6],<sp/>arg_layout.dimension[7]),</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Padding&lt;TrivialScalarSize&gt;::</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride(</highlight><highlight class="comment">/*<sp/>2<sp/>&lt;=<sp/>rank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N1<sp/>*</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dimension_type::rank<sp/>==<sp/>2</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>1</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim.N2<sp/>*</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dimension_type::rank<sp/>==<sp/>3</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>1</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim.N3<sp/>*</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dimension_type::rank<sp/>==<sp/>4</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>1</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim.N4<sp/>*</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dimension_type::rank<sp/>==</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>1</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dimension_type::</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank<sp/>==</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>1</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim.N6<sp/>*</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dimension_type::</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank<sp/>==</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>1</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.N7))))))))<sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>ViewOffset(</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&lt;DimRHS,<sp/>Kokkos::LayoutRight,<sp/>void&gt;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>rhs.m_dim.N1,<sp/>rhs.m_dim.N2,<sp/>rhs.m_dim.N3,</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.m_dim.N4,<sp/>rhs.m_dim.N5,<sp/>rhs.m_dim.N6,<sp/>rhs.m_dim.N7),</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(rhs.stride_0())<sp/>{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(int(DimRHS::rank)<sp/>==<sp/>int(dimension_type::rank),</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ViewOffset<sp/>assignment<sp/>requires<sp/>equal<sp/>rank&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>requires<sp/>equal<sp/>static<sp/>dimensions<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/>ViewOffset(</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&lt;DimRHS,<sp/>Kokkos::LayoutStride,<sp/>void&gt;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>rhs.m_dim.N1,<sp/>rhs.m_dim.N2,<sp/>rhs.m_dim.N3,</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.m_dim.N4,<sp/>rhs.m_dim.N5,<sp/>rhs.m_dim.N6,<sp/>rhs.m_dim.N7),</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(rhs.stride_0())<sp/>{</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((dimension_type::rank<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.m_stride.S1</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((dimension_type::rank<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.m_stride.S2</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((dimension_type::rank<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.m_stride.S3</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((dimension_type::rank<sp/>==<sp/>5)</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.m_stride.S4</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((dimension_type::rank<sp/>==<sp/>6)</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.m_stride.S5</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((dimension_type::rank<sp/>==<sp/>7)</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.m_stride.S6</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rhs.m_stride.S7))))))<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Kokkos::Impl::ViewOffset<sp/>assignment<sp/>of<sp/>LayoutRight<sp/>from<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LayoutStride<sp/>requires<sp/>right-most<sp/>stride<sp/>==<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subview<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>dimension<sp/>must<sp/>be<sp/>non-zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS&gt;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>ViewOffset(</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewOffset&lt;DimRHS,<sp/>Kokkos::LayoutRight,<sp/>void&gt;&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubviewExtents&lt;DimRHS::rank,<sp/>dimension_type::rank&gt;&amp;<sp/>sub)</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(sub.range_extent(0),<sp/>sub.range_extent(1),<sp/>sub.range_extent(2),</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub.range_extent(3),<sp/>sub.range_extent(4),<sp/>sub.range_extent(5),</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub.range_extent(6),<sp/>sub.range_extent(7)),</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>==<sp/>sub.range_index(0)</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_0()</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(1<sp/>==<sp/>sub.range_index(0)</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_1()</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(2<sp/>==<sp/>sub.range_index(0)</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_2()</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(3<sp/>==<sp/>sub.range_index(0)</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_3()</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(4<sp/>==<sp/>sub.range_index(0)</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_4()</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(5<sp/>==<sp/>sub.range_index(0)</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_5()</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(6<sp/>==<sp/>sub.range_index(0)</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_6()</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0)))))))<sp/>{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>This<sp/>subview<sp/>must<sp/>be<sp/>2<sp/>==<sp/>rank<sp/>and<sp/>2<sp/>==<sp/>rank_dynamic</highlight></codeline>
<codeline lineno="2162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>due<sp/>to<sp/>only<sp/>having<sp/>stride<sp/>#0.</highlight></codeline>
<codeline lineno="2163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>source<sp/>dimension<sp/>#0<sp/>must<sp/>be<sp/>non-zero<sp/>for<sp/>stride-one<sp/>leading</highlight></codeline>
<codeline lineno="2164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension.</highlight></codeline>
<codeline lineno="2165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>At<sp/>most<sp/>subsequent<sp/>dimension<sp/>can<sp/>be<sp/>non-zero.</highlight></codeline>
<codeline lineno="2166"><highlight class="comment"></highlight></codeline>
<codeline lineno="2167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(<sp/>((<sp/>2<sp/>==<sp/>dimension_type::rank<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>2<sp/>&lt;=<sp/>DimRHS::rank<sp/>))<sp/>||</highlight></codeline>
<codeline lineno="2169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()</highlight></codeline>
<codeline lineno="2170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>&quot;ViewOffset<sp/>subview<sp/>construction<sp/>requires<sp/>compatible</highlight></codeline>
<codeline lineno="2171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank&quot;<sp/>);</highlight></codeline>
<codeline lineno="2172"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Strided<sp/>array<sp/>layout<sp/>only<sp/>makes<sp/>sense<sp/>for<sp/>0<sp/>&lt;<sp/>rank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>rank<sp/>=<sp/>0<sp/>included<sp/>for<sp/>DynRankView<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>Rank&gt;</highlight></codeline>
<codeline lineno="2181" refid="struct_kokkos_1_1_impl_1_1_view_stride" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="2184" refid="struct_kokkos_1_1_impl_1_1_view_stride_3_010_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&lt;0&gt;<sp/>{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>S0<sp/>=<sp/>0,<sp/>S1<sp/>=<sp/>0,<sp/>S2<sp/>=<sp/>0,<sp/>S3<sp/>=<sp/>0,<sp/>S4<sp/>=<sp/>0,<sp/>S5<sp/>=<sp/>0,<sp/>S6<sp/>=<sp/>0,<sp/>S7<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="2197" refid="struct_kokkos_1_1_impl_1_1_view_stride_3_011_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&lt;1&gt;<sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>S0;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>S1<sp/>=<sp/>0,<sp/>S2<sp/>=<sp/>0,<sp/>S3<sp/>=<sp/>0,<sp/>S4<sp/>=<sp/>0,<sp/>S5<sp/>=<sp/>0,<sp/>S6<sp/>=<sp/>0,<sp/>S7<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>S0(aS0)<sp/>{}</highlight></codeline>
<codeline lineno="2209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="2212" refid="struct_kokkos_1_1_impl_1_1_view_stride_3_012_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&lt;2&gt;<sp/>{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>S0,<sp/>S1;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>S2<sp/>=<sp/>0,<sp/>S3<sp/>=<sp/>0,<sp/>S4<sp/>=<sp/>0,<sp/>S5<sp/>=<sp/>0,<sp/>S6<sp/>=<sp/>0,<sp/>S7<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>S0(aS0),<sp/>S1(aS1)<sp/>{}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="2227" refid="struct_kokkos_1_1_impl_1_1_view_stride_3_013_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&lt;3&gt;<sp/>{</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>S0,<sp/>S1,<sp/>S2;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>S3<sp/>=<sp/>0,<sp/>S4<sp/>=<sp/>0,<sp/>S5<sp/>=<sp/>0,<sp/>S6<sp/>=<sp/>0,<sp/>S7<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>S0(aS0),<sp/>S1(aS1),<sp/>S2(aS2)<sp/>{}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="2242" refid="struct_kokkos_1_1_impl_1_1_view_stride_3_014_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&lt;4&gt;<sp/>{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>S0,<sp/>S1,<sp/>S2,<sp/>S3;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>S4<sp/>=<sp/>0,<sp/>S5<sp/>=<sp/>0,<sp/>S6<sp/>=<sp/>0,<sp/>S7<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS3,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>S0(aS0),<sp/>S1(aS1),<sp/>S2(aS2),<sp/>S3(aS3)<sp/>{}</highlight></codeline>
<codeline lineno="2254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="2257" refid="struct_kokkos_1_1_impl_1_1_view_stride_3_015_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&lt;5&gt;<sp/>{</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>S0,<sp/>S1,<sp/>S2,<sp/>S3,<sp/>S4;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>S5<sp/>=<sp/>0,<sp/>S6<sp/>=<sp/>0,<sp/>S7<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS3,</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS4,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>S0(aS0),<sp/>S1(aS1),<sp/>S2(aS2),<sp/>S3(aS3),<sp/>S4(aS4)<sp/>{}</highlight></codeline>
<codeline lineno="2269"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="2272" refid="struct_kokkos_1_1_impl_1_1_view_stride_3_016_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&lt;6&gt;<sp/>{</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>S0,<sp/>S1,<sp/>S2,<sp/>S3,<sp/>S4,<sp/>S5;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>S6<sp/>=<sp/>0,<sp/>S7<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS3,</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS4,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS5,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>S0(aS0),<sp/>S1(aS1),<sp/>S2(aS2),<sp/>S3(aS3),<sp/>S4(aS4),<sp/>S5(aS5)<sp/>{}</highlight></codeline>
<codeline lineno="2284"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="2287" refid="struct_kokkos_1_1_impl_1_1_view_stride_3_017_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&lt;7&gt;<sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>S0,<sp/>S1,<sp/>S2,<sp/>S3,<sp/>S4,<sp/>S5,<sp/>S6;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>S7<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS3,</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS4,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS5,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS6,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>S0(aS0),<sp/>S1(aS1),<sp/>S2(aS2),<sp/>S3(aS3),<sp/>S4(aS4),<sp/>S5(aS5),<sp/>S6(aS6)<sp/>{}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="2302" refid="struct_kokkos_1_1_impl_1_1_view_stride_3_018_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&lt;8&gt;<sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>S0,<sp/>S1,<sp/>S2,<sp/>S3,<sp/>S4,<sp/>S5,<sp/>S6,<sp/>S7;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS3,</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS4,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS5,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS6,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aS7)</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>S0(aS0),</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S1(aS1),</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S2(aS2),</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S3(aS3),</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S4(aS4),</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S5(aS5),</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S6(aS6),</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S7(aS7)<sp/>{}</highlight></codeline>
<codeline lineno="2320"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Dimension&gt;</highlight></codeline>
<codeline lineno="2323" refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_stride_00_01void_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt;Dimension,<sp/>Kokkos::<ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">LayoutStride</ref>,<sp/>void&gt;<sp/>{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">stride_type</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">ViewStride&lt;Dimension::rank&gt;</ref>;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_mapping_plugin<sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_regular<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::true_type;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">size_type<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>size_t;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dimension_type<sp/>=<sp/>Dimension;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">array_layout</ref><sp/><sp/><sp/>=<sp/><ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref>;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/>dimension_type<sp/>m_dim;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">stride_type</ref><sp/>m_stride;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0&gt;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>*<sp/>m_stride.S0;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1&gt;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>*<sp/>m_stride.S0<sp/>+<sp/>i1<sp/>*<sp/>m_stride.S1;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>*<sp/>m_stride.S0<sp/>+<sp/>i1<sp/>*<sp/>m_stride.S1<sp/>+<sp/>i2<sp/>*<sp/>m_stride.S2;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3&gt;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>*<sp/>m_stride.S0<sp/>+<sp/>i1<sp/>*<sp/>m_stride.S1<sp/>+<sp/>i2<sp/>*<sp/>m_stride.S2<sp/>+</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3<sp/>*<sp/>m_stride.S3;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4&gt;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>*<sp/>m_stride.S0<sp/>+<sp/>i1<sp/>*<sp/>m_stride.S1<sp/>+<sp/>i2<sp/>*<sp/>m_stride.S2<sp/>+</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3<sp/>*<sp/>m_stride.S3<sp/>+<sp/>i4<sp/>*<sp/>m_stride.S4;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5&gt;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,<sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,<sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,<sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,<sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i5)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>*<sp/>m_stride.S0<sp/>+<sp/>i1<sp/>*<sp/>m_stride.S1<sp/>+<sp/>i2<sp/>*<sp/>m_stride.S2<sp/>+</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3<sp/>*<sp/>m_stride.S3<sp/>+<sp/>i4<sp/>*<sp/>m_stride.S4<sp/>+<sp/>i5<sp/>*<sp/>m_stride.S5;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I6&gt;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,<sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,<sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,<sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,<sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i5,<sp/>I6<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i6)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>*<sp/>m_stride.S0<sp/>+<sp/>i1<sp/>*<sp/>m_stride.S1<sp/>+<sp/>i2<sp/>*<sp/>m_stride.S2<sp/>+</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3<sp/>*<sp/>m_stride.S3<sp/>+<sp/>i4<sp/>*<sp/>m_stride.S4<sp/>+<sp/>i5<sp/>*<sp/>m_stride.S5<sp/>+</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i6<sp/>*<sp/>m_stride.S6;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rank<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I7&gt;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>operator()(</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I0<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i0,<sp/>I1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i1,<sp/>I2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i2,<sp/>I3<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i3,<sp/>I4<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I5<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i5,<sp/>I6<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i6,<sp/>I7<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i7)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i0<sp/>*<sp/>m_stride.S0<sp/>+<sp/>i1<sp/>*<sp/>m_stride.S1<sp/>+<sp/>i2<sp/>*<sp/>m_stride.S2<sp/>+</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3<sp/>*<sp/>m_stride.S3<sp/>+<sp/>i4<sp/>*<sp/>m_stride.S4<sp/>+<sp/>i5<sp/>*<sp/>m_stride.S5<sp/>+</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i6<sp/>*<sp/>m_stride.S6<sp/>+<sp/>i7<sp/>*<sp/>m_stride.S7;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">array_layout</ref><sp/>layout()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">array_layout</ref>(m_dim.N0,<sp/>m_stride.S0,<sp/>m_dim.N1,<sp/>m_stride.S1,<sp/>m_dim.N2,</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride.S2,<sp/>m_dim.N3,<sp/>m_stride.S3,<sp/>m_dim.N4,</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride.S4,<sp/>m_dim.N5,<sp/>m_stride.S5,<sp/>m_dim.N6,</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride.S6,<sp/>m_dim.N7,<sp/>m_stride.S7);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_0()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N1;</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N2;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N3;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N4;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N5;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N6;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>dimension_7()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cardinality<sp/>of<sp/>the<sp/>domain<sp/>index<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dim.N0<sp/>*<sp/>m_dim.N1<sp/>*<sp/>m_dim.N2<sp/>*<sp/>m_dim.N3<sp/>*<sp/>m_dim.N4<sp/>*<sp/>m_dim.N5<sp/>*</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N6<sp/>*<sp/>m_dim.N7;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/><ref refid="struct_kokkos_1_1_max" kindref="compound">Max</ref>(size_type<sp/>lhs,<sp/>size_type<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>&lt;<sp/>rhs<sp/>?<sp/>rhs<sp/>:<sp/>lhs;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Span<sp/>of<sp/>the<sp/>range<sp/>space,<sp/>largest<sp/>stride<sp/>*<sp/>dimension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>span()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size()<sp/>==<sp/>size_type(0)</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>size_type(0)</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_kokkos_1_1_max" kindref="compound">Max</ref>(m_dim.N0<sp/>*<sp/>m_stride.S0,</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_max" kindref="compound">Max</ref>(m_dim.N1<sp/>*<sp/>m_stride.S1,</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_max" kindref="compound">Max</ref>(m_dim.N2<sp/>*<sp/>m_stride.S2,</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_max" kindref="compound">Max</ref>(m_dim.N3<sp/>*<sp/>m_stride.S3,</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_max" kindref="compound">Max</ref>(m_dim.N4<sp/>*<sp/>m_stride.S4,</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_max" kindref="compound">Max</ref>(m_dim.N5<sp/>*<sp/>m_stride.S5,</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_max" kindref="compound">Max</ref>(m_dim.N6<sp/>*<sp/>m_stride.S6,</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dim.N7<sp/>*<sp/>m_stride.S7)))))));</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>span_is_contiguous()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>span()<sp/>==<sp/>size();</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Strides<sp/>of<sp/>dimensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_0()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride.S0;</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride.S1;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride.S2;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride.S3;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride.S4;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride.S5;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride.S6;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>size_type<sp/>stride_7()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride.S7;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stride<sp/>with<sp/>[<sp/>rank<sp/>]<sp/>value<sp/>is<sp/>the<sp/>total<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stride(iType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>m_stride.S0;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[1]<sp/>=<sp/>m_stride.S1;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(2<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[2]<sp/>=<sp/>m_stride.S2;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(3<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[3]<sp/>=<sp/>m_stride.S3;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(4<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[4]<sp/>=<sp/>m_stride.S4;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(5<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[5]<sp/>=<sp/>m_stride.S5;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(6<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[6]<sp/>=<sp/>m_stride.S6;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(7<sp/>&lt;<sp/>dimension_type::rank)<sp/>{</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[7]<sp/>=<sp/>m_stride.S7;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/>s[dimension_type::rank]<sp/>=<sp/>span();</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MSVC<sp/>(16.5.5)<sp/>+<sp/>CUDA<sp/>(10.2)<sp/>did<sp/>not<sp/>generate<sp/>the<sp/>defaulted<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>and<sp/>errors<sp/>out<sp/>during<sp/>compilation.<sp/>Same<sp/>for<sp/>the<sp/>other<sp/>places<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>changed<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_IMPL_WINDOWS_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>()</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(dimension_type()),<sp/>m_stride(<ref refid="struct_kokkos_1_1_impl_1_1_view_stride" kindref="compound">stride_type</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dim<sp/><sp/><sp/><sp/>=<sp/>src.m_dim;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stride<sp/>=<sp/>src.m_stride;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/>KOKKOS_FUNCTION<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dim<sp/><sp/><sp/><sp/>=<sp/>src.m_dim;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stride<sp/>=<sp/>src.m_stride;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(std::integral_constant&lt;unsigned,<sp/>0&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.dimension[0],<sp/>rhs.dimension[1],<sp/>rhs.dimension[2],</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.dimension[3],<sp/>rhs.dimension[4],<sp/>rhs.dimension[5],</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.dimension[6],<sp/>rhs.dimension[7]),</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(rhs.stride[0],<sp/>rhs.stride[1],<sp/>rhs.stride[2],<sp/>rhs.stride[3],</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.stride[4],<sp/>rhs.stride[5],<sp/>rhs.stride[6],<sp/>rhs.stride[7])<sp/>{}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LayoutRHS&gt;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, LayoutRHS, void&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(rhs.m_dim.N0,<sp/>rhs.m_dim.N1,<sp/>rhs.m_dim.N2,<sp/>rhs.m_dim.N3,</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.m_dim.N4,<sp/>rhs.m_dim.N5,<sp/>rhs.m_dim.N6,<sp/>rhs.m_dim.N7),</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(rhs.stride_0(),<sp/>rhs.stride_1(),<sp/>rhs.stride_2(),<sp/>rhs.stride_3(),</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.stride_4(),<sp/>rhs.stride_5(),<sp/>rhs.stride_6(),</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.stride_7())<sp/>{</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(int(DimRHS::rank)<sp/>==<sp/>int(dimension_type::rank),</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ViewOffset<sp/>assignment<sp/>requires<sp/>equal<sp/>rank&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>requires<sp/>equal<sp/>static<sp/>dimensions<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subview<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LayoutRHS&gt;</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride(</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, LayoutRHS, void&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>&gt;<sp/>7</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_0()</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_1()</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>2</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_2()</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>3</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_3()</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>4</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_4()</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>5</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_5()</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(r<sp/>==<sp/>6</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>rhs.stride_6()</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rhs.stride_7())))))));</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DimRHS,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LayoutRHS&gt;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>(</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset&lt;DimRHS, LayoutRHS, void&gt;</ref>&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_subview_extents" kindref="compound">SubviewExtents&lt;DimRHS::rank, dimension_type::rank&gt;</ref>&amp;<sp/>sub)</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range_extent(r)<sp/>returns<sp/>0<sp/>when<sp/>dimension_type::rank<sp/>&lt;=<sp/>r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_dim(sub.range_extent(0),<sp/>sub.range_extent(1),<sp/>sub.range_extent(2),</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub.range_extent(3),<sp/>sub.range_extent(4),<sp/>sub.range_extent(5),</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub.range_extent(6),<sp/>sub.range_extent(7))</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range_index(r)<sp/>returns<sp/>~0u<sp/>when<sp/>dimension_type::rank<sp/>&lt;=<sp/>r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride(</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride(sub.range_index(0),<sp/>rhs),<sp/>stride(sub.range_index(1),<sp/>rhs),</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride(sub.range_index(2),<sp/>rhs),<sp/>stride(sub.range_index(3),<sp/>rhs),</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride(sub.range_index(4),<sp/>rhs),<sp/>stride(sub.range_index(5),<sp/>rhs),</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride(sub.range_index(6),<sp/>rhs),<sp/>stride(sub.range_index(7),<sp/>rhs))<sp/>{}</highlight></codeline>
<codeline lineno="2626"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Kokkos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Kokkos<sp/>{</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="2651" refid="struct_kokkos_1_1_impl_1_1_view_data_handle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_data_handle" kindref="compound">ViewDataHandle</ref><sp/>{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type;</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">handle_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type*;</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">return_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type&amp;;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">track_type</ref><sp/><sp/>=<sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">Kokkos::Impl::SharedAllocationTracker</ref>;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>handle_type<sp/>assign(value_type*<sp/>arg_data_ptr,</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">track_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="comment">/*arg_tracker*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handle_type(arg_data_ptr);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>handle_type<sp/>assign(handle_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arg_data_ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handle_type(arg_data_ptr<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2667"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="2670" refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07st938ebca89995e28d97a55e257ca9a341" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_data_handle" kindref="compound">ViewDataHandle</ref>&lt;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>Traits,<sp/>typename<sp/>std::enable_if&lt;(</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>Traits::non_const_value_type,</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>Traits::value_type&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>Traits::specialize,<sp/>void&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Traits::memory_traits::is_atomic)&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">handle_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_atomic_view_data_handle" kindref="compound">Kokkos::Impl::AtomicViewDataHandle&lt;Traits&gt;</ref>;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">return_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_atomic_data_element" kindref="compound">Kokkos::Impl::AtomicDataElement&lt;Traits&gt;</ref>;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">track_type</ref><sp/><sp/>=<sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">Kokkos::Impl::SharedAllocationTracker</ref>;</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>handle_type<sp/>assign(value_type*<sp/>arg_data_ptr,</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">track_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="comment">/*arg_tracker*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handle_type(arg_data_ptr);</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcHandleType&gt;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>handle_type<sp/>assign(</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SrcHandleType&amp;<sp/>arg_handle,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handle_type(arg_handle<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2692"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="2695" refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07stbc5d2690bc22ef07bccd6c58af20e87a" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_data_handle" kindref="compound">ViewDataHandle</ref>&lt;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/>Traits,<sp/>typename<sp/>std::enable_if&lt;(</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>Traits::specialize,<sp/>void&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!Traits::memory_traits::is_aligned)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Traits::memory_traits::is_restrict</highlight></codeline>
<codeline lineno="2700"><highlight class="normal">#ifdef<sp/>KOKKOS_ENABLE_CUDA</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!(std::is_same&lt;typename<sp/>Traits::memory_space,</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::CudaSpace&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>Traits::memory_space,</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::CudaUVMSpace&gt;::value))</highlight></codeline>
<codeline lineno="2705"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!Traits::memory_traits::is_atomic))&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">handle_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type*<sp/>KOKKOS_RESTRICT;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">return_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type&amp;<sp/>KOKKOS_RESTRICT;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">track_type</ref><sp/><sp/>=<sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">Kokkos::Impl::SharedAllocationTracker</ref>;</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>value_type*<sp/>assign(value_type*<sp/>arg_data_ptr,</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">track_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="comment">/*arg_tracker*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value_type*)(arg_data_ptr);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>value_type*<sp/>assign(handle_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arg_data_ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value_type*)(arg_data_ptr<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="2725" refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07ste24704fcde5ef4ad99dc6b3e8de1cd8a" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_data_handle" kindref="compound">ViewDataHandle</ref>&lt;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>Traits,<sp/>typename<sp/>std::enable_if&lt;(</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>Traits::specialize,<sp/>void&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Traits::memory_traits::is_aligned<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!Traits::memory_traits::is_restrict)</highlight></codeline>
<codeline lineno="2730"><highlight class="normal">#ifdef<sp/>KOKKOS_ENABLE_CUDA</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!(std::is_same&lt;typename<sp/>Traits::memory_space,</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::CudaSpace&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>Traits::memory_space,</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::CudaUVMSpace&gt;::value))</highlight></codeline>
<codeline lineno="2735"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!Traits::memory_traits::is_atomic))&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>typedef<sp/>work-around<sp/>for<sp/>intel<sp/>compilers<sp/>error<sp/>#3186:<sp/>expected<sp/>typedef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINTNEXTLINE(modernize-use-using)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>value_type*<sp/>KOKKOS_IMPL_ALIGN_PTR(KOKKOS_MEMORY_ALIGNMENT)</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>handle_type;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">return_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type&amp;;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">track_type</ref><sp/><sp/>=<sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">Kokkos::Impl::SharedAllocationTracker</ref>;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>handle_type<sp/>assign(value_type*<sp/>arg_data_ptr,</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">track_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="comment">/*arg_tracker*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uintptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg_data_ptr)<sp/>%<sp/>Impl::MEMORY_ALIGNMENT)<sp/>{</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Assigning<sp/>NonAligned<sp/>View<sp/>or<sp/>Pointer<sp/>to<sp/>Kokkos::View<sp/>with<sp/>Aligned<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;attribute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handle_type(arg_data_ptr);</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>handle_type<sp/>assign(handle_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arg_data_ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uintptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg_data_ptr<sp/>+<sp/>offset)<sp/>%</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Impl::MEMORY_ALIGNMENT)<sp/>{</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Assigning<sp/>NonAligned<sp/>View<sp/>or<sp/>Pointer<sp/>to<sp/>Kokkos::View<sp/>with<sp/>Aligned<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;attribute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handle_type(arg_data_ptr<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2767"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="2770" refid="struct_kokkos_1_1_impl_1_1_view_data_handle_3_01_traits_00_01typename_01std_1_1enable__if_3_07st6e63042290570a38914c91e3b65fe351" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_data_handle" kindref="compound">ViewDataHandle</ref>&lt;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/>Traits,</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;(</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>Traits::specialize,<sp/>void&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Traits::memory_traits::is_aligned<sp/>&amp;&amp;<sp/>Traits::memory_traits::is_restrict</highlight></codeline>
<codeline lineno="2775"><highlight class="normal">#ifdef<sp/>KOKKOS_ENABLE_CUDA</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!(std::is_same&lt;typename<sp/>Traits::memory_space,</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::CudaSpace&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>Traits::memory_space,</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::CudaUVMSpace&gt;::value))</highlight></codeline>
<codeline lineno="2780"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!Traits::memory_traits::is_atomic))&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>typedef<sp/>work-around<sp/>for<sp/>intel<sp/>compilers<sp/>error<sp/>#3186:<sp/>expected<sp/>typedef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINTNEXTLINE(modernize-use-using)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>value_type*<sp/>KOKKOS_IMPL_ALIGN_PTR(KOKKOS_MEMORY_ALIGNMENT)</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>handle_type;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">return_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type&amp;<sp/>KOKKOS_RESTRICT;</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">track_type</ref><sp/><sp/>=<sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">Kokkos::Impl::SharedAllocationTracker</ref>;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>value_type*<sp/>assign(value_type*<sp/>arg_data_ptr,</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">track_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="comment">/*arg_tracker*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uintptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg_data_ptr)<sp/>%<sp/>Impl::MEMORY_ALIGNMENT)<sp/>{</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Assigning<sp/>NonAligned<sp/>View<sp/>or<sp/>Pointer<sp/>to<sp/>Kokkos::View<sp/>with<sp/>Aligned<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;attribute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value_type*)(arg_data_ptr);</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>value_type*<sp/>assign(handle_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arg_data_ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uintptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg_data_ptr<sp/>+<sp/>offset)<sp/>%</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Impl::MEMORY_ALIGNMENT)<sp/>{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Assigning<sp/>NonAligned<sp/>View<sp/>or<sp/>Pointer<sp/>to<sp/>Kokkos::View<sp/>with<sp/>Aligned<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;attribute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value_type*)(arg_data_ptr<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2812"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2813"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Kokkos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Kokkos<sp/>{</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_zero_byte(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">comparison_type<sp/>=<sp/>std::conditional_t&lt;</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>int,</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>int,</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/>int,</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>==<sp/>0,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>int,</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">comparison_type*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;t);</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(comparison_type);<sp/>++i)</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[i]<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2836"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2841"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>construction,<sp/>assignment<sp/>to<sp/>default,<sp/>and<sp/>destruction</highlight></codeline>
<codeline lineno="2842"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>merged<sp/>into<sp/>a<sp/>single<sp/>functor.</highlight></codeline>
<codeline lineno="2843"><highlight class="comment"><sp/>*<sp/><sp/>Primarily<sp/>to<sp/>work<sp/>around<sp/>an<sp/>unresolved<sp/>CUDA<sp/>back-end<sp/>bug</highlight></codeline>
<codeline lineno="2844"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>would<sp/>lose<sp/>the<sp/>destruction<sp/>cuda<sp/>device<sp/>function<sp/>when</highlight></codeline>
<codeline lineno="2845"><highlight class="comment"><sp/>*<sp/><sp/>called<sp/>from<sp/>the<sp/>shared<sp/>memory<sp/>tracking<sp/>destruction.</highlight></codeline>
<codeline lineno="2846"><highlight class="comment"><sp/>*<sp/><sp/>Secondarily<sp/>to<sp/>have<sp/>two<sp/>fewer<sp/>partial<sp/>specializations.</highlight></codeline>
<codeline lineno="2847"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DeviceType,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueType,</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsScalar<sp/>=<sp/>std::is_scalar&lt;ValueType&gt;::value&gt;</highlight></codeline>
<codeline lineno="2850" refid="struct_kokkos_1_1_impl_1_1_view_value_functor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>;</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DeviceType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="2853" refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01false_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>&lt;DeviceType,<sp/>ValueType,<sp/>false<sp/></highlight><highlight class="comment">/*<sp/>is_scalar<sp/>*/</highlight><highlight class="normal">&gt;<sp/>{</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ExecSpace<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DeviceType::execution_space;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_range_policy" kindref="compound">PolicyType</ref><sp/>=<sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Kokkos::RangePolicy&lt;ExecSpace, Kokkos::IndexType&lt;int64_t&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"></highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/>ExecSpace<sp/>space;</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/>ValueType*<sp/>ptr;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>destroy;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destroy)<sp/>{</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(ptr<sp/>+<sp/>i)-&gt;~ValueType();</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>KOKKOS_IMPL_CUDA_CLANG_WORKAROUND<sp/>this<sp/>line<sp/>causes<sp/>ptax<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>__cxa_begin_catch<sp/>in<sp/>nested_view<sp/>unit-test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(ptr<sp/>+<sp/>i)<sp/>ValueType();</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>(ExecSpace<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_space,<sp/>ValueType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arg_ptr,</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arg_n,<sp/>std::string<sp/>arg_name)</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>space(arg_space),</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr(arg_ptr),</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n(arg_n),</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroy(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(std::move(arg_name))<sp/>{}</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dummy<sp/>=<sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;std::is_trivial&lt;Dummy&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_trivially_copy_assignable&lt;ValueType&gt;::value&gt;</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/>construct_dispatch()<sp/>{</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueType<sp/>value{};</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Impl::is_zero_byte(value))<sp/>{</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>kpID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Profiling::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>not<sp/>really<sp/>using<sp/>parallel_for<sp/>here<sp/>but<sp/>using<sp/>beginParallelFor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>begin_parallel_for<sp/>(and<sp/>adding<sp/>&quot;via<sp/>memset&quot;)<sp/>is<sp/>the<sp/>best</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>do<sp/>to<sp/>indicate<sp/>that<sp/>this<sp/>is<sp/>not<sp/>supposed<sp/>to<sp/>be<sp/>tunable<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>really<sp/>execute<sp/>a<sp/>parallel_for).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Profiling::beginParallelFor(</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Kokkos::View::initialization<sp/>[&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>via<sp/>memset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Profiling::Experimental::device_id(space),<sp/>&amp;kpID);</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="struct_kokkos_1_1_impl_1_1_zero_memset" kindref="compound">ZeroMemset</ref>&lt;ExecSpace,<sp/>ValueType*,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DeviceType::memory_space,</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_memory_traits" kindref="compound">Kokkos::MemoryTraits&lt;Kokkos::Unmanaged&gt;</ref>&gt;(</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space,</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt;ValueType*,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DeviceType::memory_space,</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_memory_traits" kindref="compound">Kokkos::MemoryTraits&lt;Kokkos::Unmanaged&gt;</ref>&gt;(ptr,<sp/>n),</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value);</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Profiling::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Profiling::endParallelFor(kpID);</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parallel_for_implementation(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dummy<sp/>=<sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;!(std::is_trivial&lt;Dummy&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_trivially_copy_assignable&lt;ValueType&gt;::value)&gt;</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/>construct_dispatch()<sp/>{</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/>parallel_for_implementation(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_for_implementation(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/>destroy<sp/>=<sp/>arg;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!space.in_parallel())<sp/>{</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">PolicyType</ref><sp/>policy(0,<sp/>n);</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>functor_name;</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>kpID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Profiling::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor_name<sp/>=</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(destroy<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Kokkos::View::destruction<sp/>[&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Kokkos::View::initialization<sp/>[&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Tools::Impl::begin_parallel_for(policy,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>functor_name,</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kpID);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_ENABLE_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::is_same&lt;ExecSpace,<sp/>Kokkos::Cuda&gt;::value)<sp/>{</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Impl::cuda_prefetch_pointer(space,<sp/>ptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ValueType)<sp/>*<sp/>n,</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_parallel_for" kindref="compound">Kokkos::Impl::ParallelFor&lt;ViewValueFunctor, PolicyType&gt;</ref><sp/>closure(</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>policy);</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>closure.execute();</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>space.fence(</highlight><highlight class="stringliteral">&quot;Kokkos::Impl::ViewValueFunctor:<sp/>View<sp/>init/destroy<sp/>fence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Profiling::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Tools::Impl::end_parallel_for(policy,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>functor_name,</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kpID);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">()(i);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>construct_shared_allocation()<sp/>{<sp/>construct_dispatch();<sp/>}</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroy_shared_allocation()<sp/>{<sp/>parallel_for_implementation(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="2961"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DeviceType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="2964" refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>&lt;DeviceType,<sp/>ValueType,<sp/>true<sp/></highlight><highlight class="comment">/*<sp/>is_scalar<sp/>*/</highlight><highlight class="normal">&gt;<sp/>{</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ExecSpace<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DeviceType::execution_space;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_range_policy" kindref="compound">PolicyType</ref><sp/>=<sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Kokkos::RangePolicy&lt;ExecSpace, Kokkos::IndexType&lt;int64_t&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/>ExecSpace<sp/>space;</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/>ValueType*<sp/>ptr;</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>ptr[i]<sp/>=<sp/>ValueType();<sp/>}</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref>(ExecSpace<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_space,<sp/>ValueType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arg_ptr,</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arg_n,<sp/>std::string<sp/>arg_name)</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>space(arg_space),<sp/>ptr(arg_ptr),<sp/>n(arg_n),<sp/>name(std::move(arg_name))<sp/>{}</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dummy<sp/>=<sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;std::is_trivial&lt;Dummy&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_trivially_copy_assignable&lt;Dummy&gt;::value&gt;</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/>construct_shared_allocation()<sp/>{</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shortcut<sp/>for<sp/>zero<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueType<sp/>value{};</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Impl::is_zero_byte(value))<sp/>{</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>kpID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Profiling::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>not<sp/>really<sp/>using<sp/>parallel_for<sp/>here<sp/>but<sp/>using<sp/>beginParallelFor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>begin_parallel_for<sp/>(and<sp/>adding<sp/>&quot;via<sp/>memset&quot;)<sp/>is<sp/>the<sp/>best</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>do<sp/>to<sp/>indicate<sp/>that<sp/>this<sp/>is<sp/>not<sp/>supposed<sp/>to<sp/>be<sp/>tunable<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>really<sp/>execute<sp/>a<sp/>parallel_for).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Profiling::beginParallelFor(</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Kokkos::View::initialization<sp/>[&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>via<sp/>memset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Profiling::Experimental::device_id(space),<sp/>&amp;kpID);</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="struct_kokkos_1_1_impl_1_1_zero_memset" kindref="compound">ZeroMemset</ref>&lt;ExecSpace,<sp/>ValueType*,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DeviceType::memory_space,</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_memory_traits" kindref="compound">Kokkos::MemoryTraits&lt;Kokkos::Unmanaged&gt;</ref>&gt;(</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space,</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt;ValueType*,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DeviceType::memory_space,</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_memory_traits" kindref="compound">Kokkos::MemoryTraits&lt;Kokkos::Unmanaged&gt;</ref>&gt;(ptr,<sp/>n),</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Profiling::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Profiling::endParallelFor(kpID);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parallel_for_implementation();</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dummy<sp/>=<sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/>std::enable_if_t&lt;!(std::is_trivial&lt;Dummy&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_trivially_copy_assignable&lt;Dummy&gt;::value)&gt;</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/>construct_shared_allocation()<sp/>{</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>parallel_for_implementation();</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_for_implementation()<sp/>{</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!space.in_parallel())<sp/>{</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">PolicyType</ref><sp/>policy(0,<sp/>n);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>functor_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Kokkos::View::initialization<sp/>[&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>kpID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Profiling::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Tools::Impl::begin_parallel_for(policy,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>functor_name,</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kpID);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KOKKOS_ENABLE_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::is_same&lt;ExecSpace,<sp/>Kokkos::Cuda&gt;::value)<sp/>{</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Impl::cuda_prefetch_pointer(space,<sp/>ptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ValueType)<sp/>*<sp/>n,</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_parallel_for" kindref="compound">Kokkos::Impl::ParallelFor&lt;ViewValueFunctor, PolicyType&gt;</ref><sp/>closure(</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_kokkos_1_1_range_policy" kindref="compound">PolicyType</ref>(0,<sp/>n));</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>closure.execute();</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>space.fence(</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Kokkos::Impl::ViewValueFunctor:<sp/>Fence<sp/>after<sp/>setting<sp/>values<sp/>in<sp/>view&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Kokkos::Profiling::profileLibraryLoaded())<sp/>{</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Tools::Impl::end_parallel_for(policy,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>functor_name,</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kpID);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">()(i);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroy_shared_allocation()<sp/>{}</highlight></codeline>
<codeline lineno="3054"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3058"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="3059" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>&lt;</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/>Traits,</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;(</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>Traits::specialize,<sp/>void&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ViewOffset&lt;typename<sp/>Traits::dimension,<sp/>typename<sp/>Traits::array_layout,</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void&gt;::is_mapping_plugin::value)&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">offset_type</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::dimension,</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::array_layout,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;;</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">handle_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ViewDataHandle&lt;Traits&gt;::handle_type;</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/>handle_type<sp/>m_impl_handle;</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">offset_type</ref><sp/>m_impl_offset;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>;</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>handle_type&amp;<sp/>arg_handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">offset_type</ref>&amp;<sp/>arg_offset)</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_impl_handle(arg_handle),<sp/>m_impl_offset(arg_offset)<sp/>{}</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">printable_label_typedef<sp/>=<sp/>void;</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>is_managed<sp/>=<sp/>Traits::is_managed<sp/>};</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Domain<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="struct_kokkos_1_1_rank" kindref="compound">Rank</ref><sp/>=<sp/>Traits::dimension::rank<sp/>};</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"></highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>extent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iType&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.m_dim.extent(r);</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>static_extent(</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>r)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dim_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>offset_type::dimension_type;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dim_type::static_extent(r);</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::array_layout<sp/>layout()</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="3103"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.layout();</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension_0()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.dimension_0();</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.dimension_1();</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.dimension_2();</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension_3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.dimension_3();</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension_4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.dimension_4();</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension_5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.dimension_5();</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension_6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.dimension_6();</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension_7()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.dimension_7();</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>a<sp/>regular<sp/>layout<sp/>with<sp/>uniform<sp/>striding<sp/>for<sp/>each<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_regular<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>offset_type::is_regular;</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride_0()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.stride_0();</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride_1()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.stride_1();</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride_2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.stride_2();</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride_3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.stride_3();</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride_4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.stride_4();</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride_5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.stride_5();</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride_6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.stride_6();</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride_7()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.stride_7();</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"></highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iType&gt;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stride(iType*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/>m_impl_offset.stride(s);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Range<sp/>span</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight></codeline>
<codeline lineno="3169" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a41612c9b1eaf02630e4d06ab38baab8e" refkind="member"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a41612c9b1eaf02630e4d06ab38baab8e" kindref="member">span</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.span();</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"></highlight></codeline>
<codeline lineno="3174" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a78f798f8a745fd5ca93efd29cd1e90eb" refkind="member"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a78f798f8a745fd5ca93efd29cd1e90eb" kindref="member">span_is_contiguous</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_offset.span_is_contiguous();</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">reference_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ViewDataHandle&lt;Traits&gt;::return_type;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">pointer_type<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type*;</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight></codeline>
<codeline lineno="3182" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ac9fde602c040878216147d508cfc5792" refkind="member"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>pointer_type<sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ac9fde602c040878216147d508cfc5792" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>View<sp/>class<sp/>performs<sp/>all<sp/>rank<sp/>and<sp/>bounds<sp/>checking<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calling<sp/>these<sp/>element<sp/>reference<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"></highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/>reference_type<sp/>reference()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle[0];<sp/>}</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0&gt;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;(std::is_integral&lt;I0&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>layout<sp/>is<sp/>neither<sp/>stride<sp/>nor<sp/>irregular,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>just<sp/>use<sp/>the<sp/>handle<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::array_layout,</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref>&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!is_regular::value)),</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference_type&gt;::type</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reference(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I0&amp;<sp/>i0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle[i0];</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0&gt;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;(std::is_integral&lt;I0&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>layout<sp/>is<sp/>strided<sp/>or<sp/>irregular,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>to<sp/>use<sp/>the<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::array_layout,</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref>&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!is_regular::value)),</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference_type&gt;::type</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reference(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I0&amp;<sp/>i0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle[m_impl_offset(i0)];</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1&gt;</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/>reference_type<sp/>reference(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I0&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>i1)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle[m_impl_offset(i0,<sp/>i1)];</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/>reference_type<sp/>reference(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I0&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>i2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle[m_impl_offset(i0,<sp/>i1,<sp/>i2)];</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3&gt;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/>reference_type</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/>reference(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I0&amp;<sp/>i0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>i1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>i2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I3&amp;<sp/>i3)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle[m_impl_offset(i0,<sp/>i1,<sp/>i2,<sp/>i3)];</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"></highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4&gt;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/>reference_type<sp/>reference(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I0&amp;<sp/>i0,</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>i1,</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I3&amp;<sp/>i3,</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I4&amp;<sp/>i4)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle[m_impl_offset(i0,<sp/>i1,<sp/>i2,<sp/>i3,<sp/>i4)];</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5&gt;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/>reference_type</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/>reference(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I0&amp;<sp/>i0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>i1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>i2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I3&amp;<sp/>i3,</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I4&amp;<sp/>i4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I5&amp;<sp/>i5)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle[m_impl_offset(i0,<sp/>i1,<sp/>i2,<sp/>i3,<sp/>i4,<sp/>i5)];</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I6&gt;</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/>reference_type</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/>reference(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I0&amp;<sp/>i0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>i1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>i2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I3&amp;<sp/>i3,</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I4&amp;<sp/>i4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I5&amp;<sp/>i5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I6&amp;<sp/>i6)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle[m_impl_offset(i0,<sp/>i1,<sp/>i2,<sp/>i3,<sp/>i4,<sp/>i5,<sp/>i6)];</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I4,</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I7&gt;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/>KOKKOS_FORCEINLINE_FUNCTION<sp/>reference_type</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/>reference(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I0&amp;<sp/>i0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>i1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>i2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I3&amp;<sp/>i3,</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I4&amp;<sp/>i4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I5&amp;<sp/>i5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I6&amp;<sp/>i6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I7&amp;<sp/>i7)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl_handle[m_impl_offset(i0,<sp/>i1,<sp/>i2,<sp/>i3,<sp/>i4,<sp/>i5,<sp/>i6,<sp/>i7)];</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>MemorySpanMask<sp/>=<sp/>8<sp/>-<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>alignment<sp/>on<sp/>8<sp/>byte<sp/>boundary<sp/>*/</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>MemorySpanSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type)<sp/>};</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3279" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a80f3b078c2cd367290625628adaa77e2" refkind="member"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a80f3b078c2cd367290625628adaa77e2" kindref="member">memory_span</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_impl_offset.span()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type)<sp/>+</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemorySpanMask)<sp/>&amp;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~size_t(MemorySpanMask);</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/>KOKKOS_DEFAULTED_FUNCTION<sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">~ViewMapping</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>()<sp/>:<sp/>m_impl_handle(),<sp/>m_impl_offset()<sp/>{}</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/>KOKKOS_DEFAULTED_FUNCTION<sp/>ViewMapping(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewMapping&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/>KOKKOS_DEFAULTED_FUNCTION<sp/>ViewMapping&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViewMapping&amp;)<sp/>=</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/>KOKKOS_DEFAULTED_FUNCTION<sp/>ViewMapping(ViewMapping&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/>KOKKOS_DEFAULTED_FUNCTION<sp/>ViewMapping&amp;<sp/>operator=(ViewMapping&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="3301" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ae62439dc556f940a1bc65fb4b4c23716" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1ae62439dc556f940a1bc65fb4b4c23716" kindref="member">memory_span</ref>(</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::array_layout<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_layout)<sp/>{</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">padding<sp/>=<sp/>std::integral_constant&lt;unsigned<sp/>int,<sp/>0&gt;;</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">offset_type</ref>(padding(),<sp/>arg_layout).span()<sp/>*<sp/>MemorySpanSize<sp/>+</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemorySpanMask)<sp/>&amp;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~size_t(MemorySpanMask);</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>P&gt;</highlight></codeline>
<codeline lineno="3311" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a0b4a85afc6a401cfbac3836b6eb2487b" refkind="member"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a0b4a85afc6a401cfbac3836b6eb2487b" kindref="member">ViewMapping</ref>(</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">Kokkos::Impl::ViewCtorProp&lt;P...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_prop,</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::array_layout<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_layout)</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_impl_handle(</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((Kokkos::Impl::<ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">ViewCtorProp</ref>&lt;void,<sp/>pointer_type&gt;<sp/>const&amp;)arg_prop)</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value),</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_impl_offset(std::integral_constant&lt;unsigned,<sp/>0&gt;(),<sp/>arg_layout)<sp/>{}</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="3321" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a1832cf665cc8af8066ca44a779007387" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_traits_00_01typename_01std_1_1enable__if_3_07std_1_101d5a89a6d46f3c0a9db5a84f6b52d7a_1a1832cf665cc8af8066ca44a779007387" kindref="member">assign_data</ref>(pointer_type<sp/>arg_ptr)<sp/>{</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/>m_impl_handle<sp/>=<sp/>handle_type(arg_ptr);</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Allocate<sp/>and<sp/>construct<sp/>mapped<sp/>array.</highlight></codeline>
<codeline lineno="3327"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Allocate<sp/>via<sp/>shared<sp/>allocation<sp/>record<sp/>and</highlight></codeline>
<codeline lineno="3328"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>return<sp/>that<sp/>record<sp/>for<sp/>allocation<sp/>tracking.</highlight></codeline>
<codeline lineno="3329"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>P&gt;</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record" kindref="compound">Kokkos::Impl::SharedAllocationRecord&lt;&gt;</ref>*<sp/>allocate_shared(</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">Kokkos::Impl::ViewCtorProp&lt;P...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_prop,</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::array_layout<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arg_layout)<sp/>{</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">alloc_prop<sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">Kokkos::Impl::ViewCtorProp</ref>&lt;P...&gt;;</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">execution_space<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>alloc_prop::execution_space;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">memory_space<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::memory_space;</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits::value_type;</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">functor_type<sp/>=</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor&lt;Kokkos::Device&lt;execution_space, memory_space&gt;</ref>,</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type&gt;;</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">record_type<sp/>=</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_record" kindref="compound">Kokkos::Impl::SharedAllocationRecord&lt;memory_space, functor_type&gt;</ref>;</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Query<sp/>the<sp/>mapping<sp/>for<sp/>byte-size<sp/>of<sp/>allocation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>padding<sp/>is<sp/>allowed<sp/>then<sp/>pass<sp/>in<sp/>sizeof<sp/>value<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>padding<sp/>computation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">padding<sp/>=<sp/>std::integral_constant&lt;</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int,<sp/>alloc_prop::allow_padding<sp/>?<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value_type)<sp/>:<sp/>0&gt;;</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/>m_impl_offset<sp/>=<sp/>offset_type(padding(),<sp/>arg_layout);</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alloc_size<sp/>=</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_impl_offset.span()<sp/>*<sp/>MemorySpanSize<sp/>+<sp/>MemorySpanMask)<sp/>&amp;</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(MemorySpanMask);</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>alloc_name<sp/>=</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">Kokkos::Impl::ViewCtorProp&lt;void, std::string&gt;</ref><sp/>const&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_prop)</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value;</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>shared<sp/>memory<sp/>tracking<sp/>record<sp/>with<sp/>allocate<sp/>memory<sp/>from<sp/>the<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/>record_type*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>record<sp/>=<sp/>record_type::allocate(</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">Kokkos::Impl::ViewCtorProp&lt;void, memory_space&gt;</ref><sp/>const&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_prop)</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value,</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alloc_name,<sp/>alloc_size);</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/>m_impl_handle<sp/>=<sp/>handle_type(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">pointer_type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(record-&gt;data()));</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Only<sp/>initialize<sp/>if<sp/>the<sp/>allocation<sp/>is<sp/>non-zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>May<sp/>be<sp/>zero<sp/>if<sp/>one<sp/>of<sp/>the<sp/>dimensions<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alloc_size<sp/>&amp;&amp;<sp/>alloc_prop::initialize)<sp/>{</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>destruction<sp/>is<sp/>only<sp/>required<sp/>when<sp/>construction<sp/>is<sp/>requested.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ViewValueFunctor<sp/>has<sp/>both<sp/>value<sp/>construction<sp/>and<sp/>destruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>record-&gt;m_destroy<sp/>=<sp/>functor_type(</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_view_ctor_prop" kindref="compound">Kokkos::Impl::ViewCtorProp&lt;void, execution_space&gt;</ref><sp/>const&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_prop)</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value,</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(value_type*)m_impl_handle,<sp/>m_impl_offset.span(),<sp/>alloc_name);</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>record-&gt;m_destroy.construct_shared_allocation();</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"></highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>record;</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3388"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3394"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DstTraits,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcTraits&gt;</highlight></codeline>
<codeline lineno="3395" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_dst_traits_00_01_src_traits_00_01typename_01std_1_1e1c3c077b111785296d2fc9410bbe05b1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>&lt;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/>DstTraits,<sp/>SrcTraits,</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;(</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(std::is_same&lt;typename<sp/>SrcTraits::array_layout,<sp/>LayoutStride&gt;::</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value)<sp/>&amp;&amp;<sp/><sp/></highlight><highlight class="comment">//<sp/>Added<sp/>to<sp/>have<sp/>a<sp/>new<sp/>specialization<sp/>for<sp/>SrcType<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LayoutStride</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>mappings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>DstTraits::specialize,<sp/>void&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>SrcTraits::specialize,<sp/>void&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>SrcTraits::array_layout&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>known<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((std::is_same&lt;typename<sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutLeft&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutRight&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutStride&gt;::value)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::is_same&lt;typename<sp/>SrcTraits::array_layout,</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutLeft&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>SrcTraits::array_layout,</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutRight&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>SrcTraits::array_layout,</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutStride&gt;::value))))&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable_space<sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_memory_space_access" kindref="compound">Kokkos::Impl::MemorySpaceAccess</ref>&lt;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::memory_space,</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::memory_space&gt;::assignable</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable_value_type<sp/>=</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::value_type,</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::value_type&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::value_type,</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::const_value_type&gt;::value</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable_dimension<sp/>=</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_assignable" kindref="compound">ViewDimensionAssignable</ref>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::dimension,</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::dimension&gt;::value</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable_layout<sp/>=</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::array_layout&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref>&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DstTraits::dimension::rank<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DstTraits::dimension::rank<sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstTraits::dimension::rank_dynamic<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable_data_type<sp/>=</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_assignable_value_type<sp/>&amp;&amp;<sp/>is_assignable_dimension</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable<sp/>=<sp/>is_assignable_space<sp/>&amp;&amp;<sp/>is_assignable_value_type<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_assignable_dimension<sp/>&amp;&amp;<sp/>is_assignable_layout</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">TrackType</ref><sp/>=<sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">Kokkos::Impl::SharedAllocationTracker</ref>;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">DstType</ref><sp/><sp/><sp/>=<sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping&lt;DstTraits, void&gt;</ref>;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">SrcType</ref><sp/><sp/><sp/>=<sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping&lt;SrcTraits, void&gt;</ref>;</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign(<ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">DstType</ref>&amp;<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">SrcType</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">TrackType</ref>&amp;<sp/>src_track)<sp/>{</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(is_assignable_space,</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;View<sp/>assignment<sp/>must<sp/>have<sp/>compatible<sp/>spaces&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_assignable_value_type,</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;View<sp/>assignment<sp/>must<sp/>have<sp/>same<sp/>value<sp/>type<sp/>or<sp/>const<sp/>=<sp/>non-const&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(is_assignable_dimension,</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;View<sp/>assignment<sp/>must<sp/>have<sp/>compatible<sp/>dimensions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_assignable_layout,</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;View<sp/>assignment<sp/>must<sp/>have<sp/>compatible<sp/>layout<sp/>or<sp/>have<sp/>rank<sp/>&lt;=<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"></highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dst_offset_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstType::offset_type;</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(DstTraits::dimension::rank_dynamic)<sp/>&lt;</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t(SrcTraits::dimension::rank_dynamic))<sp/>{</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dst_dim<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::dimension;</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>assignable<sp/>=<sp/>((1<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN0<sp/>==<sp/>src.dimension_0()</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((2<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN1<sp/>==<sp/>src.dimension_1()</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((3<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN2<sp/>==<sp/>src.dimension_2()</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((4<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN3<sp/>==<sp/>src.dimension_3()</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((5<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN4<sp/>==<sp/>src.dimension_4()</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((6<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN5<sp/>==<sp/>src.dimension_5()</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((7<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN6<sp/>==<sp/>src.dimension_6()</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((8<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN7<sp/>==<sp/>src.dimension_7()</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!assignable)</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;View<sp/>Assignment:<sp/>trying<sp/>to<sp/>assign<sp/>runtime<sp/>dimension<sp/>to<sp/>non<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matching<sp/>compile<sp/>time<sp/>dimension.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.m_impl_offset<sp/>=<sp/>dst_offset_type(src.m_impl_offset);</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.m_impl_handle<sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_data_handle" kindref="compound">Kokkos::Impl::ViewDataHandle&lt;DstTraits&gt;::assign</ref>(</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.m_impl_handle,<sp/>src_track);</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3530"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>specialization<sp/>for<sp/>SrcType<sp/>of<sp/>LayoutStride.<sp/>Runtime<sp/>check<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compatible<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3535"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DstTraits,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcTraits&gt;</highlight></codeline>
<codeline lineno="3536" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01_dst_traits_00_01_src_traits_00_01typename_01std_1_1e98ccb6c5b4de88f404c0cfebecd6851f" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>&lt;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/>DstTraits,<sp/>SrcTraits,</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;(</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>SrcTraits::array_layout,</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutStride&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>DstTraits::specialize,<sp/>void&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>SrcTraits::specialize,<sp/>void&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>SrcTraits::array_layout&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>known<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::is_same&lt;typename<sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutLeft&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutRight&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutStride&gt;::value)))&gt;::type&gt;<sp/>{</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable_space<sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_memory_space_access" kindref="compound">Kokkos::Impl::MemorySpaceAccess</ref>&lt;</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::memory_space,</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::memory_space&gt;::assignable</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable_value_type<sp/>=</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::value_type,</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::value_type&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::value_type,</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::const_value_type&gt;::value</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable_dimension<sp/>=</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_dimension_assignable" kindref="compound">ViewDimensionAssignable</ref>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::dimension,</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::dimension&gt;::value</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable_data_type<sp/>=</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_assignable_value_type<sp/>&amp;&amp;<sp/>is_assignable_dimension</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/>is_assignable<sp/>=<sp/>is_assignable_space<sp/>&amp;&amp;<sp/>is_assignable_value_type<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_assignable_dimension</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">TrackType</ref><sp/>=<sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">Kokkos::Impl::SharedAllocationTracker</ref>;</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">DstType</ref><sp/><sp/><sp/>=<sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping&lt;DstTraits, void&gt;</ref>;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">SrcType</ref><sp/><sp/><sp/>=<sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping&lt;SrcTraits, void&gt;</ref>;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>assignable_layout_check(<ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">DstType</ref>&amp;,</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">SrcType</ref>&amp;<sp/>src)<sp/><sp/></highlight><highlight class="comment">//<sp/>Runtime<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strides[9];</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>assignable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/>src.stride(strides);</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>exp_stride<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>&gt;::value)<sp/>{</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>src.Rank;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>exp_stride<sp/>*=<sp/>src.extent(i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strides[i]<sp/>!=<sp/>exp_stride)<sp/>{</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assignable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::array_layout,</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>&gt;::value)<sp/>{</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>src.Rank<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>src.Rank<sp/>-<sp/>1)<sp/>exp_stride<sp/>*=<sp/>src.extent(i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strides[i]<sp/>!=<sp/>exp_stride)<sp/>{</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assignable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>assignable;</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign(<ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">DstType</ref>&amp;<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">SrcType</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="union_kokkos_1_1_impl_1_1_shared_allocation_tracker" kindref="compound">TrackType</ref>&amp;<sp/>src_track)<sp/>{</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(is_assignable_space,</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;View<sp/>assignment<sp/>must<sp/>have<sp/>compatible<sp/>spaces&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_assignable_value_type,</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;View<sp/>assignment<sp/>must<sp/>have<sp/>same<sp/>value<sp/>type<sp/>or<sp/>const<sp/>=<sp/>non-const&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"></highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(is_assignable_dimension,</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;View<sp/>assignment<sp/>must<sp/>have<sp/>compatible<sp/>dimensions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>assignable_layout<sp/>=<sp/>assignable_layout_check(dst,<sp/>src);<sp/><sp/></highlight><highlight class="comment">//<sp/>Runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!assignable_layout)</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight><highlight class="stringliteral">&quot;View<sp/>assignment<sp/>must<sp/>have<sp/>compatible<sp/>layouts\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dst_offset_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstType::offset_type;</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"></highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(DstTraits::dimension::rank_dynamic)<sp/>&lt;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(SrcTraits::dimension::rank_dynamic))<sp/>{</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dst_dim<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstTraits::dimension;</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>assignable<sp/>=<sp/>((1<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN0<sp/>==<sp/>src.dimension_0()</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((2<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN1<sp/>==<sp/>src.dimension_1()</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((3<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN2<sp/>==<sp/>src.dimension_2()</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((4<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN3<sp/>==<sp/>src.dimension_3()</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((5<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN4<sp/>==<sp/>src.dimension_4()</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((6<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN5<sp/>==<sp/>src.dimension_5()</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((7<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN6<sp/>==<sp/>src.dimension_6()</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((8<sp/>&gt;<sp/>DstTraits::dimension::rank_dynamic<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/>&lt;=<sp/>SrcTraits::dimension::rank_dynamic)</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>dst_dim::ArgN7<sp/>==<sp/>src.dimension_7()</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!assignable)</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;View<sp/>Assignment:<sp/>trying<sp/>to<sp/>assign<sp/>runtime<sp/>dimension<sp/>to<sp/>non<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matching<sp/>compile<sp/>time<sp/>dimension.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.m_impl_offset<sp/>=<sp/>dst_offset_type(src.m_impl_offset);</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.m_impl_handle<sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_data_handle" kindref="compound">Kokkos::Impl::ViewDataHandle&lt;DstTraits&gt;::assign</ref>(</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.m_impl_handle,<sp/>src_track);</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3683"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Subview<sp/>mapping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deduce<sp/>destination<sp/>view<sp/>type<sp/>from<sp/>source<sp/>view<sp/>traits<sp/>and<sp/>subview<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueType,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Exts,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="3691" refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" kindref="compound">SubViewDataTypeImpl</ref>;</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>base<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="3695" refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01void_00_01_value_type_00_01_kokkos_1_1_experimental_1_1_extents_3_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" kindref="compound">SubViewDataTypeImpl</ref>&lt;void,<sp/>ValueType,<sp/>Kokkos::<ref refid="struct_kokkos_1_1_experimental_1_1_extents" kindref="compound">Experimental::Extents</ref>&lt;&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>ValueType;</highlight></codeline>
<codeline lineno="3697"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>for<sp/>integral<sp/>args,<sp/>subview<sp/>doesn&apos;t<sp/>have<sp/>that<sp/>dimension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueType,<sp/>ptrdiff_t<sp/>Ext,<sp/>ptrdiff_t...<sp/>Exts,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Integral,</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="3702" refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01typename_01std_1_1enable__if_3_01std_1_1iaeb7d5ccccbd3ef003685b3c8050b160" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" kindref="compound">SubViewDataTypeImpl</ref>&lt;</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_integral&lt;typename<sp/>std::decay&lt;Integral&gt;::type&gt;::value&gt;::type,</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueType,<sp/><ref refid="struct_kokkos_1_1_experimental_1_1_extents" kindref="compound">Kokkos::Experimental::Extents</ref>&lt;Ext,<sp/>Exts...&gt;,<sp/>Integral,<sp/>Args...&gt;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" kindref="compound">SubViewDataTypeImpl</ref>&lt;void,<sp/>ValueType,</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Experimental::Extents&lt;Exts...&gt;,<sp/>Args...&gt;<sp/>{};</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>for<sp/>ALL<sp/>slice,<sp/>subview<sp/>has<sp/>the<sp/>same<sp/>dimension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueType,<sp/>ptrdiff_t<sp/>Ext,<sp/>ptrdiff_t...<sp/>Exts,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="3711" refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01void_00_01_value_type_00_01_kokkos_1_1_ex38d52f2174174c3ac37061db5ee00104" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" kindref="compound">SubViewDataTypeImpl</ref>&lt;void,<sp/>ValueType,</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::<ref refid="struct_kokkos_1_1_experimental_1_1_extents" kindref="compound">Experimental::Extents</ref>&lt;Ext,<sp/>Exts...&gt;,<sp/><ref refid="struct_kokkos_1_1_impl_1_1_a_l_l__t" kindref="compound">ALL_t</ref>,</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...&gt;</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" kindref="compound">SubViewDataTypeImpl</ref>&lt;void,<sp/>typename<sp/>ApplyExtent&lt;ValueType,<sp/>Ext&gt;::type,</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Experimental::Extents&lt;Exts...&gt;,<sp/>Args...&gt;<sp/>{};</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>for<sp/>pair-style<sp/>slice,<sp/>subview<sp/>has<sp/>dynamic<sp/>dimension,<sp/>since<sp/>pair<sp/>doesn&apos;t<sp/>give</highlight></codeline>
<codeline lineno="3718"><highlight class="comment"><sp/>*<sp/>static<sp/>sizes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Since<sp/>we<sp/>don&apos;t<sp/>allow<sp/>interleaving<sp/>of<sp/>dynamic<sp/>and<sp/>static<sp/>extents,<sp/>make<sp/>all<sp/>of</highlight></codeline>
<codeline lineno="3720"><highlight class="comment"><sp/>*<sp/>the<sp/>dimensions<sp/>to<sp/>the<sp/>left<sp/>dynamic<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueType,<sp/>ptrdiff_t<sp/>Ext,<sp/>ptrdiff_t...<sp/>Exts,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PairLike,</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="3723" refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl_3_01typename_01std_1_1enable__if_3_01is__paire12d285196d053141a48962706cc3dd7" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" kindref="compound">SubViewDataTypeImpl</ref>&lt;</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;is_pair_like&lt;PairLike&gt;::value&gt;::type,<sp/>ValueType,</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_experimental_1_1_extents" kindref="compound">Kokkos::Experimental::Extents</ref>&lt;Ext,<sp/>Exts...&gt;,<sp/>PairLike,<sp/>Args...&gt;</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" kindref="compound">SubViewDataTypeImpl</ref>&lt;</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void,<sp/>typename<sp/>make_all_extents_into_pointers&lt;ValueType&gt;::type*,</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::Experimental::Extents&lt;Exts...&gt;,<sp/>Args...&gt;<sp/>{};</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueType,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Exts,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="3731" refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type" kindref="compound">SubViewDataType</ref><sp/>:<sp/><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type_impl" kindref="compound">SubViewDataTypeImpl</ref>&lt;void,<sp/>ValueType,<sp/>Exts,<sp/>Args...&gt;<sp/>{};</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcTraits,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="3736" refid="class_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_01e5386814e1467172760ff6b56fa20ecf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping</ref>&lt;</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/>typename<sp/>std::enable_if&lt;(</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>SrcTraits::specialize,<sp/>void&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::is_same&lt;typename<sp/>SrcTraits::array_layout,</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutLeft&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>SrcTraits::array_layout,</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutRight&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;typename<sp/>SrcTraits::array_layout,</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::LayoutStride&gt;::value))&gt;::type,</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcTraits,<sp/>Args...&gt;<sp/>{</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(SrcTraits::rank<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args),</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Subview<sp/>mapping<sp/>requires<sp/>one<sp/>argument<sp/>for<sp/>each<sp/>dimension<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;source<sp/>View&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/>RZ<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/>R0<sp/>=<sp/>bool(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;0, Args...&gt;::value</ref>),</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/>R1<sp/>=<sp/>bool(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;1, Args...&gt;::value</ref>),</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/>R2<sp/>=<sp/>bool(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;2, Args...&gt;::value</ref>),</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/>R3<sp/>=<sp/>bool(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;3, Args...&gt;::value</ref>),</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/>R4<sp/>=<sp/>bool(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;4, Args...&gt;::value</ref>),</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/>R5<sp/>=<sp/>bool(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;5, Args...&gt;::value</ref>),</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/>R6<sp/>=<sp/>bool(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;6, Args...&gt;::value</ref>),</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/>R7<sp/>=<sp/>bool(<ref refid="struct_kokkos_1_1_impl_1_1is__integral__extent" kindref="compound">is_integral_extent&lt;7, Args...&gt;::value</ref>)</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/>rank<sp/>=<sp/>unsigned(R0)<sp/>+<sp/>unsigned(R1)<sp/>+<sp/>unsigned(R2)<sp/>+<sp/>unsigned(R3)<sp/>+</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned(R4)<sp/>+<sp/>unsigned(R5)<sp/>+<sp/>unsigned(R6)<sp/>+<sp/>unsigned(R7)</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>right-most<sp/>rank<sp/>is<sp/>a<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/>R0_rev<sp/>=</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0<sp/>==<sp/>SrcTraits::rank</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>RZ</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(1<sp/>==<sp/>SrcTraits::rank</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>R0</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(2<sp/>==<sp/>SrcTraits::rank</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>R1</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(3<sp/>==<sp/>SrcTraits::rank</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>R2</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(4<sp/>==<sp/>SrcTraits::rank</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>R3</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(5<sp/>==<sp/>SrcTraits::rank</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>R4</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(6<sp/>==<sp/>SrcTraits::rank</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>R5</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(7<sp/>==<sp/>SrcTraits::rank</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>R6</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>R7))))))))</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subview&apos;s<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">array_layout<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Same<sp/>array<sp/>layout<sp/>IF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(rank<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>output<sp/>rank<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="struct_kokkos_1_1_impl_1_1_subview_legal_args_compile_time" kindref="compound">SubviewLegalArgsCompileTime</ref>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::array_layout,</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::array_layout,<sp/>rank,</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcTraits::rank,<sp/>0,<sp/>Args...&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OutputRank<sp/>1<sp/>or<sp/>2,<sp/>InputLayout<sp/>Left,<sp/>Interval<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>single<sp/>stride<sp/>one<sp/>or<sp/>second<sp/>index<sp/>has<sp/>a<sp/>stride.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(rank<sp/>&lt;=<sp/>2<sp/>&amp;&amp;<sp/>R0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::array_layout,</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>&gt;::value)<sp/><sp/></highlight><highlight class="comment">//<sp/>replace<sp/>with<sp/>input<sp/>rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OutputRank<sp/>1<sp/>or<sp/>2,<sp/>InputLayout<sp/>Right,<sp/>Interval<sp/>[InputRank-1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>single<sp/>stride<sp/>one<sp/>or<sp/>second<sp/>index<sp/>has<sp/>a<sp/>stride.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(rank<sp/>&lt;=<sp/>2<sp/>&amp;&amp;<sp/>R0_rev<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::array_layout,</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>&gt;::value)<sp/><sp/></highlight><highlight class="comment">//<sp/>replace<sp/>input<sp/>rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::array_layout,<sp/><ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref>&gt;::type;</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::value_type;</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">data_type<sp/>=</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_sub_view_data_type" kindref="compound">SubViewDataType</ref>&lt;value_type,</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_parse_view_extents" kindref="compound">Kokkos::Impl::ParseViewExtents</ref>&lt;</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::data_type&gt;::type,</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...&gt;::type;</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_view_traits" kindref="compound">traits_type</ref><sp/>=<sp/><ref refid="struct_kokkos_1_1_view_traits" kindref="compound">Kokkos::ViewTraits</ref>&lt;data_type,<sp/>array_layout,</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::device_type,</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::memory_traits&gt;;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_view" kindref="compound">type</ref><sp/>=</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt;data_type,<sp/>array_layout,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::device_type,</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::memory_traits&gt;;</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MemoryTraits&gt;</highlight></codeline>
<codeline lineno="3829" refid="struct_kokkos_1_1_impl_1_1_view_mapping_3_01typename_01std_1_1enable__if_3_07std_1_1is__same_3_08b1c6ef2380458c1b1a9604a1caef735" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">apply<sp/>{</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="struct_kokkos_1_1is__memory__traits" kindref="compound">Kokkos::is_memory_traits&lt;MemoryTraits&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_view_traits" kindref="compound">traits_type</ref><sp/>=</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_view_traits" kindref="compound">Kokkos::ViewTraits</ref>&lt;data_type,<sp/>array_layout,</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::device_type,<sp/><ref refid="struct_kokkos_1_1_memory_traits" kindref="compound">MemoryTraits</ref>&gt;;</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_kokkos_1_1_view" kindref="compound">type</ref><sp/>=<sp/><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt;data_type,<sp/>array_layout,</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcTraits::device_type,<sp/><ref refid="struct_kokkos_1_1_memory_traits" kindref="compound">MemoryTraits</ref>&gt;;</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>presumed<sp/>type<sp/>is<sp/>&apos;ViewMapping&lt;<sp/>traits_type<sp/>,<sp/>void<sp/>&gt;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>a<sp/>compatible<sp/>ViewMapping<sp/>is<sp/>acceptable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DstTraits&gt;</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign(</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping&lt;DstTraits, void&gt;</ref>&amp;<sp/>dst,</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping&lt;SrcTraits, void&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping&lt;DstTraits, traits_type, void&gt;::is_assignable</ref>,</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Subview<sp/>destination<sp/>type<sp/>must<sp/>be<sp/>compatible<sp/>with<sp/>subview<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;derived<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">DstType<sp/>=<sp/><ref refid="class_kokkos_1_1_impl_1_1_view_mapping" kindref="compound">ViewMapping&lt;DstTraits, void&gt;</ref>;</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dst_offset_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstType::offset_type;</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_kokkos_1_1_impl_1_1_subview_extents" kindref="compound">SubviewExtents&lt;SrcTraits::rank, rank&gt;</ref><sp/>extents(src.m_impl_offset.m_dim,</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args...);</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.m_impl_offset<sp/>=<sp/>dst_offset_type(src.m_impl_offset,<sp/>extents);</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.m_impl_handle<sp/>=<sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_data_handle" kindref="compound">ViewDataHandle&lt;DstTraits&gt;::assign</ref>(</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.m_impl_handle,</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.m_impl_offset(extents.domain_offset(0),<sp/>extents.domain_offset(1),</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extents.domain_offset(2),<sp/>extents.domain_offset(3),</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extents.domain_offset(4),<sp/>extents.domain_offset(5),</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extents.domain_offset(6),<sp/>extents.domain_offset(7)));</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3866"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"></highlight></codeline>
<codeline lineno="3870"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Kokkos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Kokkos<sp/>{</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MapType&gt;</highlight></codeline>
<codeline lineno="3880"><highlight class="normal">KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>view_verify_operator_bounds(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MapType&amp;)<sp/>{</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"></highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MapType,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">iType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="3885"><highlight class="normal">KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>view_verify_operator_bounds(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MapType&amp;<sp/>map,</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iType&amp;<sp/>i,</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(i)<sp/>&lt;<sp/>map.extent(R))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view_verify_operator_bounds&lt;R<sp/>+<sp/>1&gt;(map,<sp/>args...);</highlight></codeline>
<codeline lineno="3890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MapType&gt;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>view_error_operator_bounds(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MapType&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"></highlight></codeline>
<codeline lineno="3895"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MapType,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">iType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>view_error_operator_bounds(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MapType&amp;<sp/>map,</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iType&amp;<sp/>i,<sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>snprintf(</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf,<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%ld<sp/>&lt;<sp/>%ld<sp/>%c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i),</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(map.extent(R)),<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/>view_error_operator_bounds&lt;R<sp/>+<sp/>1&gt;(buf<sp/>+<sp/>n,<sp/>len<sp/>-<sp/>n,<sp/>map,<sp/>args...);</highlight></codeline>
<codeline lineno="3902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"></highlight></codeline>
<codeline lineno="3904"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HOST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3905"><highlight class="normal"></highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>#3:<sp/>is<sp/>the<sp/>View<sp/>managed<sp/>as<sp/>determined<sp/>by<sp/>the<sp/>MemoryTraits?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MapType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_managed<sp/>=<sp/>(MapType::is_managed<sp/>!=<sp/>0)&gt;</highlight></codeline>
<codeline lineno="3908" refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device" kindref="compound">OperatorBoundsErrorOnDevice</ref>;</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"></highlight></codeline>
<codeline lineno="3910"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MapType&gt;</highlight></codeline>
<codeline lineno="3911" refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device_3_01_map_type_00_01false_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device" kindref="compound">OperatorBoundsErrorOnDevice</ref>&lt;MapType,<sp/>false&gt;<sp/>{</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run(MapType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>{<sp/>Kokkos::abort(</highlight><highlight class="stringliteral">&quot;View<sp/>bounds<sp/>error&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="3914"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"></highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MapType&gt;</highlight></codeline>
<codeline lineno="3917" refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device_3_01_map_type_00_01true_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_kokkos_1_1_impl_1_1_operator_bounds_error_on_device" kindref="compound">OperatorBoundsErrorOnDevice</ref>&lt;MapType,<sp/>true&gt;<sp/>{</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/>KOKKOS_INLINE_FUNCTION</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run(MapType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>map)<sp/>{</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_kokkos_1_1_impl_1_1_shared_allocation_header" kindref="compound">SharedAllocationHeader</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>header<sp/>=</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedAllocationHeader::get_header((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(map.data()));</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>label<sp/>=<sp/>header-&gt;label();</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>LEN<sp/>=<sp/>128<sp/>};</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[LEN];</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>first_part<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;View<sp/>bounds<sp/>error<sp/>of<sp/>view<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>end<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>msg<sp/>+<sp/>LEN<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>p2<sp/>=<sp/>first_part;<sp/>(*p2<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(p<sp/>&lt;<sp/>end);<sp/>++p,<sp/>++p2)<sp/>{</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>*p2;</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>p2<sp/>=<sp/>label;<sp/>(*p2<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(p<sp/>&lt;<sp/>end);<sp/>++p,<sp/>++p2)<sp/>{</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>*p2;</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/>*p<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::abort(msg);</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3937"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>#2:<sp/>does<sp/>the<sp/>ViewMapping<sp/>have<sp/>the<sp/>printable_label_typedef<sp/>defined?</highlight></codeline>
<codeline lineno="3940"><highlight class="comment"><sp/><sp/><sp/>See<sp/>above<sp/>that<sp/>only<sp/>the<sp/>non-specialized<sp/>standard-layout<sp/>ViewMapping<sp/>has</highlight></codeline>
<codeline lineno="3941"><highlight class="comment"><sp/><sp/><sp/>this<sp/>defined<sp/>by<sp/>default.</highlight></codeline>
<codeline lineno="3942"><highlight class="comment"><sp/><sp/><sp/>The<sp/>existence<sp/>of<sp/>this<sp/>alias<sp/>indicates<sp/>the<sp/>existence<sp/>of<sp/>MapType::is_managed</highlight></codeline>
<codeline lineno="3943"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3944"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">printable_label_typedef_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::printable_label_typedef;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight></codeline>
<codeline lineno="3947"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Map&gt;</highlight></codeline>
<codeline lineno="3948"><highlight class="normal">KOKKOS_FUNCTION</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;!is_detected&lt;printable_label_typedef_t,<sp/>Map&gt;::value&gt;</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/>operator_bounds_error_on_device(Map<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>{</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/>Kokkos::abort(</highlight><highlight class="stringliteral">&quot;View<sp/>bounds<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Map&gt;</highlight></codeline>
<codeline lineno="3955"><highlight class="normal">KOKKOS_FUNCTION</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;is_detected&lt;printable_label_typedef_t,<sp/>Map&gt;::value&gt;</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/>operator_bounds_error_on_device(Map<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>map)<sp/>{</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/>OperatorBoundsErrorOnDevice&lt;Map&gt;::run(map);</highlight></codeline>
<codeline lineno="3959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!<sp/>defined(<sp/>KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HOST<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"></highlight></codeline>
<codeline lineno="3963"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MemorySpace,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ViewType,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MapType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="3964"><highlight class="normal">KOKKOS_INLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>view_verify_operator_bounds(</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_kokkos_1_1_impl_1_1_view_tracker" kindref="compound">Kokkos::Impl::ViewTracker&lt;ViewType&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tracker,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MapType&amp;<sp/>map,</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!view_verify_operator_bounds&lt;0&gt;(map,<sp/>args...))<sp/>{</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HOST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>LEN<sp/>=<sp/>1024<sp/>};</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[LEN];</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>label<sp/>=</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracker.m_tracker.template<sp/>get_label&lt;MemorySpace&gt;();</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buffer,<sp/>LEN,<sp/></highlight><highlight class="stringliteral">&quot;View<sp/>bounds<sp/>error<sp/>of<sp/>view<sp/>%s<sp/>(&quot;</highlight><highlight class="normal">,<sp/>label.c_str());</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/>view_error_operator_bounds&lt;0&gt;(buffer<sp/>+<sp/>n,<sp/>LEN<sp/>-<sp/>n,<sp/>map,<sp/>args...);</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/>Kokkos::Impl::throw_runtime_exception(std::string(buffer));</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>#1:<sp/>is<sp/>there<sp/>a<sp/>SharedAllocationRecord?</highlight></codeline>
<codeline lineno="3979"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(we<sp/>won&apos;t<sp/>use<sp/>it,<sp/>but<sp/>if<sp/>its<sp/>not<sp/>there<sp/>then<sp/>there<sp/>isn&apos;t</highlight></codeline>
<codeline lineno="3980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>corresponding<sp/>SharedAllocationHeader<sp/>containing<sp/>a<sp/>label).</highlight></codeline>
<codeline lineno="3981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>check<sp/>should<sp/>cover<sp/>the<sp/>case<sp/>of<sp/>Views<sp/>that<sp/>don&apos;t</highlight></codeline>
<codeline lineno="3982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>the<sp/>Unmanaged<sp/>trait<sp/>but<sp/>were<sp/>initialized<sp/>by<sp/>pointer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tracker.m_tracker.has_record())<sp/>{</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>operator_bounds_error_on_device(map);</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kokkos::abort(</highlight><highlight class="stringliteral">&quot;View<sp/>bounds<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"></highlight></codeline>
<codeline lineno="3992"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>Impl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3993"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>Kokkos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>KOKKOS_EXPERIMENTAL_VIEW_MAPPING_HPP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp"/>
  </compounddef>
</doxygen>
