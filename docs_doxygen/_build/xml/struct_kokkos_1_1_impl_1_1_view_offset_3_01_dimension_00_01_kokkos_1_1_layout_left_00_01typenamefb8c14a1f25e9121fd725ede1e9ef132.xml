<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class Dimension</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a038953220821ab12d473f89df24e9c01" prot="public" static="no">
        <type>std::true_type</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::is_mapping_plugin =  std::true_type</definition>
        <argsstring></argsstring>
        <name>is_mapping_plugin</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::is_mapping_plugin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1160" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1aa7e06b899c18dba4c222ac873b21033e" prot="public" static="no">
        <type>std::true_type</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::is_regular =  std::true_type</definition>
        <argsstring></argsstring>
        <name>is_regular</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::is_regular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1161" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a8156d47ca34d883721027f2d5080d039" prot="public" static="no">
        <type>size_t</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::size_type =  size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1163" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1afcc8081a8b89069db172febaf3440cbd" prot="public" static="no">
        <type>Dimension</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_type =  Dimension</definition>
        <argsstring></argsstring>
        <name>dimension_type</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1164" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a90387b4836de026d596145acf96bdb52" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref></type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::array_layout =  Kokkos::LayoutLeft</definition>
        <argsstring></argsstring>
        <name>array_layout</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::array_layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1165" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a2675211b82e3eb6afe2ca74d05dc486f" prot="public" static="no" mutable="no">
        <type>dimension_type</type>
        <definition>dimension_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::m_dim</definition>
        <argsstring></argsstring>
        <name>m_dim</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::m_dim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1167" column="18" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a0d2642c5ba4daf6f86ff01e42bb813bf" prot="public" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::m_stride</definition>
        <argsstring></argsstring>
        <name>m_stride</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::m_stride</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1168" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a4b6699ca30edaa6a16d6a5119a149cf1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1174" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1174" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a970b0ae8bb17059ba08ffa295cc32405" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1180" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1180" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1abac985f69dc9f3e0733f523916063920" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1187" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1187" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ac40151ff06ddbb0e210fcc2fd281cc41" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1195" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1195" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a605cd103752e142e52ddaf372fed0b39" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1204" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1204" bodyend="1211"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a271edc7b027cb16d83c928f9113b3772" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1216" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1216" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ae87b417cb476f635728975ca6a0ec4f2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
          <param>
            <type>typename I6</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5, I6 const &amp;i6) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>I6 const &amp;</type>
          <declname>i6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1229" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1229" bodyend="1239"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a4bc7173ce369c1ffd1a44c5d8357a3fc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
          <param>
            <type>typename I6</type>
          </param>
          <param>
            <type>typename I7</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5, I6 const &amp;i6, I7 const &amp;i7) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>I6 const &amp;</type>
          <declname>i6</declname>
        </param>
        <param>
          <type>I7 const &amp;</type>
          <declname>i7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1244" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1244" bodyend="1257"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a30a57b2f13e9f5a70c10167c158e803b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">array_layout</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr array_layout Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::layout</definition>
        <argsstring>() const</argsstring>
        <name>layout</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1262" column="26" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1262" bodyend="1265"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1adecfae486c6d77916650f1353262ada8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_0</definition>
        <argsstring>() const</argsstring>
        <name>dimension_0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1267" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1267" bodyend="1269"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a7a86d0a5342b1a82725eb7bdeba8b382" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_1</definition>
        <argsstring>() const</argsstring>
        <name>dimension_1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1270" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1270" bodyend="1272"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a051a74d223d5545574c853dbce8dea1c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_2</definition>
        <argsstring>() const</argsstring>
        <name>dimension_2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1273" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1273" bodyend="1275"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ad81c2942b3bf344620b70f06b08f9d37" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_3</definition>
        <argsstring>() const</argsstring>
        <name>dimension_3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1276" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1276" bodyend="1278"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a06f62c0ef74127e585b0612fbff10910" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_4</definition>
        <argsstring>() const</argsstring>
        <name>dimension_4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1279" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1279" bodyend="1281"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a98fb01e1a0f6f44bd1aaadac5f12539c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_5</definition>
        <argsstring>() const</argsstring>
        <name>dimension_5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1282" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1282" bodyend="1284"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ab2665c703c851c71e36620915ae6258f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_6</definition>
        <argsstring>() const</argsstring>
        <name>dimension_6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1285" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1285" bodyend="1287"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a988af16556d14a0b1b41164979a17990" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_7</definition>
        <argsstring>() const</argsstring>
        <name>dimension_7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1288" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1288" bodyend="1290"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1abee23274c97be4dec62faf366ebc94c0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1294" column="23" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1294" bodyend="1297"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a53117b57293539557579397d10bc843f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::span</definition>
        <argsstring>() const</argsstring>
        <name>span</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::span</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1301" column="23" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1301" bodyend="1304"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1aee770a441169823f4012291456cff186" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr bool</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr bool Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::span_is_contiguous</definition>
        <argsstring>() const</argsstring>
        <name>span_is_contiguous</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::span_is_contiguous</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1306" column="41" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1306" bodyend="1308"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a3bd917660b45d24033a7055d1706aef6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_0</definition>
        <argsstring>() const</argsstring>
        <name>stride_0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1311" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1311" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a4f31766d15bd279dd78e9ee788b6b6fe" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_1</definition>
        <argsstring>() const</argsstring>
        <name>stride_1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1312" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1312" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a18d57c5bd24f88cad3e802e273fcb736" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_2</definition>
        <argsstring>() const</argsstring>
        <name>stride_2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1315" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1315" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a9322c82b3d017268ddf1ce07edf43e2f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_3</definition>
        <argsstring>() const</argsstring>
        <name>stride_3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1318" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1318" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a4644b1c7b2f1aa86109c51c697eafa9c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_4</definition>
        <argsstring>() const</argsstring>
        <name>stride_4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1321" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1321" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a56453e5a78dd2a7bed10586e5fab1f9c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_5</definition>
        <argsstring>() const</argsstring>
        <name>stride_5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1324" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1324" bodyend="1326"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ae7c06c6867c6f88f25620e54a94ceaa6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_6</definition>
        <argsstring>() const</argsstring>
        <name>stride_6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1327" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1327" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1acce6e227e66d4e0d250ad7258b813b71" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_7</definition>
        <argsstring>() const</argsstring>
        <name>stride_7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1330" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1330" bodyend="1333"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a8569615af56c14b6958676655db22d13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename iType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride</definition>
        <argsstring>(iType *const s) const</argsstring>
        <name>stride</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride</qualifiedname>
        <param>
          <type>iType *const</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1337" column="31" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1337" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1abf01f30d7ad98d6b4f2fbf5cc3042dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>()=default</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1418" column="3"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a61ffcc0282ecd065dfaaf6588ce67c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset &amp;)=default</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1419" column="3"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ab1ecdf300f654e16e397f56b1b2d36e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        <definition>ViewOffset &amp; Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator=</definition>
        <argsstring>(const ViewOffset &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1420" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a13da14a6c2471fe19bf9fa1f1af80cb4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>TrivialScalarSize</declname>
            <defname>TrivialScalarSize</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(std::integral_constant&lt; unsigned, TrivialScalarSize &gt; const &amp;, Kokkos::LayoutLeft const &amp;arg_layout)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>std::integral_constant&lt; unsigned, TrivialScalarSize &gt; const &amp;</type>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref> const &amp;</type>
          <declname>arg_layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1426" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1426" bodyend="1433"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a3df9d51f4cac1f2203d745bc031f1a07" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DimRHS</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset&lt; DimRHS, Kokkos::LayoutLeft, void &gt; &amp;rhs)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; DimRHS, <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>, void &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1436" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1436" bodyend="1444"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a92c23bc7e63868abde423b1915246520" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DimRHS</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset&lt; DimRHS, Kokkos::LayoutStride, void &gt; &amp;rhs)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; DimRHS, <ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref>, void &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1447" column="26" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1447" bodyend="1457"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a04256a240a7c1fe13188e7b645a8bd11" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DimRHS</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset&lt; DimRHS, Kokkos::LayoutLeft, void &gt; &amp;rhs, const SubviewExtents&lt; DimRHS::rank, dimension_type::rank &gt; &amp;sub)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; DimRHS, <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">Kokkos::LayoutLeft</ref>, void &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_subview_extents" kindref="compound">SubviewExtents</ref>&lt; DimRHS::rank, dimension_type::rank &gt; &amp;</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1467" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1467" bodyend="1494"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1156" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1159" bodyend="1495"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a90387b4836de026d596145acf96bdb52" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>array_layout</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1adecfae486c6d77916650f1353262ada8" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a7a86d0a5342b1a82725eb7bdeba8b382" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a051a74d223d5545574c853dbce8dea1c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ad81c2942b3bf344620b70f06b08f9d37" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a06f62c0ef74127e585b0612fbff10910" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a98fb01e1a0f6f44bd1aaadac5f12539c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ab2665c703c851c71e36620915ae6258f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a988af16556d14a0b1b41164979a17990" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1afcc8081a8b89069db172febaf3440cbd" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_type</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a038953220821ab12d473f89df24e9c01" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>is_mapping_plugin</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1aa7e06b899c18dba4c222ac873b21033e" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>is_regular</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a30a57b2f13e9f5a70c10167c158e803b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>layout</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a2675211b82e3eb6afe2ca74d05dc486f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>m_dim</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a0d2642c5ba4daf6f86ff01e42bb813bf" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>m_stride</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a4b6699ca30edaa6a16d6a5119a149cf1" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a970b0ae8bb17059ba08ffa295cc32405" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1abac985f69dc9f3e0733f523916063920" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ac40151ff06ddbb0e210fcc2fd281cc41" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a605cd103752e142e52ddaf372fed0b39" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a271edc7b027cb16d83c928f9113b3772" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ae87b417cb476f635728975ca6a0ec4f2" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a4bc7173ce369c1ffd1a44c5d8357a3fc" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ab1ecdf300f654e16e397f56b1b2d36e0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator=</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1abee23274c97be4dec62faf366ebc94c0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>size</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a8156d47ca34d883721027f2d5080d039" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>size_type</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a53117b57293539557579397d10bc843f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>span</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1aee770a441169823f4012291456cff186" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>span_is_contiguous</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a8569615af56c14b6958676655db22d13" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a3bd917660b45d24033a7055d1706aef6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a4f31766d15bd279dd78e9ee788b6b6fe" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a18d57c5bd24f88cad3e802e273fcb736" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a9322c82b3d017268ddf1ce07edf43e2f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a4644b1c7b2f1aa86109c51c697eafa9c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a56453e5a78dd2a7bed10586e5fab1f9c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1ae7c06c6867c6f88f25620e54a94ceaa6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1acce6e227e66d4e0d250ad7258b813b71" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1abf01f30d7ad98d6b4f2fbf5cc3042dd9" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a61ffcc0282ecd065dfaaf6588ce67c07" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a13da14a6c2471fe19bf9fa1f1af80cb4" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a3df9d51f4cac1f2203d745bc031f1a07" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a92c23bc7e63868abde423b1915246520" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_left_00_01typenamefb8c14a1f25e9121fd725ede1e9ef132_1a04256a240a7c1fe13188e7b645a8bd11" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutLeft, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
