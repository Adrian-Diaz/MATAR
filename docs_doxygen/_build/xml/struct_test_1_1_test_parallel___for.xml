<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_test_1_1_test_parallel___for" kind="struct" language="C++" prot="public">
    <compoundname>Test::TestParallel_For</compoundname>
    <templateparamlist>
      <param>
        <type>class ExecSpace</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_test_1_1_test_parallel___for_1ac4798e8afa32d65a190e2f47032a769e" prot="public" static="no">
        <type>typename ExecSpace::memory_space</type>
        <definition>using Test::TestParallel_For&lt; ExecSpace &gt;::d_memspace_type =  typename ExecSpace::memory_space</definition>
        <argsstring></argsstring>
        <name>d_memspace_type</name>
        <qualifiedname>Test::TestParallel_For::d_memspace_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="72" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_test_parallel___for_1a8ff32a48b36a3a6bb146db82b26720f9" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_host_space" kindref="compound">Kokkos::HostSpace</ref></type>
        <definition>using Test::TestParallel_For&lt; ExecSpace &gt;::h_memspace_type =  Kokkos::HostSpace</definition>
        <argsstring></argsstring>
        <name>h_memspace_type</name>
        <qualifiedname>Test::TestParallel_For::h_memspace_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="73" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test_1_1_test_parallel___for_1ac0af67bba374cc3456c6fae479da285e" prot="public" static="no" mutable="no">
        <type>value_type *</type>
        <definition>value_type* Test::TestParallel_For&lt; ExecSpace &gt;::deviceData</definition>
        <argsstring></argsstring>
        <name>deviceData</name>
        <qualifiedname>Test::TestParallel_For::deviceData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="75" column="14" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_test_parallel___for_1aa288f4b0b1e2e874c8f9379684468da1" prot="public" static="no" mutable="no">
        <type>value_type *</type>
        <definition>value_type * Test::TestParallel_For&lt; ExecSpace &gt;::hostData</definition>
        <argsstring></argsstring>
        <name>hostData</name>
        <qualifiedname>Test::TestParallel_For::hostData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="75" column="25" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_test_parallel___for_1af1f56f21e09a74033d6617589a9cc57d" prot="public" static="no" mutable="no">
        <type>const value_type</type>
        <definition>const value_type Test::TestParallel_For&lt; ExecSpace &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Test::TestParallel_For::value</qualifiedname>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="76" column="20" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_1_1_test_parallel___for_1a2d8b4e74a908948d5a118a8913128231" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test::TestParallel_For&lt; ExecSpace &gt;::correctness_check</definition>
        <argsstring>(value_type *data)</argsstring>
        <name>correctness_check</name>
        <qualifiedname>Test::TestParallel_For::correctness_check</qualifiedname>
        <param>
          <type>value_type *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="79" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_test_parallel___for_1a3f10ea2fb279a0838ac955f1f44bd86a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MemSpace</type>
          </param>
        </templateparamlist>
        <type>value_type *</type>
        <definition>value_type * Test::TestParallel_For&lt; ExecSpace &gt;::allocate_mem</definition>
        <argsstring>(int N)</argsstring>
        <name>allocate_mem</name>
        <qualifiedname>Test::TestParallel_For::allocate_mem</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="88" column="14" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_test_parallel___for_1abcd012c6a33432e69eb537804bb39db6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MemSpace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Test::TestParallel_For&lt; ExecSpace &gt;::free_mem</definition>
        <argsstring>(value_type *data)</argsstring>
        <name>free_mem</name>
        <qualifiedname>Test::TestParallel_For::free_mem</qualifiedname>
        <param>
          <type>value_type *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="95" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_test_parallel___for_1a9ff9a99c599f9e765352f4211089a0d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test::TestParallel_For&lt; ExecSpace &gt;::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>Test::TestParallel_For::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="99" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="99" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_test_parallel___for_1aaa94e2f74b59a2db62f24858e8823059" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test::TestParallel_For&lt; ExecSpace &gt;::check_correctness_and_cleanup</definition>
        <argsstring>()</argsstring>
        <name>check_correctness_and_cleanup</name>
        <qualifiedname>Test::TestParallel_For::check_correctness_and_cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="109" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="109" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_test_parallel___for_1a09f8e13827dbf218f567a372f291077b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test::TestParallel_For&lt; ExecSpace &gt;::simple_test</definition>
        <argsstring>()</argsstring>
        <name>simple_test</name>
        <qualifiedname>Test::TestParallel_For::simple_test</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="123" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="123" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_test_parallel___for_1a9a82dd5d18abf59a7de5143a8fe57aab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test::TestParallel_For&lt; ExecSpace &gt;::range_policy</definition>
        <argsstring>()</argsstring>
        <name>range_policy</name>
        <qualifiedname>Test::TestParallel_For::range_policy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="140" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="140" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" line="70" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/incremental/Test04_ParallelFor_RangePolicy.hpp" bodystart="70" bodyend="158"/>
    <listofallmembers>
      <member refid="struct_test_1_1_test_parallel___for_1a3f10ea2fb279a0838ac955f1f44bd86a" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>allocate_mem</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1aaa94e2f74b59a2db62f24858e8823059" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>check_correctness_and_cleanup</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1a2d8b4e74a908948d5a118a8913128231" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>correctness_check</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1ac4798e8afa32d65a190e2f47032a769e" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>d_memspace_type</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1ac0af67bba374cc3456c6fae479da285e" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>deviceData</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1abcd012c6a33432e69eb537804bb39db6" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>free_mem</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1a8ff32a48b36a3a6bb146db82b26720f9" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>h_memspace_type</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1aa288f4b0b1e2e874c8f9379684468da1" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>hostData</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1a9ff9a99c599f9e765352f4211089a0d3" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>init</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1a9a82dd5d18abf59a7de5143a8fe57aab" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>range_policy</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1a09f8e13827dbf218f567a372f291077b" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>simple_test</name></member>
      <member refid="struct_test_1_1_test_parallel___for_1af1f56f21e09a74033d6617589a9cc57d" prot="public" virt="non-virtual"><scope>Test::TestParallel_For</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
