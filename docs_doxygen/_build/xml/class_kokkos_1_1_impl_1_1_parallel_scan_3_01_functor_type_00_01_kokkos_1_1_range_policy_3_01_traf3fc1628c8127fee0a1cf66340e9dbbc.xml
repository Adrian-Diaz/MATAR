<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc" kind="class" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</compoundname>
    <derivedcompoundref refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4" prot="public" virt="non-virtual">Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class FunctorType</type>
      </param>
      <param>
        <type>class...</type>
        <declname>Traits</declname>
        <defname>Traits</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a40d3c83b8af25a9d8467285c111cebd3" prot="protected" static="no">
        <type><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Kokkos::RangePolicy</ref>&lt; Traits... &gt;</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::Policy =  Kokkos::RangePolicy&lt;Traits...&gt;</definition>
        <argsstring></argsstring>
        <name>Policy</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::Policy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="509" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a610d68e317c7258153cf739e8fba0658" prot="protected" static="no">
        <type>typename Policy::work_tag</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::WorkTag =  typename Policy::work_tag</definition>
        <argsstring></argsstring>
        <name>WorkTag</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::WorkTag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="511" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a81b5fba9f96d07250a2968b1d92dae51" prot="protected" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_range_policy_1_1_work_range" kindref="compound">Policy::WorkRange</ref></type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::WorkRange =  typename Policy::WorkRange</definition>
        <argsstring></argsstring>
        <name>WorkRange</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::WorkRange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="512" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a202e3804b6d587062980ff4ea2582ed8" prot="protected" static="no">
        <type>typename Policy::member_type</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::Member =  typename Policy::member_type</definition>
        <argsstring></argsstring>
        <name>Member</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::Member</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="513" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a8df173bac39a353b5cf494781e1d5bd3" prot="protected" static="no">
        <type>typename Policy::index_type</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::idx_type =  typename Policy::index_type</definition>
        <argsstring></argsstring>
        <name>idx_type</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::idx_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="514" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ab33f3e08a204c659c0caed83a59ae4e6" prot="protected" static="no">
        <type>Kokkos::Impl::FunctorValueTraits&lt; FunctorType, WorkTag &gt;</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ValueTraits =  Kokkos::Impl::FunctorValueTraits&lt;FunctorType, WorkTag&gt;</definition>
        <argsstring></argsstring>
        <name>ValueTraits</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ValueTraits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="516" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a111764008a554e2e92e57b2d2dede1a8" prot="protected" static="no">
        <type><ref refid="struct_kokkos_1_1_impl_1_1_functor_value_init" kindref="compound">Kokkos::Impl::FunctorValueInit</ref>&lt; FunctorType, WorkTag &gt;</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ValueInit =  Kokkos::Impl::FunctorValueInit&lt;FunctorType, WorkTag&gt;</definition>
        <argsstring></argsstring>
        <name>ValueInit</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ValueInit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="517" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a1c8801bb1df78c6ff74f9984d75f36f6" prot="protected" static="no">
        <type><ref refid="struct_kokkos_1_1_impl_1_1_functor_value_join" kindref="compound">Kokkos::Impl::FunctorValueJoin</ref>&lt; FunctorType, WorkTag &gt;</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ValueJoin =  Kokkos::Impl::FunctorValueJoin&lt;FunctorType, WorkTag&gt;</definition>
        <argsstring></argsstring>
        <name>ValueJoin</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ValueJoin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="518" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a9eede5db752c5ada09acc73dc00c05a7" prot="protected" static="no">
        <type><ref refid="struct_kokkos_1_1_impl_1_1_functor_value_ops" kindref="compound">Kokkos::Impl::FunctorValueOps</ref>&lt; FunctorType, WorkTag &gt;</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ValueOps =  Kokkos::Impl::FunctorValueOps&lt;FunctorType, WorkTag&gt;</definition>
        <argsstring></argsstring>
        <name>ValueOps</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ValueOps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="519" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1af6734f28d4df7b11f6183afbc767259c" prot="protected" static="no">
        <type>typename ValueTraits::value_type</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::value_type =  typename ValueTraits::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="521" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1abd81c0b2a9e62698e46297820740eac5" prot="protected" static="no">
        <type>typename ValueTraits::pointer_type</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::pointer_type =  typename ValueTraits::pointer_type</definition>
        <argsstring></argsstring>
        <name>pointer_type</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::pointer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="522" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a26dc66b4766e8fc998216de0b6a89a58" prot="protected" static="no">
        <type>typename ValueTraits::reference_type</type>
        <definition>using Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::reference_type =  typename ValueTraits::reference_type</definition>
        <argsstring></argsstring>
        <name>reference_type</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::reference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="523" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="523" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a8d426464fc5a4f2938debf0f7043f392" prot="protected" static="no" mutable="no">
        <type>const FunctorType</type>
        <definition>const FunctorType Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::m_functor</definition>
        <argsstring></argsstring>
        <name>m_functor</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::m_functor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="525" column="21" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a9afef4e7f2d568b3b2f9af8b6d19056f" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref></type>
        <definition>const Policy Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::m_policy</definition>
        <argsstring></argsstring>
        <name>m_policy</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::m_policy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="526" column="16" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="526" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a541a096ad4d95b6cdbbba37f2f284f90" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TagType</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; TagType, void &gt;::value &gt;::type</type>
        <definition>std::enable_if&lt; std::is_same&lt; TagType, void &gt;::value &gt;::type Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::call_with_tag</definition>
        <argsstring>(const FunctorType &amp;f, const idx_type &amp;idx, value_type &amp;val, const bool &amp;is_final) const</argsstring>
        <name>call_with_tag</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::call_with_tag</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const idx_type &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>value_type &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>is_final</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="530" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="530" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ac226b8d998e85e0fcbc39f00105d2c63" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TagType</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;!std::is_same&lt; TagType, void &gt;::value &gt;::type</type>
        <definition>std::enable_if&lt;!std::is_same&lt; TagType, void &gt;::value &gt;::type Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::call_with_tag</definition>
        <argsstring>(const FunctorType &amp;f, const idx_type &amp;idx, value_type &amp;val, const bool &amp;is_final) const</argsstring>
        <name>call_with_tag</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::call_with_tag</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const idx_type &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>value_type &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>is_final</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="536" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="536" bodyend="539"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ab74cca82fcff76fd4b6f89b1f8559bd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::impl_execute</definition>
        <argsstring>(Kokkos::View&lt; value_type **, Kokkos::LayoutRight, Kokkos::Experimental::OpenMPTargetSpace &gt; element_values, Kokkos::View&lt; value_type *, Kokkos::Experimental::OpenMPTargetSpace &gt; chunk_values, Kokkos::View&lt; int64_t, Kokkos::Experimental::OpenMPTargetSpace &gt; count) const</argsstring>
        <name>impl_execute</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::impl_execute</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; value_type **, <ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>, Kokkos::Experimental::OpenMPTargetSpace &gt;</type>
          <declname>element_values</declname>
        </param>
        <param>
          <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; value_type *, Kokkos::Experimental::OpenMPTargetSpace &gt;</type>
          <declname>chunk_values</declname>
        </param>
        <param>
          <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; int64_t, Kokkos::Experimental::OpenMPTargetSpace &gt;</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="542" column="8" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="542" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ad8702fcef4a9ccabd7342cf2de487965" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute</definition>
        <argsstring>() const</argsstring>
        <name>execute</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::execute</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="626" column="8" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="626" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ac3c9e4d8fe5c6ac6796c1c80f132da9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ParallelScan</definition>
        <argsstring>(const FunctorType &amp;arg_functor, const Policy &amp;arg_policy)</argsstring>
        <name>ParallelScan</name>
        <qualifiedname>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;::ParallelScan</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>arg_functor</declname>
        </param>
        <param>
          <type>const <ref refid="class_kokkos_1_1_range_policy" kindref="compound">Policy</ref> &amp;</type>
          <declname>arg_policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="649" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="649" bodyend="650"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc"/>
      </node>
      <node id="2">
        <label>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>Kokkos::Impl::AnalyzeExecPolicy&lt; void, Traits... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Kokkos::Impl::AnalyzeExecPolicyUseMatcher&lt; void, execution_policy_trait_specifications, Traits... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_use_matcher"/>
      </node>
      <node id="4">
        <label>Kokkos::Impl::ExecPolicyTraitsWithDefaults&lt; AnalyzeExecPolicy&lt; void, Traits... &gt; &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_exec_policy_traits_with_defaults"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_policy</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::RangePolicy&lt; Properties &gt;</label>
        <link refid="class_kokkos_1_1_range_policy"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Kokkos::Impl::PolicyTraits&lt; Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_policy_traits"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="506" column="1" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="507" bodyend="653"/>
    <listofallmembers>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a541a096ad4d95b6cdbbba37f2f284f90" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>call_with_tag</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ac226b8d998e85e0fcbc39f00105d2c63" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>call_with_tag</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ad8702fcef4a9ccabd7342cf2de487965" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>execute</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a8df173bac39a353b5cf494781e1d5bd3" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>idx_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ab74cca82fcff76fd4b6f89b1f8559bd8" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>impl_execute</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a8d426464fc5a4f2938debf0f7043f392" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>m_functor</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a9afef4e7f2d568b3b2f9af8b6d19056f" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>m_policy</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a202e3804b6d587062980ff4ea2582ed8" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>Member</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ac3c9e4d8fe5c6ac6796c1c80f132da9a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ParallelScan</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1abd81c0b2a9e62698e46297820740eac5" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>pointer_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a40d3c83b8af25a9d8467285c111cebd3" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>Policy</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a26dc66b4766e8fc998216de0b6a89a58" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>reference_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1af6734f28d4df7b11f6183afbc767259c" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>value_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a111764008a554e2e92e57b2d2dede1a8" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ValueInit</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a1c8801bb1df78c6ff74f9984d75f36f6" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ValueJoin</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a9eede5db752c5ada09acc73dc00c05a7" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ValueOps</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ab33f3e08a204c659c0caed83a59ae4e6" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ValueTraits</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a81b5fba9f96d07250a2968b1d92dae51" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>WorkRange</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a610d68e317c7258153cf739e8fba0658" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>WorkTag</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
