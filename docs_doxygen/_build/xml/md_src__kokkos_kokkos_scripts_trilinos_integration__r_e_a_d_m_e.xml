<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="md_src__kokkos_kokkos_scripts_trilinos_integration__r_e_a_d_m_e" kind="page">
    <compoundname>md_src_Kokkos_kokkos_scripts_trilinos_integration_README</compoundname>
    <title>README</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="https://avatars2.githubusercontent.com/u/10199860?s=200&amp;v=4" alt="Kokkos" inline="yes"></image>
</para>
<sect1 id="md_src__kokkos_kokkos_scripts_trilinos_integration__r_e_a_d_m_e_1autotoc_md121">
<title>Kokkos: Promotion Test Debugging</title>
<para>This explains the use (and basic implementation details) of promotion testing new Kokkos and Kokkos Kernels branches. We first introduce a test for first validating an existing Trilinos branch that all tests should be passing on (usually the develop, master, or kokkos-promotion branch of Trilinos). After validating a clean promotion branch, we show how to test the same Trilinos branch with an updated Kokkoks and Kokkos Kernels.</para>
</sect1>
<sect1 id="md_src__kokkos_kokkos_scripts_trilinos_integration__r_e_a_d_m_e_1autotoc_md122">
<title>Clean Promotion Test</title>
<para>There is a script called <computeroutput>clean_promotion_test</computeroutput> in <computeroutput>scripts/trilinos-integration</computeroutput> that tests a self-contained Trilinos branch with its default included Kokkos and Kokkos Kernels packages. The script takes two arguments: <programlisting><codeline><highlight class="normal">./clean_promotion_test<sp/>&lt;ENV_FILE&gt;<sp/>&lt;TRILINOS_ROOT&gt;</highlight></codeline>
</programlisting> For running CUDA tests on the platform called White, e.g. <programlisting><codeline><highlight class="normal">./clean_promotion_test<sp/>white_cuda_env.sh<sp/>$TRILINOS_ROOT</highlight></codeline>
</programlisting> Based on the Trilinos path and ENV file, a unique hash <computeroutput>X</computeroutput> is generated. A CMake configuration is then run in the folder <computeroutput>clean-test-X</computeroutput>. Output of the configuration will appear in a <computeroutput>config.out</computeroutput>. If the configuration succeeds, you can <computeroutput>cd</computeroutput> into the folder and run: <programlisting><codeline><highlight class="normal">&gt;<sp/>source<sp/>../&lt;ENV_FILE&gt;</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>make<sp/>-j</highlight></codeline>
</programlisting> to validate the build. The configure and build steps are deliberately separated to allow incremental debugging of each step.</para>
</sect1>
<sect1 id="md_src__kokkos_kokkos_scripts_trilinos_integration__r_e_a_d_m_e_1autotoc_md123">
<title>New Branch Promotion Test</title>
<para>If the clean test is passing, you can now test your updates to Kokkos. To start the tests, there is a script that now takes four arguments: <programlisting><codeline><highlight class="normal">./config_promotion_test<sp/>&lt;ENV_FILE&gt;<sp/>&lt;TRILINOS_ROOT&gt;<sp/>&lt;KOKKOS_ROOT&gt;<sp/>&lt;KERNELS_ROOT&gt;</highlight></codeline>
</programlisting> where the two additional arguments are the locations of Kokkos and Kokkos Kernels branches containing updated. Again, a unique hash <computeroutput>X</computeroutput> is generated. A CMake configuration is then run in the folder <computeroutput>promotion-test-X</computeroutput>. If the configuration succeeds, you can <computeroutput>cd</computeroutput> into the folder and run: <programlisting><codeline><highlight class="normal">&gt;<sp/>source<sp/>../&lt;ENV_FILE&gt;</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>make<sp/>-j</highlight></codeline>
</programlisting> The script uses the the source override feature of the Trilinos build system. It creates symlinks in the Trilinos folder to your updated Kokkos and Kokkos Kernels branches. Trilinos is then redirected to build with the updated Kokkos via a CMake option <computeroutput>-DKokkos_SOURCE_DIR_OVERRIDE=kokkos</computeroutput>.</para>
<para><anchor id="md_src__kokkos_kokkos_scripts_trilinos_integration__r_e_a_d_m_e_1autotoc_md124"/> <heading level="5"><ulink url="https://github.com/kokkos/kokkos/blob/master/LICENSE">LICENSE</ulink></heading>
</para>
<para><ulink url="https://opensource.org/licenses/BSD-3-Clause"><image type="html" name="https://img.shields.io/badge/License-BSD%203--Clause-blue.svg" alt="License" inline="yes"></image>
</ulink></para>
<para>Under the terms of Contract DE-NA0003525 with NTESS, the U.S. Government retains certain rights in this software. </para>
</sect1>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/scripts/trilinos-integration/README.md"/>
  </compounddef>
</doxygen>
