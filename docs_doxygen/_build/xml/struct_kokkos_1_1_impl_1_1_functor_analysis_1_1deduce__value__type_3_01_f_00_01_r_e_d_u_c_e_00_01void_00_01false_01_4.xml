<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4" kind="struct" language="C++" prot="private">
    <compoundname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1ac406ee2ad2420c35efb1241f936912f0" prot="public" static="no">
        <type>decltype(deduce(&amp;F::operator()))</type>
        <definition>using Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::type =  decltype(deduce(&amp;F::operator()))</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="262" column="5" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a0c9887c81677a477d346a1c2982c2906" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="193" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1abd37e8b97b028aa90424aa595d502fdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="197" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a1779ea05d607856e8706b906310dbd1f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="201" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a14dc9335c91774c46a041602edaa0482" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag, M, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag, M, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="205" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1aa331405dfe919c55563a4dc91475061a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag, M, M, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag, M, M, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="209" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1ab5839a78b30cbdb664d2fa29c5e795e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag, M, M, M, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag, M, M, M, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="213" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a41ec88d789876c883ed8a358d934187f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag, M, M, M, M, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag, M, M, M, M, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="217" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a4ba30d597797ea049f5f3d404c4008ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag, M, M, M, M, M, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag, M, M, M, M, M, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="222" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a6830802be9f8717e518ae35de7a3aeca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag const &amp;, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag const &amp;, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="227" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1aad19a73af781df363deaf7eccd4835ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag const &amp;, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag const &amp;, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="231" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a4e3a667a3491a5d2b67e666f8a1be7ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag const &amp;, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag const &amp;, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="235" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1aa16d5a7dc18e6e70df31137208740aa9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag const &amp;, M, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag const &amp;, M, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="239" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1aec225c31d231de83c1302ae0728824d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag const &amp;, M, M, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag const &amp;, M, M, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="243" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1ad67c062f996601934e5ea2e3c67a3f3c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag const &amp;, M, M, M, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag const &amp;, M, M, M, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="248" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1aec7d16611f53725c4c6cc47588b7d462" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag const &amp;, M, M, M, M, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag const &amp;, M, M, M, M, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="253" column="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a32624acc2cbd3d6d50dc0fdf1585e054" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION A</type>
        <definition>static KOKKOS_INLINE_FUNCTION A Kokkos::Impl::FunctorAnalysis&lt; PatternInterface, Policy, Functor &gt;::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</definition>
        <argsstring>(void(Functor::*)(WTag const &amp;, M, M, M, M, M, M, M, M, A &amp;) const)</argsstring>
        <name>deduce</name>
        <qualifiedname>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;::deduce</qualifiedname>
        <param>
          <type>void(Functor::*)(WTag const &amp;, M, M, M, M, M, M, M, M, A &amp;) const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="258" column="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" line="191" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_FunctorAnalysis.hpp" bodystart="191" bodyend="263"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a0c9887c81677a477d346a1c2982c2906" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1abd37e8b97b028aa90424aa595d502fdc" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a1779ea05d607856e8706b906310dbd1f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a14dc9335c91774c46a041602edaa0482" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1aa331405dfe919c55563a4dc91475061a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1ab5839a78b30cbdb664d2fa29c5e795e8" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a41ec88d789876c883ed8a358d934187f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a4ba30d597797ea049f5f3d404c4008ca" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a6830802be9f8717e518ae35de7a3aeca" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1aad19a73af781df363deaf7eccd4835ad" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a4e3a667a3491a5d2b67e666f8a1be7ff" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1aa16d5a7dc18e6e70df31137208740aa9" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1aec225c31d231de83c1302ae0728824d1" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1ad67c062f996601934e5ea2e3c67a3f3c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1aec7d16611f53725c4c6cc47588b7d462" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1a32624acc2cbd3d6d50dc0fdf1585e054" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>deduce</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_functor_analysis_1_1deduce__value__type_3_01_f_00_01_r_e_d_u_c_e_00_01void_00_01false_01_4_1ac406ee2ad2420c35efb1241f936912f0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::FunctorAnalysis::deduce_value_type&lt; F, REDUCE, void, false &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
