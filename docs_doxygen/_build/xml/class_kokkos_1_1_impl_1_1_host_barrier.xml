<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_kokkos_1_1_impl_1_1_host_barrier" kind="class" language="C++" prot="public">
    <compoundname>Kokkos::Impl::HostBarrier</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_host_barrier_1a206b859f8e22dfd7dd32b91576706402" prot="public" static="no">
        <type>int</type>
        <definition>using Kokkos::Impl::HostBarrier::buffer_type =  int</definition>
        <argsstring></argsstring>
        <name>buffer_type</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::buffer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="79" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1abf58902864fa0afd5fa7300a46d194b8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::HostBarrier::required_buffer_size</definition>
        <argsstring></argsstring>
        <name>required_buffer_size</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::required_buffer_size</qualifiedname>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="80" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1a39d3891a03e7abd2065e95ab233ed761" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::HostBarrier::required_buffer_length</definition>
        <argsstring></argsstring>
        <name>required_buffer_length</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::required_buffer_length</qualifiedname>
        <initializer>=
      required_buffer_size / sizeof(int)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="81" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1a5fae4ac55822d0e2356e4555378472b6" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::HostBarrier::arrive_idx</definition>
        <argsstring></argsstring>
        <name>arrive_idx</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::arrive_idx</qualifiedname>
        <initializer>= 32 / sizeof(int)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="88" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1a42253f20e19335e14267f66bde441435" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::HostBarrier::master_idx</definition>
        <argsstring></argsstring>
        <name>master_idx</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::master_idx</qualifiedname>
        <initializer>= 64 / sizeof(int)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="89" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1ad547f694acc2bd9b5ca13ecf22f9d182" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::HostBarrier::wait_idx</definition>
        <argsstring></argsstring>
        <name>wait_idx</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::wait_idx</qualifiedname>
        <initializer>= 96 / sizeof(int)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="90" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1a75dbd49a7996e728db6d05dfd3a467bb" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::HostBarrier::num_nops</definition>
        <argsstring></argsstring>
        <name>num_nops</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::num_nops</qualifiedname>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="92" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1ac925076a425e14c5c28f8aea5c3496fd" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::HostBarrier::iterations_till_backoff</definition>
        <argsstring></argsstring>
        <name>iterations_till_backoff</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::iterations_till_backoff</qualifiedname>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="93" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1a8a824260fd833c7357f4b5dadc75246c" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::HostBarrier::log2_iterations_till_yield</definition>
        <argsstring></argsstring>
        <name>log2_iterations_till_yield</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::log2_iterations_till_yield</qualifiedname>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="94" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1ac6fab86357aa8b66351426fc184543cc" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::HostBarrier::log2_iterations_till_sleep</definition>
        <argsstring></argsstring>
        <name>log2_iterations_till_sleep</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::log2_iterations_till_sleep</qualifiedname>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="95" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1a620d0da7d70772730727f892e11c2f78" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Kokkos::Impl::HostBarrier::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::m_size</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="248" column="7" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1a20e5998e32bef630be4169d09d51cabf" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int Kokkos::Impl::HostBarrier::m_step</definition>
        <argsstring></argsstring>
        <name>m_step</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::m_step</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="249" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_host_barrier_1a6fdbf0d958cf7967ec66dfc20186da1b" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* Kokkos::Impl::HostBarrier::m_buffer</definition>
        <argsstring></argsstring>
        <name>m_buffer</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::m_buffer</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="250" column="7" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1aec803c258e6cbc6bf4a98ecbec057fd0" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>static KOKKOS_INLINE_FUNCTION bool Kokkos::Impl::HostBarrier::split_arrive</definition>
        <argsstring>(int *buffer, const int size, int &amp;step, const bool master_wait=true) noexcept</argsstring>
        <name>split_arrive</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::split_arrive</qualifiedname>
        <param>
          <type>int *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>step</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>master_wait</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="100" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="100" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1ab488702b98821f1f0a433eced5563a17" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>static KOKKOS_INLINE_FUNCTION void Kokkos::Impl::HostBarrier::split_release</definition>
        <argsstring>(int *buffer, const int size, const int) noexcept</argsstring>
        <name>split_release</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::split_release</qualifiedname>
        <param>
          <type>int *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="120" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a7bf0954441318d23a7d842434381e8f5" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>static KOKKOS_INLINE_FUNCTION void Kokkos::Impl::HostBarrier::split_master_wait</definition>
        <argsstring>(int *buffer, const int size, const int step, const bool active_wait=true) noexcept</argsstring>
        <name>split_master_wait</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::split_master_wait</qualifiedname>
        <param>
          <type>int *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>step</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>active_wait</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="131" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1af4485af70de257c4114522d49148b3ee" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>static KOKKOS_INLINE_FUNCTION void Kokkos::Impl::HostBarrier::arrive</definition>
        <argsstring>(int *buffer, const int size, int &amp;step) noexcept</argsstring>
        <name>arrive</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::arrive</qualifiedname>
        <param>
          <type>int *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="139" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="139" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1ac01808b7dba1f42ba3e86f2f37df928d" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>static KOKKOS_INLINE_FUNCTION bool Kokkos::Impl::HostBarrier::try_wait</definition>
        <argsstring>(int *buffer, const int size, const int step) noexcept</argsstring>
        <name>try_wait</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::try_wait</qualifiedname>
        <param>
          <type>int *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="148" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a4c531873ab29090f21b369db026b3998" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>static KOKKOS_INLINE_FUNCTION void Kokkos::Impl::HostBarrier::wait</definition>
        <argsstring>(int *buffer, const int size, const int step, bool active_wait=true) noexcept</argsstring>
        <name>wait</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::wait</qualifiedname>
        <param>
          <type>int *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>step</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active_wait</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="155" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="155" bodyend="159"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a2b87142e5ce912c6cfea27476150383f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>KOKKOS_INLINE_FUNCTION bool Kokkos::Impl::HostBarrier::split_arrive</definition>
        <argsstring>(const bool master_wait=true) const noexcept</argsstring>
        <name>split_arrive</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::split_arrive</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>master_wait</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="163" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1af078bce23de578767d2778c0f29f0d32" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::HostBarrier::split_release</definition>
        <argsstring>() const noexcept</argsstring>
        <name>split_release</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::split_release</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="168" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a2413d50babcd8266a49500e4877d033d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::HostBarrier::split_master_wait</definition>
        <argsstring>(const bool active_wait=true) noexcept</argsstring>
        <name>split_master_wait</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::split_master_wait</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>active_wait</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="173" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a96fce94b15f6f5628f1898c873e23f00" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::HostBarrier::arrive</definition>
        <argsstring>() const noexcept</argsstring>
        <name>arrive</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::arrive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="178" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1abd7a0f04807a45d3e11ef83a635ea45f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>KOKKOS_INLINE_FUNCTION bool Kokkos::Impl::HostBarrier::try_wait</definition>
        <argsstring>() const noexcept</argsstring>
        <name>try_wait</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::try_wait</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="181" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a62d6c04b18a601b5be2c22f734e5b209" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::HostBarrier::wait</definition>
        <argsstring>() const noexcept</argsstring>
        <name>wait</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::wait</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="184" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a4d86da32cc5d6e6302e29347e16d7d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::HostBarrier::HostBarrier</definition>
        <argsstring>()=default</argsstring>
        <name>HostBarrier</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::HostBarrier</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="186" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a25d5460adaf32db90acaa94b043c5cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::HostBarrier::HostBarrier</definition>
        <argsstring>(HostBarrier &amp;&amp;)=default</argsstring>
        <name>HostBarrier</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::HostBarrier</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_impl_1_1_host_barrier" kindref="compound">HostBarrier</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="187" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1ab62cbf42c5ad7afb2de494f887915d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kokkos_1_1_impl_1_1_host_barrier" kindref="compound">HostBarrier</ref> &amp;</type>
        <definition>HostBarrier &amp; Kokkos::Impl::HostBarrier::operator=</definition>
        <argsstring>(HostBarrier &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::operator=</qualifiedname>
        <param>
          <type><ref refid="class_kokkos_1_1_impl_1_1_host_barrier" kindref="compound">HostBarrier</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="188" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a011f9e5da9a1aa838fd8ae8c009d64ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION Kokkos::Impl::HostBarrier::HostBarrier</definition>
        <argsstring>(int size, int *buffer)</argsstring>
        <name>HostBarrier</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::HostBarrier</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="191" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="191" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a9420078d11324c85c32ddad22c30a252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::HostBarrier::HostBarrier</definition>
        <argsstring>(const HostBarrier &amp;)=delete</argsstring>
        <name>HostBarrier</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::HostBarrier</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_impl_1_1_host_barrier" kindref="compound">HostBarrier</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="194" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a81d13d055e1025e61340d4eebac6a3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kokkos_1_1_impl_1_1_host_barrier" kindref="compound">HostBarrier</ref> &amp;</type>
        <definition>HostBarrier &amp; Kokkos::Impl::HostBarrier::operator=</definition>
        <argsstring>(const HostBarrier &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_kokkos_1_1_impl_1_1_host_barrier" kindref="compound">HostBarrier</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="195" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1aceb020ba1180917ab057c6d4df1bbdbe" prot="private" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>static KOKKOS_INLINE_FUNCTION bool Kokkos::Impl::HostBarrier::test_equal</definition>
        <argsstring>(int *ptr, int v) noexcept</argsstring>
        <name>test_equal</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::test_equal</qualifiedname>
        <param>
          <type>int *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="199" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a22eb8f6d61a39bda7e8d90da5edb700c" prot="private" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>static KOKKOS_INLINE_FUNCTION void Kokkos::Impl::HostBarrier::wait_until_equal</definition>
        <argsstring>(int *ptr, const int v, bool active_wait=true) noexcept</argsstring>
        <name>wait_until_equal</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::wait_until_equal</qualifiedname>
        <param>
          <type>int *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active_wait</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="208" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="208" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_host_barrier_1a58d70890eea1734a253863b47fe98e9d" prot="private" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::HostBarrier::impl_backoff_wait_until_equal</definition>
        <argsstring>(int *ptr, const int v, const bool active_wait) noexcept</argsstring>
        <name>impl_backoff_wait_until_equal</name>
        <qualifiedname>Kokkos::Impl::HostBarrier::impl_backoff_wait_until_equal</qualifiedname>
        <param>
          <type>int *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>active_wait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="244" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.cpp" bodystart="62" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" line="77" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_HostBarrier.hpp" bodystart="77" bodyend="251"/>
    <listofallmembers>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1af4485af70de257c4114522d49148b3ee" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>arrive</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a96fce94b15f6f5628f1898c873e23f00" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>arrive</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a5fae4ac55822d0e2356e4555378472b6" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>arrive_idx</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a206b859f8e22dfd7dd32b91576706402" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>buffer_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a4d86da32cc5d6e6302e29347e16d7d07" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>HostBarrier</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a25d5460adaf32db90acaa94b043c5cf6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>HostBarrier</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a011f9e5da9a1aa838fd8ae8c009d64ac" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>HostBarrier</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a9420078d11324c85c32ddad22c30a252" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>HostBarrier</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a58d70890eea1734a253863b47fe98e9d" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>impl_backoff_wait_until_equal</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1ac925076a425e14c5c28f8aea5c3496fd" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>iterations_till_backoff</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1ac6fab86357aa8b66351426fc184543cc" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>log2_iterations_till_sleep</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a8a824260fd833c7357f4b5dadc75246c" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>log2_iterations_till_yield</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a6fdbf0d958cf7967ec66dfc20186da1b" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>m_buffer</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a620d0da7d70772730727f892e11c2f78" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>m_size</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a20e5998e32bef630be4169d09d51cabf" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>m_step</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a42253f20e19335e14267f66bde441435" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>master_idx</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a75dbd49a7996e728db6d05dfd3a467bb" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>num_nops</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1ab62cbf42c5ad7afb2de494f887915d3c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>operator=</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a81d13d055e1025e61340d4eebac6a3f7" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>operator=</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a39d3891a03e7abd2065e95ab233ed761" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>required_buffer_length</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1abf58902864fa0afd5fa7300a46d194b8" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>required_buffer_size</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1aec803c258e6cbc6bf4a98ecbec057fd0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>split_arrive</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a2b87142e5ce912c6cfea27476150383f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>split_arrive</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a7bf0954441318d23a7d842434381e8f5" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>split_master_wait</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a2413d50babcd8266a49500e4877d033d" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>split_master_wait</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1ab488702b98821f1f0a433eced5563a17" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>split_release</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1af078bce23de578767d2778c0f29f0d32" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>split_release</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1aceb020ba1180917ab057c6d4df1bbdbe" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>test_equal</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1ac01808b7dba1f42ba3e86f2f37df928d" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>try_wait</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1abd7a0f04807a45d3e11ef83a635ea45f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>try_wait</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a4c531873ab29090f21b369db026b3998" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>wait</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a62d6c04b18a601b5be2c22f734e5b209" prot="public" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>wait</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1ad547f694acc2bd9b5ca13ecf22f9d182" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>wait_idx</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_host_barrier_1a22eb8f6d61a39bda7e8d90da5edb700c" prot="private" virt="non-virtual"><scope>Kokkos::Impl::HostBarrier</scope><name>wait_until_equal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
