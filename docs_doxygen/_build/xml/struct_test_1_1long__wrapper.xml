<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_test_1_1long__wrapper" kind="struct" language="C++" prot="public">
    <compoundname>Test::long_wrapper</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test_1_1long__wrapper_1a1e141b1d56a8c544f7de28844ff13419" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long Test::long_wrapper::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Test::long_wrapper::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="113" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_1_1long__wrapper_1a0f7a411601a5b58ad7ed8156c4a4346f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Test::long_wrapper::long_wrapper</definition>
        <argsstring>()</argsstring>
        <name>long_wrapper</name>
        <qualifiedname>Test::long_wrapper::long_wrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="116" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1long__wrapper_1aa6780a67e4097d1eb86b30a5d7638580" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Test::long_wrapper::long_wrapper</definition>
        <argsstring>(long val)</argsstring>
        <name>long_wrapper</name>
        <qualifiedname>Test::long_wrapper::long_wrapper</qualifiedname>
        <param>
          <type>long</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="119" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1long__wrapper_1a1329d7d5153f9f3887fdfb8e37308967" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION void</type>
        <definition>KOKKOS_FUNCTION void Test::long_wrapper::operator=</definition>
        <argsstring>(const long_wrapper &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>Test::long_wrapper::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_1_1long__wrapper" kindref="compound">long_wrapper</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="133" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1long__wrapper_1aec8e1778ff7457e2c893efc0b894c119" prot="public" static="no" const="no" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION void</type>
        <definition>KOKKOS_FUNCTION void Test::long_wrapper::operator=</definition>
        <argsstring>(const volatile long_wrapper &amp;other) volatile</argsstring>
        <name>operator=</name>
        <qualifiedname>Test::long_wrapper::operator=</qualifiedname>
        <param>
          <type>const volatile <ref refid="struct_test_1_1long__wrapper" kindref="compound">long_wrapper</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="136" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1long__wrapper_1afe4477919eba4fdd71a92a0dac0cbbf8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Test::long_wrapper::operator long</definition>
        <argsstring>() const</argsstring>
        <name>operator long</name>
        <qualifiedname>Test::long_wrapper::operator long</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="140" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_test_1_1long__wrapper_1a3a78fd2cd53234281bab1ca49607e2ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION friend void</type>
        <definition>KOKKOS_FUNCTION friend void operator+=</definition>
        <argsstring>(long_wrapper &amp;lhs, const long_wrapper &amp;rhs)</argsstring>
        <name>operator+=</name>
        <qualifiedname>Test::long_wrapper::operator+=</qualifiedname>
        <param>
          <type><ref refid="struct_test_1_1long__wrapper" kindref="compound">long_wrapper</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_test_1_1long__wrapper" kindref="compound">long_wrapper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="122" column="15" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="friend" id="struct_test_1_1long__wrapper_1a7df2fea734f8a2182c31dc5d8ef4d002" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION friend void</type>
        <definition>KOKKOS_FUNCTION friend void operator+=</definition>
        <argsstring>(volatile long_wrapper &amp;lhs, const volatile long_wrapper &amp;rhs)</argsstring>
        <name>operator+=</name>
        <qualifiedname>Test::long_wrapper::operator+=</qualifiedname>
        <param>
          <type>volatile <ref refid="struct_test_1_1long__wrapper" kindref="compound">long_wrapper</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const volatile <ref refid="struct_test_1_1long__wrapper" kindref="compound">long_wrapper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="127" column="15" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" line="112" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestTeamBasic.hpp" bodystart="112" bodyend="141"/>
    <listofallmembers>
      <member refid="struct_test_1_1long__wrapper_1a0f7a411601a5b58ad7ed8156c4a4346f" prot="public" virt="non-virtual"><scope>Test::long_wrapper</scope><name>long_wrapper</name></member>
      <member refid="struct_test_1_1long__wrapper_1aa6780a67e4097d1eb86b30a5d7638580" prot="public" virt="non-virtual"><scope>Test::long_wrapper</scope><name>long_wrapper</name></member>
      <member refid="struct_test_1_1long__wrapper_1afe4477919eba4fdd71a92a0dac0cbbf8" prot="public" virt="non-virtual"><scope>Test::long_wrapper</scope><name>operator long</name></member>
      <member refid="struct_test_1_1long__wrapper_1a3a78fd2cd53234281bab1ca49607e2ec" prot="public" virt="non-virtual"><scope>Test::long_wrapper</scope><name>operator+=</name></member>
      <member refid="struct_test_1_1long__wrapper_1a7df2fea734f8a2182c31dc5d8ef4d002" prot="public" virt="non-virtual"><scope>Test::long_wrapper</scope><name>operator+=</name></member>
      <member refid="struct_test_1_1long__wrapper_1a1329d7d5153f9f3887fdfb8e37308967" prot="public" virt="non-virtual"><scope>Test::long_wrapper</scope><name>operator=</name></member>
      <member refid="struct_test_1_1long__wrapper_1aec8e1778ff7457e2c893efc0b894c119" prot="public" virt="non-virtual"><scope>Test::long_wrapper</scope><name>operator=</name></member>
      <member refid="struct_test_1_1long__wrapper_1a1e141b1d56a8c544f7de28844ff13419" prot="public" virt="non-virtual"><scope>Test::long_wrapper</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
