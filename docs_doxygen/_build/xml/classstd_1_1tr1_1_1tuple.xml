<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classstd_1_1tr1_1_1tuple" kind="class" language="C++" prot="public">
    <compoundname>std::tr1::tuple</compoundname>
    <templateparamlist>
      <param>
        <type>typename T0</type>
      </param>
      <param>
        <type>typename T1</type>
      </param>
      <param>
        <type>typename T2</type>
      </param>
      <param>
        <type>typename T3</type>
      </param>
      <param>
        <type>typename T4</type>
      </param>
      <param>
        <type>typename T5</type>
      </param>
      <param>
        <type>typename T6</type>
      </param>
      <param>
        <type>typename T7</type>
      </param>
      <param>
        <type>typename T8</type>
      </param>
      <param>
        <type>typename T9</type>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classstd_1_1tr1_1_1tuple_1aeeed38755abdaa78587dd1eac9ccc950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>k</declname>
            <defname>k</defname>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class gtest_internal::Get</definition>
        <argsstring></argsstring>
        <name>gtest_internal::Get</name>
        <qualifiedname>std::tr1::tuple::Get</qualifiedname>
        <param>
          <type><ref refid="classstd_1_1tr1_1_1gtest__internal_1_1_get" kindref="compound">gtest_internal::Get</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1251" column="28" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classstd_1_1tr1_1_1tuple_1a73673232251b459e24cf176c5fc359f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U0</type>
          </param>
          <param>
            <type>typename U1</type>
          </param>
          <param>
            <type>typename U2</type>
          </param>
          <param>
            <type>typename U3</type>
          </param>
          <param>
            <type>typename U4</type>
          </param>
          <param>
            <type>typename U5</type>
          </param>
          <param>
            <type>typename U6</type>
          </param>
          <param>
            <type>typename U7</type>
          </param>
          <param>
            <type>typename U8</type>
          </param>
          <param>
            <type>typename U9</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class tuple</definition>
        <argsstring></argsstring>
        <name>tuple</name>
        <qualifiedname>std::tr1::tuple::tuple</qualifiedname>
        <param>
          <type><ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1277" column="61" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classstd_1_1tr1_1_1tuple_1a266bb701b0bf866007d5865d36f87bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>k</declname>
            <defname>k</defname>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>class gtest_internal::Get</definition>
        <argsstring></argsstring>
        <name>gtest_internal::Get</name>
        <qualifiedname>std::tr1::tuple::Get</qualifiedname>
        <param>
          <type><ref refid="classstd_1_1tr1_1_1gtest__internal_1_1_get" kindref="compound">gtest_internal::Get</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" line="1251" column="28" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" bodystart="1251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classstd_1_1tr1_1_1tuple_1a133b02f631ce9c46c8368756d5ce7d68" prot="private" static="no" mutable="no">
        <type>T0</type>
        <definition>T0 std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::f0_</definition>
        <argsstring></argsstring>
        <name>f0_</name>
        <qualifiedname>std::tr1::tuple::f0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1294" column="6" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstd_1_1tr1_1_1tuple_1a809d974a332969e624830b02d9361107" prot="private" static="no" mutable="no">
        <type>T1</type>
        <definition>T1 std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::f1_</definition>
        <argsstring></argsstring>
        <name>f1_</name>
        <qualifiedname>std::tr1::tuple::f1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1295" column="6" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstd_1_1tr1_1_1tuple_1a1a3d444570fccf3810322a5cea025993" prot="private" static="no" mutable="no">
        <type>T2</type>
        <definition>T2 std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::f2_</definition>
        <argsstring></argsstring>
        <name>f2_</name>
        <qualifiedname>std::tr1::tuple::f2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1296" column="6" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstd_1_1tr1_1_1tuple_1a7d1ea537cc17e4c1aa1e4a7b39822c93" prot="private" static="no" mutable="no">
        <type>T3</type>
        <definition>T3 std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::f3_</definition>
        <argsstring></argsstring>
        <name>f3_</name>
        <qualifiedname>std::tr1::tuple::f3_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1297" column="6" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstd_1_1tr1_1_1tuple_1a893ccbbb34a262058b4cfa5020bbf84e" prot="private" static="no" mutable="no">
        <type>T4</type>
        <definition>T4 std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::f4_</definition>
        <argsstring></argsstring>
        <name>f4_</name>
        <qualifiedname>std::tr1::tuple::f4_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1298" column="6" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstd_1_1tr1_1_1tuple_1a1fbe806ede11f6e48aff17ce5c7b96a8" prot="private" static="no" mutable="no">
        <type>T5</type>
        <definition>T5 std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::f5_</definition>
        <argsstring></argsstring>
        <name>f5_</name>
        <qualifiedname>std::tr1::tuple::f5_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1299" column="6" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstd_1_1tr1_1_1tuple_1a1b7ddbc9893546b3028ee8f4543534cc" prot="private" static="no" mutable="no">
        <type>T6</type>
        <definition>T6 std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::f6_</definition>
        <argsstring></argsstring>
        <name>f6_</name>
        <qualifiedname>std::tr1::tuple::f6_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1300" column="6" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstd_1_1tr1_1_1tuple_1a254d543fc3669d5cbd41d5da833b9492" prot="private" static="no" mutable="no">
        <type>T7</type>
        <definition>T7 std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::f7_</definition>
        <argsstring></argsstring>
        <name>f7_</name>
        <qualifiedname>std::tr1::tuple::f7_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1301" column="6" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstd_1_1tr1_1_1tuple_1a335bd9d920b8aff1e2a47980bbf274db" prot="private" static="no" mutable="no">
        <type>T8</type>
        <definition>T8 std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::f8_</definition>
        <argsstring></argsstring>
        <name>f8_</name>
        <qualifiedname>std::tr1::tuple::f8_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1302" column="6" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstd_1_1tr1_1_1tuple_1a1b8a389f9e3974be4130f6ba2fbe5234" prot="private" static="no" mutable="no">
        <type>T9</type>
        <definition>T9 std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::f9_</definition>
        <argsstring></argsstring>
        <name>f9_</name>
        <qualifiedname>std::tr1::tuple::f9_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1303" column="6" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1303" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a530b48c0bc4312965b1aebb57f400e21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tuple</definition>
        <argsstring>()</argsstring>
        <name>tuple</name>
        <qualifiedname>std::tr1::tuple::tuple</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1253" column="3" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1253" bodyend="1254"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a6db185352759bfbb2883c143a4ba238f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::tuple</definition>
        <argsstring>(typename ::std::tr1::gtest_internal::ByRef&lt; T0 &gt;::type f0, typename ::std::tr1::gtest_internal::ByRef&lt; T1 &gt;::type f1, typename ::std::tr1::gtest_internal::ByRef&lt; T2 &gt;::type f2, typename ::std::tr1::gtest_internal::ByRef&lt; T3 &gt;::type f3, typename ::std::tr1::gtest_internal::ByRef&lt; T4 &gt;::type f4, typename ::std::tr1::gtest_internal::ByRef&lt; T5 &gt;::type f5, typename ::std::tr1::gtest_internal::ByRef&lt; T6 &gt;::type f6, typename ::std::tr1::gtest_internal::ByRef&lt; T7 &gt;::type f7, typename ::std::tr1::gtest_internal::ByRef&lt; T8 &gt;::type f8, typename ::std::tr1::gtest_internal::ByRef&lt; T9 &gt;::type f9)</argsstring>
        <name>tuple</name>
        <qualifiedname>std::tr1::tuple::tuple</qualifiedname>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T0 &gt;::type</type>
          <declname>f0</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T1 &gt;::type</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T2 &gt;::type</type>
          <declname>f2</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T3 &gt;::type</type>
          <declname>f3</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T4 &gt;::type</type>
          <declname>f4</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T5 &gt;::type</type>
          <declname>f5</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T6 &gt;::type</type>
          <declname>f6</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T7 &gt;::type</type>
          <declname>f7</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T8 &gt;::type</type>
          <declname>f8</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T9 &gt;::type</type>
          <declname>f9</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1256" column="12" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1256" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a70a4e487f56c2f544a40ca81e1b69303" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::tuple</definition>
        <argsstring>(const tuple &amp;t)</argsstring>
        <name>tuple</name>
        <qualifiedname>std::tr1::tuple::tuple</qualifiedname>
        <param>
          <type>const <ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1262" column="3" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1262" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a0996e66dee4ce5ca1cd5f2be82bc9610" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U0</type>
          </param>
          <param>
            <type>typename U1</type>
          </param>
          <param>
            <type>typename U2</type>
          </param>
          <param>
            <type>typename U3</type>
          </param>
          <param>
            <type>typename U4</type>
          </param>
          <param>
            <type>typename U5</type>
          </param>
          <param>
            <type>typename U6</type>
          </param>
          <param>
            <type>typename U7</type>
          </param>
          <param>
            <type>typename U8</type>
          </param>
          <param>
            <type>typename U9</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::tuple</definition>
        <argsstring>(const tuple&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;t)</argsstring>
        <name>tuple</name>
        <qualifiedname>std::tr1::tuple::tuple</qualifiedname>
        <param>
          <type>const <ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref>&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1266" column="3" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1266" bodyend="1268"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a647b7a337c040bbe572e55e3b2ccafab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref> &amp;</type>
        <definition>tuple &amp; std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::operator=</definition>
        <argsstring>(const tuple &amp;t)</argsstring>
        <name>operator=</name>
        <qualifiedname>std::tr1::tuple::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1270" column="9" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1270" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a3bab139b27e5e65e0cd42ebc08d393fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U0</type>
          </param>
          <param>
            <type>typename U1</type>
          </param>
          <param>
            <type>typename U2</type>
          </param>
          <param>
            <type>typename U3</type>
          </param>
          <param>
            <type>typename U4</type>
          </param>
          <param>
            <type>typename U5</type>
          </param>
          <param>
            <type>typename U6</type>
          </param>
          <param>
            <type>typename U7</type>
          </param>
          <param>
            <type>typename U8</type>
          </param>
          <param>
            <type>typename U9</type>
          </param>
        </templateparamlist>
        <type><ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref> &amp;</type>
        <definition>tuple &amp; std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::operator=</definition>
        <argsstring>(const tuple&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;t)</argsstring>
        <name>operator=</name>
        <qualifiedname>std::tr1::tuple::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref>&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1273" column="9" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1273" bodyend="1275"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a3fb03a675507fb251c755634d9002a98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::tuple</definition>
        <argsstring>()</argsstring>
        <name>tuple</name>
        <qualifiedname>std::tr1::tuple::tuple</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" line="1253" column="3" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" bodystart="1253" bodyend="1254"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a6db185352759bfbb2883c143a4ba238f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::tuple</definition>
        <argsstring>(typename ::std::tr1::gtest_internal::ByRef&lt; T0 &gt;::type f0, typename ::std::tr1::gtest_internal::ByRef&lt; T1 &gt;::type f1, typename ::std::tr1::gtest_internal::ByRef&lt; T2 &gt;::type f2, typename ::std::tr1::gtest_internal::ByRef&lt; T3 &gt;::type f3, typename ::std::tr1::gtest_internal::ByRef&lt; T4 &gt;::type f4, typename ::std::tr1::gtest_internal::ByRef&lt; T5 &gt;::type f5, typename ::std::tr1::gtest_internal::ByRef&lt; T6 &gt;::type f6, typename ::std::tr1::gtest_internal::ByRef&lt; T7 &gt;::type f7, typename ::std::tr1::gtest_internal::ByRef&lt; T8 &gt;::type f8, typename ::std::tr1::gtest_internal::ByRef&lt; T9 &gt;::type f9)</argsstring>
        <name>tuple</name>
        <qualifiedname>std::tr1::tuple::tuple</qualifiedname>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T0 &gt;::type</type>
          <declname>f0</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T1 &gt;::type</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T2 &gt;::type</type>
          <declname>f2</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T3 &gt;::type</type>
          <declname>f3</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T4 &gt;::type</type>
          <declname>f4</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T5 &gt;::type</type>
          <declname>f5</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T6 &gt;::type</type>
          <declname>f6</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T7 &gt;::type</type>
          <declname>f7</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T8 &gt;::type</type>
          <declname>f8</declname>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1tr1_1_1gtest__internal_1_1_by_ref" kindref="compound">::std::tr1::gtest_internal::ByRef</ref>&lt; T9 &gt;::type</type>
          <declname>f9</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" line="1256" column="12" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" bodystart="1256" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a70a4e487f56c2f544a40ca81e1b69303" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::tuple</definition>
        <argsstring>(const tuple &amp;t)</argsstring>
        <name>tuple</name>
        <qualifiedname>std::tr1::tuple::tuple</qualifiedname>
        <param>
          <type>const <ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" line="1262" column="3" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" bodystart="1262" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a0996e66dee4ce5ca1cd5f2be82bc9610" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U0</type>
          </param>
          <param>
            <type>typename U1</type>
          </param>
          <param>
            <type>typename U2</type>
          </param>
          <param>
            <type>typename U3</type>
          </param>
          <param>
            <type>typename U4</type>
          </param>
          <param>
            <type>typename U5</type>
          </param>
          <param>
            <type>typename U6</type>
          </param>
          <param>
            <type>typename U7</type>
          </param>
          <param>
            <type>typename U8</type>
          </param>
          <param>
            <type>typename U9</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::tuple</definition>
        <argsstring>(const tuple&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;t)</argsstring>
        <name>tuple</name>
        <qualifiedname>std::tr1::tuple::tuple</qualifiedname>
        <param>
          <type>const <ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref>&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" line="1266" column="3" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" bodystart="1266" bodyend="1268"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a647b7a337c040bbe572e55e3b2ccafab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref> &amp;</type>
        <definition>tuple &amp; std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::operator=</definition>
        <argsstring>(const tuple &amp;t)</argsstring>
        <name>operator=</name>
        <qualifiedname>std::tr1::tuple::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" line="1270" column="9" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" bodystart="1270" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a3bab139b27e5e65e0cd42ebc08d393fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U0</type>
          </param>
          <param>
            <type>typename U1</type>
          </param>
          <param>
            <type>typename U2</type>
          </param>
          <param>
            <type>typename U3</type>
          </param>
          <param>
            <type>typename U4</type>
          </param>
          <param>
            <type>typename U5</type>
          </param>
          <param>
            <type>typename U6</type>
          </param>
          <param>
            <type>typename U7</type>
          </param>
          <param>
            <type>typename U8</type>
          </param>
          <param>
            <type>typename U9</type>
          </param>
        </templateparamlist>
        <type><ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref> &amp;</type>
        <definition>tuple &amp; std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::operator=</definition>
        <argsstring>(const tuple&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;t)</argsstring>
        <name>operator=</name>
        <qualifiedname>std::tr1::tuple::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref>&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" line="1273" column="9" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" bodystart="1273" bodyend="1275"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a6cf4a1038671fdb89ae5184a7f7ab343" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U0</type>
          </param>
          <param>
            <type>typename U1</type>
          </param>
          <param>
            <type>typename U2</type>
          </param>
          <param>
            <type>typename U3</type>
          </param>
          <param>
            <type>typename U4</type>
          </param>
          <param>
            <type>typename U5</type>
          </param>
          <param>
            <type>typename U6</type>
          </param>
          <param>
            <type>typename U7</type>
          </param>
          <param>
            <type>typename U8</type>
          </param>
          <param>
            <type>typename U9</type>
          </param>
        </templateparamlist>
        <type><ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref> &amp;</type>
        <definition>tuple &amp; std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::CopyFrom</definition>
        <argsstring>(const tuple&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;t)</argsstring>
        <name>CopyFrom</name>
        <qualifiedname>std::tr1::tuple::CopyFrom</qualifiedname>
        <param>
          <type>const <ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref>&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" line="1280" column="9" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest-test-part.h" bodystart="1280" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1tr1_1_1tuple_1a6cf4a1038671fdb89ae5184a7f7ab343" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U0</type>
          </param>
          <param>
            <type>typename U1</type>
          </param>
          <param>
            <type>typename U2</type>
          </param>
          <param>
            <type>typename U3</type>
          </param>
          <param>
            <type>typename U4</type>
          </param>
          <param>
            <type>typename U5</type>
          </param>
          <param>
            <type>typename U6</type>
          </param>
          <param>
            <type>typename U7</type>
          </param>
          <param>
            <type>typename U8</type>
          </param>
          <param>
            <type>typename U9</type>
          </param>
        </templateparamlist>
        <type><ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref> &amp;</type>
        <definition>tuple &amp; std::tr1::tuple&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 &gt;::CopyFrom</definition>
        <argsstring>(const tuple&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;t)</argsstring>
        <name>CopyFrom</name>
        <qualifiedname>std::tr1::tuple::CopyFrom</qualifiedname>
        <param>
          <type>const <ref refid="classstd_1_1tr1_1_1tuple" kindref="compound">tuple</ref>&lt; U0, U1, U2, U3, U4, U5, U6, U7, U8, U9 &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" line="1280" column="9" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" bodystart="1280" bodyend="1292"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" line="1249" column="1" bodyfile="src/Kokkos/kokkos/tpls/gtest/gtest/gtest.h" bodystart="1249" bodyend="1304"/>
    <listofallmembers>
      <member refid="classstd_1_1tr1_1_1tuple_1a6cf4a1038671fdb89ae5184a7f7ab343" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>CopyFrom</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a6cf4a1038671fdb89ae5184a7f7ab343" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>CopyFrom</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a133b02f631ce9c46c8368756d5ce7d68" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>f0_</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a809d974a332969e624830b02d9361107" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>f1_</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a1a3d444570fccf3810322a5cea025993" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>f2_</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a7d1ea537cc17e4c1aa1e4a7b39822c93" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>f3_</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a893ccbbb34a262058b4cfa5020bbf84e" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>f4_</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a1fbe806ede11f6e48aff17ce5c7b96a8" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>f5_</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a1b7ddbc9893546b3028ee8f4543534cc" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>f6_</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a254d543fc3669d5cbd41d5da833b9492" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>f7_</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a335bd9d920b8aff1e2a47980bbf274db" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>f8_</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a1b8a389f9e3974be4130f6ba2fbe5234" prot="private" virt="non-virtual"><scope>std::tr1::tuple</scope><name>f9_</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1aeeed38755abdaa78587dd1eac9ccc950" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>gtest_internal::Get</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a266bb701b0bf866007d5865d36f87bd1" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>gtest_internal::Get</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a647b7a337c040bbe572e55e3b2ccafab" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>operator=</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a3bab139b27e5e65e0cd42ebc08d393fa" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>operator=</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a647b7a337c040bbe572e55e3b2ccafab" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>operator=</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a3bab139b27e5e65e0cd42ebc08d393fa" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>operator=</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a73673232251b459e24cf176c5fc359f8" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>tuple</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a530b48c0bc4312965b1aebb57f400e21" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>tuple</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a6db185352759bfbb2883c143a4ba238f" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>tuple</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a70a4e487f56c2f544a40ca81e1b69303" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>tuple</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a0996e66dee4ce5ca1cd5f2be82bc9610" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>tuple</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a3fb03a675507fb251c755634d9002a98" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>tuple</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a6db185352759bfbb2883c143a4ba238f" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>tuple</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a70a4e487f56c2f544a40ca81e1b69303" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>tuple</name></member>
      <member refid="classstd_1_1tr1_1_1tuple_1a0996e66dee4ce5ca1cd5f2be82bc9610" prot="public" virt="non-virtual"><scope>std::tr1::tuple</scope><name>tuple</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
