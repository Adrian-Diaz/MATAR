<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4" kind="class" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</compoundname>
    <basecompoundref refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc" prot="public" virt="non-virtual">Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class FunctorType</type>
      </param>
      <param>
        <type>class ReturnType</type>
      </param>
      <param>
        <type>class...</type>
        <declname>Traits</declname>
        <defname>Traits</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4_1a802f368f6bcd630b6e91267ee69c37c7" prot="private" static="no">
        <type><ref refid="class_kokkos_1_1_impl_1_1_parallel_scan" kindref="compound">ParallelScan</ref>&lt; FunctorType, <ref refid="class_kokkos_1_1_range_policy" kindref="compound">Kokkos::RangePolicy</ref>&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</type>
        <definition>using Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;::base_t =  ParallelScan&lt;FunctorType, Kokkos::RangePolicy&lt;Traits...&gt;, Kokkos::Experimental::OpenMPTarget&gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <qualifiedname>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;::base_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="660" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="661" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4_1a468106db7d9ed689a1a2448d24c81557" prot="private" static="no">
        <type>typename base_t::value_type</type>
        <definition>using Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;::value_type =  typename base_t::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="662" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="662" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4_1ac2140c346314135aba79e60978e6dddf" prot="private" static="no" mutable="no">
        <type>value_type &amp;</type>
        <definition>value_type&amp; Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;::m_returnvalue</definition>
        <argsstring></argsstring>
        <name>m_returnvalue</name>
        <qualifiedname>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;::m_returnvalue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="663" column="14" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="663" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4_1a9a5842804b24abd8761734407d1cfece" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;::execute</definition>
        <argsstring>() const</argsstring>
        <name>execute</name>
        <qualifiedname>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;::execute</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="666" column="8" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="666" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4_1a4f2a69e0951efd48f33b9c118af73118" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;::ParallelScanWithTotal</definition>
        <argsstring>(const FunctorType &amp;arg_functor, const typename base_t::Policy &amp;arg_policy, ReturnType &amp;arg_returnvalue)</argsstring>
        <name>ParallelScanWithTotal</name>
        <qualifiedname>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;::ParallelScanWithTotal</qualifiedname>
        <param>
          <type>const FunctorType &amp;</type>
          <declname>arg_functor</declname>
        </param>
        <param>
          <type>const typename <ref refid="class_kokkos_1_1_range_policy" kindref="compound">base_t::Policy</ref> &amp;</type>
          <declname>arg_policy</declname>
        </param>
        <param>
          <type>ReturnType &amp;</type>
          <declname>arg_returnvalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="695" column="3" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="695" bodyend="698"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc"/>
      </node>
      <node id="1">
        <label>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>Kokkos::Impl::AnalyzeExecPolicy&lt; void, Traits... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Kokkos::Impl::AnalyzeExecPolicyUseMatcher&lt; void, execution_policy_trait_specifications, Traits... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_analyze_exec_policy_use_matcher"/>
      </node>
      <node id="5">
        <label>Kokkos::Impl::ExecPolicyTraitsWithDefaults&lt; AnalyzeExecPolicy&lt; void, Traits... &gt; &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_exec_policy_traits_with_defaults"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::Impl::ParallelScan&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, Kokkos::Experimental::OpenMPTarget &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_policy</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</label>
        <link refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Kokkos::RangePolicy&lt; Properties &gt;</label>
        <link refid="class_kokkos_1_1_range_policy"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Kokkos::Impl::PolicyTraits&lt; Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_impl_1_1_policy_traits"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" line="656" column="1" bodyfile="src/Kokkos/kokkos/core/src/OpenMPTarget/Kokkos_OpenMPTarget_Parallel.hpp" bodystart="659" bodyend="699"/>
    <listofallmembers>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4_1a802f368f6bcd630b6e91267ee69c37c7" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>base_t</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a541a096ad4d95b6cdbbba37f2f284f90" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>call_with_tag</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ac226b8d998e85e0fcbc39f00105d2c63" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>call_with_tag</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4_1a9a5842804b24abd8761734407d1cfece" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>execute</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a8df173bac39a353b5cf494781e1d5bd3" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>idx_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ab74cca82fcff76fd4b6f89b1f8559bd8" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>impl_execute</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a8d426464fc5a4f2938debf0f7043f392" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>m_functor</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a9afef4e7f2d568b3b2f9af8b6d19056f" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>m_policy</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4_1ac2140c346314135aba79e60978e6dddf" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>m_returnvalue</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a202e3804b6d587062980ff4ea2582ed8" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>Member</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ac3c9e4d8fe5c6ac6796c1c80f132da9a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ParallelScan</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4_1a4f2a69e0951efd48f33b9c118af73118" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ParallelScanWithTotal</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1abd81c0b2a9e62698e46297820740eac5" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>pointer_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a40d3c83b8af25a9d8467285c111cebd3" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>Policy</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a26dc66b4766e8fc998216de0b6a89a58" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>reference_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_with_total_3_01_functor_type_00_01_kokkos_1_1_range_polia375f1712ee14d11890bc3e988d50ca4_1a468106db7d9ed689a1a2448d24c81557" prot="private" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>value_type</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a111764008a554e2e92e57b2d2dede1a8" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ValueInit</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a1c8801bb1df78c6ff74f9984d75f36f6" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ValueJoin</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a9eede5db752c5ada09acc73dc00c05a7" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ValueOps</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1ab33f3e08a204c659c0caed83a59ae4e6" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>ValueTraits</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a81b5fba9f96d07250a2968b1d92dae51" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>WorkRange</name></member>
      <member refid="class_kokkos_1_1_impl_1_1_parallel_scan_3_01_functor_type_00_01_kokkos_1_1_range_policy_3_01_traf3fc1628c8127fee0a1cf66340e9dbbc_1a610d68e317c7258153cf739e8fba0658" prot="protected" virt="non-virtual"><scope>Kokkos::Impl::ParallelScanWithTotal&lt; FunctorType, Kokkos::RangePolicy&lt; Traits... &gt;, ReturnType, Kokkos::Experimental::OpenMPTarget &gt;</scope><name>WorkTag</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
