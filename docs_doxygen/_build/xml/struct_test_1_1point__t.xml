<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_test_1_1point__t" kind="struct" language="C++" prot="public">
    <compoundname>Test::point_t</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test_1_1point__t_1a91a2d17b1b24a29e840c568066478b5e" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Test::point_t::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>Test::point_t::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="315" column="11" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1point__t_1a722ea5a9922d84e0c811c57c546943da" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Test::point_t::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>Test::point_t::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="315" column="13" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1point__t_1aa9d40190eb56662d35c01be25f950c90" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Test::point_t::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <qualifiedname>Test::point_t::z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="315" column="15" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_1_1point__t_1affe54e1a835ebfc4076f6c2a131301b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Test::point_t::point_t</definition>
        <argsstring>()</argsstring>
        <name>point_t</name>
        <qualifiedname>Test::point_t::point_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="318" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1point__t_1a5978b64537525520bd71db8cb0260d43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Test::point_t::point_t</definition>
        <argsstring>(const point_t &amp;val)</argsstring>
        <name>point_t</name>
        <qualifiedname>Test::point_t::point_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_1_1point__t" kindref="compound">point_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="321" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="321" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1point__t_1ad11871e6227912ad75890deee8c720ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Test::point_t::point_t</definition>
        <argsstring>(const volatile point_t &amp;val)</argsstring>
        <name>point_t</name>
        <qualifiedname>Test::point_t::point_t</qualifiedname>
        <param>
          <type>const volatile <ref refid="struct_test_1_1point__t" kindref="compound">point_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="324" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="324" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1point__t_1a71cc22f72bd62e3ffe1fb203c16e0f73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Test::point_t::point_t</definition>
        <argsstring>(const int rhs)</argsstring>
        <name>point_t</name>
        <qualifiedname>Test::point_t::point_t</qualifiedname>
        <param>
          <type>const int</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="327" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="327" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1point__t_1a4352b307c15bbd47f4fb204165c7c88e" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION</type>
        <definition>KOKKOS_FUNCTION Test::point_t::operator int</definition>
        <argsstring>() const</argsstring>
        <name>operator int</name>
        <qualifiedname>Test::point_t::operator int</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="330" column="12" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="330" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1point__t_1a5d442cf5f1e351892ec0e9e3336f3b2b" prot="public" static="no" const="yes" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION bool</type>
        <definition>KOKKOS_FUNCTION bool Test::point_t::operator==</definition>
        <argsstring>(const volatile point_t rhs) const volatile</argsstring>
        <name>operator==</name>
        <qualifiedname>Test::point_t::operator==</qualifiedname>
        <param>
          <type>const volatile <ref refid="struct_test_1_1point__t" kindref="compound">point_t</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="333" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="333" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1point__t_1a0d1dd72500770597fd3b25e6d49cada0" prot="public" static="no" const="no" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION void</type>
        <definition>KOKKOS_FUNCTION void Test::point_t::operator=</definition>
        <argsstring>(point_t rhs) volatile</argsstring>
        <name>operator=</name>
        <qualifiedname>Test::point_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_test_1_1point__t" kindref="compound">point_t</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="338" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="338" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1point__t_1a14e52153889f49fa7d782265bcdee61d" prot="public" static="no" const="no" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>KOKKOS_FUNCTION volatile <ref refid="struct_test_1_1point__t" kindref="compound">point_t</ref></type>
        <definition>KOKKOS_FUNCTION volatile point_t Test::point_t::operator+=</definition>
        <argsstring>(const volatile point_t rhs) volatile</argsstring>
        <name>operator+=</name>
        <qualifiedname>Test::point_t::operator+=</qualifiedname>
        <param>
          <type>const volatile <ref refid="struct_test_1_1point__t" kindref="compound">point_t</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="345" column="20" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="345" bodyend="350"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" line="314" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestNonTrivialScalarTypes.hpp" bodystart="314" bodyend="351"/>
    <listofallmembers>
      <member refid="struct_test_1_1point__t_1a4352b307c15bbd47f4fb204165c7c88e" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>operator int</name></member>
      <member refid="struct_test_1_1point__t_1a14e52153889f49fa7d782265bcdee61d" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>operator+=</name></member>
      <member refid="struct_test_1_1point__t_1a0d1dd72500770597fd3b25e6d49cada0" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>operator=</name></member>
      <member refid="struct_test_1_1point__t_1a5d442cf5f1e351892ec0e9e3336f3b2b" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>operator==</name></member>
      <member refid="struct_test_1_1point__t_1affe54e1a835ebfc4076f6c2a131301b4" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>point_t</name></member>
      <member refid="struct_test_1_1point__t_1a5978b64537525520bd71db8cb0260d43" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>point_t</name></member>
      <member refid="struct_test_1_1point__t_1ad11871e6227912ad75890deee8c720ef" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>point_t</name></member>
      <member refid="struct_test_1_1point__t_1a71cc22f72bd62e3ffe1fb203c16e0f73" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>point_t</name></member>
      <member refid="struct_test_1_1point__t_1a91a2d17b1b24a29e840c568066478b5e" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>x</name></member>
      <member refid="struct_test_1_1point__t_1a722ea5a9922d84e0c811c57c546943da" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>y</name></member>
      <member refid="struct_test_1_1point__t_1aa9d40190eb56662d35c01be25f950c90" prot="public" virt="non-virtual"><scope>Test::point_t</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
