<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class Dimension</type>
      </param>
      <param>
        <type>class Layout</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad29155943f84f922e451499b4967c241" prot="public" static="no">
        <type>std::true_type</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::is_mapping_plugin =  std::true_type</definition>
        <argsstring></argsstring>
        <name>is_mapping_plugin</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::is_mapping_plugin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="168" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa5e41f1a7996295adb8cfed8e90ed735" prot="public" static="no">
        <type>std::false_type</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::is_regular =  std::false_type</definition>
        <argsstring></argsstring>
        <name>is_regular</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::is_regular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="169" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a9ca2d8f8e0f2ddf15e8e7bbc7889879b" prot="public" static="no">
        <type>size_t</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::size_type =  size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="171" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ac802fcdbabd2196c9f834807e9b86211" prot="public" static="no">
        <type>Dimension</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_type =  Dimension</definition>
        <argsstring></argsstring>
        <name>dimension_type</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="172" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aed9418aee45e87496134a67a1e127314" prot="public" static="no">
        <type>Layout</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::array_layout =  Layout</definition>
        <argsstring></argsstring>
        <name>array_layout</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::array_layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="173" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a75a5e6a07e6da366234d50586e7c3b8c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr Kokkos::Iterate</type>
        <definition>constexpr Kokkos::Iterate Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::outer_pattern</definition>
        <argsstring></argsstring>
        <name>outer_pattern</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::outer_pattern</qualifiedname>
        <initializer>= Layout::outer_pattern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="125" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa4fffa32141133910d514c5390994f39" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr Kokkos::Iterate</type>
        <definition>constexpr Kokkos::Iterate Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::inner_pattern</definition>
        <argsstring></argsstring>
        <name>inner_pattern</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::inner_pattern</qualifiedname>
        <initializer>= Layout::inner_pattern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="126" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a2cfff00973f5c1b7f6dac4281f42a55c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::VORank</definition>
        <argsstring></argsstring>
        <name>VORank</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::VORank</qualifiedname>
        <initializer>= Dimension::rank</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="128" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad9d717fab5cf313f1cd59132faed3af3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_0</definition>
        <argsstring></argsstring>
        <name>SHIFT_0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_0</qualifiedname>
        <initializer>=
      Kokkos::Impl::integral_power_of_two(Layout::N0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="130" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ae62679bcae4bb2bec88e34dea98a1d6b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_1</definition>
        <argsstring></argsstring>
        <name>SHIFT_1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_1</qualifiedname>
        <initializer>=
      Kokkos::Impl::integral_power_of_two(Layout::N1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="132" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ada088021272b72d837092c490a3bb815" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_2</definition>
        <argsstring></argsstring>
        <name>SHIFT_2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_2</qualifiedname>
        <initializer>=
      Kokkos::Impl::integral_power_of_two(Layout::N2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="134" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad409d64fae78a1a99dc55fcf5815e480" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_3</definition>
        <argsstring></argsstring>
        <name>SHIFT_3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_3</qualifiedname>
        <initializer>=
      Kokkos::Impl::integral_power_of_two(Layout::N3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="136" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6df778e1d41ef709d245b3cc161b7fc9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_4</definition>
        <argsstring></argsstring>
        <name>SHIFT_4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_4</qualifiedname>
        <initializer>=
      Kokkos::Impl::integral_power_of_two(Layout::N4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="138" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6ef0273f36770a901d7c5fac72214d14" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_5</definition>
        <argsstring></argsstring>
        <name>SHIFT_5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_5</qualifiedname>
        <initializer>=
      Kokkos::Impl::integral_power_of_two(Layout::N5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="140" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a069d2c55ce00288d2125f5dc668496be" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_6</definition>
        <argsstring></argsstring>
        <name>SHIFT_6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_6</qualifiedname>
        <initializer>=
      Kokkos::Impl::integral_power_of_two(Layout::N6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="142" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a88c5aa50e002de2ca3df0ffb0391083a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_7</definition>
        <argsstring></argsstring>
        <name>SHIFT_7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_7</qualifiedname>
        <initializer>=
      Kokkos::Impl::integral_power_of_two(Layout::N7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="144" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a481e86daeae8a7f71cc41eaa67231eec" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_0</definition>
        <argsstring></argsstring>
        <name>MASK_0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_0</qualifiedname>
        <initializer>= Layout::N0 - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="146" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a7b4aba053e39bb0cbc1333fbc1695c95" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_1</definition>
        <argsstring></argsstring>
        <name>MASK_1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_1</qualifiedname>
        <initializer>= Layout::N1 - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="147" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ac371c1c77e8afd7bb25ac8eff4e06c41" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_2</definition>
        <argsstring></argsstring>
        <name>MASK_2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_2</qualifiedname>
        <initializer>= Layout::N2 - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="148" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ab02359e2e5daebcecda44f8143413c13" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_3</definition>
        <argsstring></argsstring>
        <name>MASK_3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_3</qualifiedname>
        <initializer>= Layout::N3 - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="149" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6486449368142cfc1636707ecafd6091" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_4</definition>
        <argsstring></argsstring>
        <name>MASK_4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_4</qualifiedname>
        <initializer>= Layout::N4 - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="150" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a0e63ff4538344ddb07a0e943cbc1ee3c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_5</definition>
        <argsstring></argsstring>
        <name>MASK_5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_5</qualifiedname>
        <initializer>= Layout::N5 - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="151" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a081eddbc2c33280bb73d675d74749bff" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_6</definition>
        <argsstring></argsstring>
        <name>MASK_6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_6</qualifiedname>
        <initializer>= Layout::N6 - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="152" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad5ed85c77c34e70e697aa616e23c4392" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_7</definition>
        <argsstring></argsstring>
        <name>MASK_7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::MASK_7</qualifiedname>
        <initializer>= Layout::N7 - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="153" column="24" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6be10fd59bfe995eda061779fa062b9d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_2T</definition>
        <argsstring></argsstring>
        <name>SHIFT_2T</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_2T</qualifiedname>
        <initializer>= SHIFT_0 + SHIFT_1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="155" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a66d8191dd9bdf622bf214764772a6df3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_3T</definition>
        <argsstring></argsstring>
        <name>SHIFT_3T</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_3T</qualifiedname>
        <initializer>= SHIFT_0 + SHIFT_1 + SHIFT_2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="156" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a76b8db6e065e4f95f6f3808ce7586d83" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_4T</definition>
        <argsstring></argsstring>
        <name>SHIFT_4T</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_4T</qualifiedname>
        <initializer>= SHIFT_0 + SHIFT_1 + SHIFT_2 + SHIFT_3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="157" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ae89530bf6bc6963b606b492867a18602" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_5T</definition>
        <argsstring></argsstring>
        <name>SHIFT_5T</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_5T</qualifiedname>
        <initializer>=
      SHIFT_0 + SHIFT_1 + SHIFT_2 + SHIFT_3 + SHIFT_4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="158" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad3455f94f6780aed16411760e4082791" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_6T</definition>
        <argsstring></argsstring>
        <name>SHIFT_6T</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_6T</qualifiedname>
        <initializer>=
      SHIFT_0 + SHIFT_1 + SHIFT_2 + SHIFT_3 + SHIFT_4 + SHIFT_5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="160" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a56b0922671fbef9af97e523adcd27e31" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_7T</definition>
        <argsstring></argsstring>
        <name>SHIFT_7T</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_7T</qualifiedname>
        <initializer>=
      SHIFT_0 + SHIFT_1 + SHIFT_2 + SHIFT_3 + SHIFT_4 + SHIFT_5 + SHIFT_6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="162" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1acfaa508ae0f4b4f38f2f54208a30837f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_8T</definition>
        <argsstring></argsstring>
        <name>SHIFT_8T</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::SHIFT_8T</qualifiedname>
        <initializer>= SHIFT_0 + SHIFT_1 + SHIFT_2 + SHIFT_3 +
                                       SHIFT_4 + SHIFT_5 + SHIFT_6 + SHIFT_7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="164" column="29" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a3b4ded17097f9829f1598a1d1425a165" prot="public" static="no" mutable="no">
        <type>dimension_type</type>
        <definition>dimension_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_dim</definition>
        <argsstring></argsstring>
        <name>m_dim</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_dim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="175" column="18" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a91a0283b88673452691fbe7f974af248" prot="public" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N0</definition>
        <argsstring></argsstring>
        <name>m_tile_N0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="176" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa9f345103c8f14a0f0ed55f8c6633529" prot="public" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N1</definition>
        <argsstring></argsstring>
        <name>m_tile_N1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="177" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a186749aa199facebc98ebbee9666f3d1" prot="public" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N2</definition>
        <argsstring></argsstring>
        <name>m_tile_N2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="178" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a92045e26ff164666da262a37e9e000c2" prot="public" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N3</definition>
        <argsstring></argsstring>
        <name>m_tile_N3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="179" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a1f41eb68accb4822f1621373dd3c0d20" prot="public" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N4</definition>
        <argsstring></argsstring>
        <name>m_tile_N4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="180" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a2016f1df2469cc100f6a093f5ebdd5e1" prot="public" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N5</definition>
        <argsstring></argsstring>
        <name>m_tile_N5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="181" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a4f3a4e0dae1039c935510a8afa0b5ca0" prot="public" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N6</definition>
        <argsstring></argsstring>
        <name>m_tile_N6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="182" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aec9592d57855d0f72d43971b509c6085" prot="public" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N7</definition>
        <argsstring></argsstring>
        <name>m_tile_N7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::m_tile_N7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="183" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a819512637f841066b62559c4eeb3c0a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="191" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="191" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1af91b717fc683bcd58cf63fc8108fa2c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="221" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="221" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ac279d9bbacc42df66803b19cb5980333" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="257" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="257" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1af460b232b67092123d5d539542845f24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="287" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="287" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1acc55f06ea89ff7a75b48ecf61a6aecf0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="324" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="324" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ade75c62d1e1e941ec777c3bf2444c02a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
          <param>
            <type>typename I6</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5, I6 const &amp;i6) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>I6 const &amp;</type>
          <declname>i6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="372" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="372" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1acd3b6e0009084f6afb2e95eab8c80417" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
          <param>
            <type>typename I6</type>
          </param>
          <param>
            <type>typename I7</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5, I6 const &amp;i6, I7 const &amp;i7) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>I6 const &amp;</type>
          <declname>i6</declname>
        </param>
        <param>
          <type>I7 const &amp;</type>
          <declname>i7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="429" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="429" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a77a1aa643097436ef5e6f208c3763b45" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr array_layout</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr array_layout Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::layout</definition>
        <argsstring>() const</argsstring>
        <name>layout</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="495" column="49" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="495" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aeea560d733e4aa4e666ddb4173a59d9f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_0</definition>
        <argsstring>() const</argsstring>
        <name>dimension_0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="500" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="500" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a1847899bfb1d9f819f1ac795baf54188" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_1</definition>
        <argsstring>() const</argsstring>
        <name>dimension_1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="503" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="503" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa13ae2428587ec39ae32afe5a9a3bd87" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_2</definition>
        <argsstring>() const</argsstring>
        <name>dimension_2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="506" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="506" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a13a74c559d1a5dbf3508cc2b622b1265" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_3</definition>
        <argsstring>() const</argsstring>
        <name>dimension_3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="509" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="509" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ac5093837bcaf9b3a01604d58944cc50e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_4</definition>
        <argsstring>() const</argsstring>
        <name>dimension_4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="512" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="512" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ae1a45eab721634462797a9a0e882e729" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_5</definition>
        <argsstring>() const</argsstring>
        <name>dimension_5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="515" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="515" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6e79bda6d2ae113cc7c2fd6793a96a7e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_6</definition>
        <argsstring>() const</argsstring>
        <name>dimension_6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="518" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="518" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a5367ff969adef58aa05c98f2cf8bd73c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_7</definition>
        <argsstring>() const</argsstring>
        <name>dimension_7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::dimension_7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="521" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="521" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a8da6b99c71a5102adaa7ce6eaa601304" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="525" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="525" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aecf5a10e7aab9906924bc03fec44e0dd" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_0</definition>
        <argsstring>() const</argsstring>
        <name>stride_0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="531" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="531" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a91a25b5951bba78228f83406074e029b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_1</definition>
        <argsstring>() const</argsstring>
        <name>stride_1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="532" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="532" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ac5df3007349cf0c50ab26741d9a8bbce" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_2</definition>
        <argsstring>() const</argsstring>
        <name>stride_2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="533" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="533" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa558dd3256495bf325404e08a2c665b0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_3</definition>
        <argsstring>() const</argsstring>
        <name>stride_3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="534" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="534" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a5c9ca2868315c3b7e50e0800f824fd6f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_4</definition>
        <argsstring>() const</argsstring>
        <name>stride_4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="535" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="535" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a1aa63ff126ca10b241af50de511bbd77" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_5</definition>
        <argsstring>() const</argsstring>
        <name>stride_5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="536" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="536" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ae66ee6a930e94b07136b5b01904ab7c0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_6</definition>
        <argsstring>() const</argsstring>
        <name>stride_6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="537" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="537" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a257be445d417ef3be514a0ee89bfec6b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_7</definition>
        <argsstring>() const</argsstring>
        <name>stride_7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride_7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="538" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="538" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1af631ad73ceae23586de2047d57e779bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename iType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride</definition>
        <argsstring>(iType *const s) const</argsstring>
        <name>stride</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::stride</qualifiedname>
        <param>
          <type>iType *const</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="542" column="31" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="542" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1af84349037bf1e464cf77a9cc32bcb87a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::span</definition>
        <argsstring>() const</argsstring>
        <name>span</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::span</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="570" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="570" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa838fbfb33002ea1d35502ae26785fc8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr bool</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr bool Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::span_is_contiguous</definition>
        <argsstring>() const</argsstring>
        <name>span_is_contiguous</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::span_is_contiguous</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="600" column="41" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="600" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a4fa2049f9ad8f260412e95cd782a5e5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::~ViewOffset</definition>
        <argsstring>()=default</argsstring>
        <name>~ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::~ViewOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="631" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6cb6b2d3292ef046ee372e29aa680af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>()=default</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::ViewOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="632" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a555dfb6c41c2dd807ea56b22e12e2d66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset &amp;)=default</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="633" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad52112d5b60f0b539f8c6602c0aaba23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>KOKKOS_DEFAULTED_FUNCTION <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        <definition>KOKKOS_DEFAULTED_FUNCTION ViewOffset &amp; Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator=</definition>
        <argsstring>(const ViewOffset &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="634" column="40"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1adcc55df6d31fbfa8d4612cc7cc8db00c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>TrivialScalarSize</declname>
            <defname>TrivialScalarSize</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(std::integral_constant&lt; unsigned, TrivialScalarSize &gt; const &amp;, array_layout const arg_layout)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>std::integral_constant&lt; unsigned, TrivialScalarSize &gt; const &amp;</type>
        </param>
        <param>
          <type>array_layout const</type>
          <declname>arg_layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="638" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="638" bodyend="659"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" line="119" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewLayoutTiled.hpp" bodystart="123" bodyend="660"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aed9418aee45e87496134a67a1e127314" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>array_layout</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aeea560d733e4aa4e666ddb4173a59d9f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>dimension_0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a1847899bfb1d9f819f1ac795baf54188" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>dimension_1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa13ae2428587ec39ae32afe5a9a3bd87" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>dimension_2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a13a74c559d1a5dbf3508cc2b622b1265" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>dimension_3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ac5093837bcaf9b3a01604d58944cc50e" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>dimension_4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ae1a45eab721634462797a9a0e882e729" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>dimension_5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6e79bda6d2ae113cc7c2fd6793a96a7e" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>dimension_6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a5367ff969adef58aa05c98f2cf8bd73c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>dimension_7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ac802fcdbabd2196c9f834807e9b86211" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>dimension_type</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa4fffa32141133910d514c5390994f39" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>inner_pattern</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad29155943f84f922e451499b4967c241" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>is_mapping_plugin</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa5e41f1a7996295adb8cfed8e90ed735" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>is_regular</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a77a1aa643097436ef5e6f208c3763b45" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>layout</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a3b4ded17097f9829f1598a1d1425a165" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>m_dim</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a91a0283b88673452691fbe7f974af248" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>m_tile_N0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa9f345103c8f14a0f0ed55f8c6633529" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>m_tile_N1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a186749aa199facebc98ebbee9666f3d1" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>m_tile_N2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a92045e26ff164666da262a37e9e000c2" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>m_tile_N3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a1f41eb68accb4822f1621373dd3c0d20" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>m_tile_N4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a2016f1df2469cc100f6a093f5ebdd5e1" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>m_tile_N5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a4f3a4e0dae1039c935510a8afa0b5ca0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>m_tile_N6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aec9592d57855d0f72d43971b509c6085" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>m_tile_N7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a481e86daeae8a7f71cc41eaa67231eec" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>MASK_0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a7b4aba053e39bb0cbc1333fbc1695c95" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>MASK_1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ac371c1c77e8afd7bb25ac8eff4e06c41" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>MASK_2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ab02359e2e5daebcecda44f8143413c13" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>MASK_3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6486449368142cfc1636707ecafd6091" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>MASK_4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a0e63ff4538344ddb07a0e943cbc1ee3c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>MASK_5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a081eddbc2c33280bb73d675d74749bff" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>MASK_6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad5ed85c77c34e70e697aa616e23c4392" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>MASK_7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a819512637f841066b62559c4eeb3c0a6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1af91b717fc683bcd58cf63fc8108fa2c7" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ac279d9bbacc42df66803b19cb5980333" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1af460b232b67092123d5d539542845f24" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1acc55f06ea89ff7a75b48ecf61a6aecf0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ade75c62d1e1e941ec777c3bf2444c02a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1acd3b6e0009084f6afb2e95eab8c80417" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad52112d5b60f0b539f8c6602c0aaba23" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>operator=</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a75a5e6a07e6da366234d50586e7c3b8c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>outer_pattern</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad9d717fab5cf313f1cd59132faed3af3" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ae62679bcae4bb2bec88e34dea98a1d6b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ada088021272b72d837092c490a3bb815" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6be10fd59bfe995eda061779fa062b9d" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_2T</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad409d64fae78a1a99dc55fcf5815e480" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a66d8191dd9bdf622bf214764772a6df3" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_3T</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6df778e1d41ef709d245b3cc161b7fc9" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a76b8db6e065e4f95f6f3808ce7586d83" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_4T</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6ef0273f36770a901d7c5fac72214d14" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ae89530bf6bc6963b606b492867a18602" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_5T</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a069d2c55ce00288d2125f5dc668496be" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ad3455f94f6780aed16411760e4082791" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_6T</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a88c5aa50e002de2ca3df0ffb0391083a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a56b0922671fbef9af97e523adcd27e31" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_7T</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1acfaa508ae0f4b4f38f2f54208a30837f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>SHIFT_8T</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a8da6b99c71a5102adaa7ce6eaa601304" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>size</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a9ca2d8f8e0f2ddf15e8e7bbc7889879b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>size_type</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1af84349037bf1e464cf77a9cc32bcb87a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>span</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa838fbfb33002ea1d35502ae26785fc8" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>span_is_contiguous</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1af631ad73ceae23586de2047d57e779bd" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>stride</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aecf5a10e7aab9906924bc03fec44e0dd" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>stride_0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a91a25b5951bba78228f83406074e029b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>stride_1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ac5df3007349cf0c50ab26741d9a8bbce" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>stride_2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1aa558dd3256495bf325404e08a2c665b0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>stride_3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a5c9ca2868315c3b7e50e0800f824fd6f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>stride_4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a1aa63ff126ca10b241af50de511bbd77" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>stride_5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1ae66ee6a930e94b07136b5b01904ab7c0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>stride_6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a257be445d417ef3be514a0ee89bfec6b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>stride_7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a6cb6b2d3292ef046ee372e29aa680af7" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a555dfb6c41c2dd807ea56b22e12e2d66" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1adcc55df6d31fbfa8d4612cc7cc8db00c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a2cfff00973f5c1b7f6dac4281f42a55c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>VORank</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_layout_00_01typename_01std_1_1enable597b259afddafee718fe99f95ee4716a_1a4fa2049f9ad8f260412e95cd782a5e5b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Layout, typename std::enable_if&lt;((Dimension::rank&lt;=8) &amp;&amp;(Dimension::rank &gt;=2) &amp;&amp;is_array_layout&lt; Layout &gt;::value &amp;&amp;is_array_layout_tiled&lt; Layout &gt;::value)&gt;::type &gt;</scope><name>~ViewOffset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
