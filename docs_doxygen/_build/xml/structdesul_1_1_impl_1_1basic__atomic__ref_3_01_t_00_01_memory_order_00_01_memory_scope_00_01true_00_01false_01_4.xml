<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4" kind="struct" language="C++" prot="public">
    <compoundname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename MemoryOrder</type>
      </param>
      <param>
        <type>typename MemoryScope</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ada561d21d795bb3fb7fed5c531f6dd19" prot="public" static="no">
        <type>T</type>
        <definition>using desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="142" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ac45176c717debd9c271dd6fc7e9dea17" prot="public" static="no">
        <type>value_type</type>
        <definition>using desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::difference_type =  value_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="143" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ad6cc0b6e1fa91aa2d134f7ba1f74a837" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::_ptr</definition>
        <argsstring></argsstring>
        <name>_ptr</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="139" column="5" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a7b3bb3ea3cdf94c7c9d48ba27220ce9a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::is_always_lock_free</definition>
        <argsstring></argsstring>
        <name>is_always_lock_free</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::is_always_lock_free</qualifiedname>
        <initializer>= atomic_always_lock_free(sizeof(T))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="145" column="25" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a812937f25cdb84961c197b795ffdf1a9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::required_alignment</definition>
        <argsstring></argsstring>
        <name>required_alignment</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::required_alignment</qualifiedname>
        <initializer>= sizeof(T) &gt; alignof(T) ? sizeof(T)
                                                                           : alignof(T)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="147" column="32" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ae868a0956f42fe0fc837777a3446deb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::basic_atomic_ref</definition>
        <argsstring>()=delete</argsstring>
        <name>basic_atomic_ref</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::basic_atomic_ref</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="150" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1abda4365ff17cd61c832bd9fc1ca91db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdesul_1_1_impl_1_1basic__atomic__ref" kindref="compound">basic_atomic_ref</ref> &amp;</type>
        <definition>basic_atomic_ref &amp; desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator=</definition>
        <argsstring>(basic_atomic_ref const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_impl_1_1basic__atomic__ref" kindref="compound">basic_atomic_ref</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="151" column="20"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1aa0aa90082e6c4bd42d873c976175c698" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::basic_atomic_ref</definition>
        <argsstring>(T &amp;obj)</argsstring>
        <name>basic_atomic_ref</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::basic_atomic_ref</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="153" column="12" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a35a514d191340776ea28f37d874502e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::basic_atomic_ref</definition>
        <argsstring>(basic_atomic_ref const &amp;)=default</argsstring>
        <name>basic_atomic_ref</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::basic_atomic_ref</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_impl_1_1basic__atomic__ref" kindref="compound">basic_atomic_ref</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="155" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1aea20dde6c32c660506668a2eb752444e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T</type>
        <definition>T desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator=</definition>
        <argsstring>(T desired) const noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator=</qualifiedname>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="157" column="5" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a00ecb9697ea1ea9910b6a96402ab5a3a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator T</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator T</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="162" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a7f9b6a09b7263bad75cd41e06dea7e7c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION void</type>
        <definition>DESUL_FUNCTION void desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::store</definition>
        <argsstring>(T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>store</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::store</qualifiedname>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="165" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a9722b340b1f430fc4b7dce9cbba25bef" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION T</type>
        <definition>DESUL_FUNCTION T desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::load</definition>
        <argsstring>(_MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>load</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::load</qualifiedname>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="171" column="20" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ad6fce164a24a66c7e50f7128933f5c3d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION T</type>
        <definition>DESUL_FUNCTION T desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::exchange</definition>
        <argsstring>(T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>exchange</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::exchange</qualifiedname>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="176" column="20" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a2d2bdcd77613534e85c38de636430485" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::is_lock_free</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_lock_free</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::is_lock_free</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="181" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a3e688a695ade31003ac031b71d514c06" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SuccessMemoryOrder</type>
          </param>
          <param>
            <type>typename FailureMemoryOrder</type>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::compare_exchange_weak</definition>
        <argsstring>(T &amp;expected, T desired, SuccessMemoryOrder success, FailureMemoryOrder failure) const noexcept</argsstring>
        <name>compare_exchange_weak</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::compare_exchange_weak</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>SuccessMemoryOrder</type>
          <declname>success</declname>
        </param>
        <param>
          <type>FailureMemoryOrder</type>
          <declname>failure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="186" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="186" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a71424bba210c08e0a5599b63372d5edd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::compare_exchange_weak</definition>
        <argsstring>(T &amp;expected, T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>compare_exchange_weak</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::compare_exchange_weak</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="195" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="195" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a09ac06c7e3570fb606a4ec1a6ad9fc35" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SuccessMemoryOrder</type>
          </param>
          <param>
            <type>typename FailureMemoryOrder</type>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::compare_exchange_strong</definition>
        <argsstring>(T &amp;expected, T desired, SuccessMemoryOrder success, FailureMemoryOrder failure) const noexcept</argsstring>
        <name>compare_exchange_strong</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::compare_exchange_strong</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>SuccessMemoryOrder</type>
          <declname>success</declname>
        </param>
        <param>
          <type>FailureMemoryOrder</type>
          <declname>failure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="205" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="205" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1adf753332ac37191012a76621bc138567" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::compare_exchange_strong</definition>
        <argsstring>(T &amp;expected, T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>compare_exchange_strong</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::compare_exchange_strong</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="215" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="215" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a2eedaf28f5db46503f00b311f3648e12" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::fetch_add</definition>
        <argsstring>(value_type arg, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>fetch_add</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::fetch_add</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="226" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a7c2f2c658eeead817c32f538292fb357" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::fetch_sub</definition>
        <argsstring>(value_type arg, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>fetch_sub</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::fetch_sub</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="232" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1af9549a60e2f03d86fed60bd549771fe3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::fetch_and</definition>
        <argsstring>(value_type arg, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>fetch_and</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::fetch_and</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="238" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a60fc47ba797eb0ef32adb240ca0f32ff" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::fetch_or</definition>
        <argsstring>(value_type arg, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>fetch_or</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::fetch_or</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="244" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ab65d9f4c353af20046b6ed9fd3d1a871" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::fetch_xor</definition>
        <argsstring>(value_type arg, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>fetch_xor</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::fetch_xor</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="250" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="250" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a8d99943917d9bf728b027f3b15851f3c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator++</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="254" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="254" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a546dbbe2bf9e23ea7529707ce1010a91" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator++</definition>
        <argsstring>(int) const noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="258" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a4e4c49368a10931c57bcbc32efbd42bb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator--</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="260" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1acda246392ff655e5f4121b3b46ab0f9d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator--</definition>
        <argsstring>(int) const noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator--</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="264" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a6ba76703c1ec1eb085f5b8c184fc25a7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator+=</definition>
        <argsstring>(value_type arg) const noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator+=</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="266" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="266" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a431fc45e291a8afdd39dcca1b422da8b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator-=</definition>
        <argsstring>(value_type arg) const noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator-=</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="270" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1aa140d19deceb5ea80480a14549c284ab" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator&amp;=</definition>
        <argsstring>(value_type arg) const noexcept</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator&amp;=</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="274" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1adcd78de530e329038ce1470d75573235" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator|=</definition>
        <argsstring>(value_type arg) const noexcept</argsstring>
        <name>operator|=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator|=</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="278" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a2480ab1ba79ec50e983458982d760afb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator^=</definition>
        <argsstring>(value_type arg) const noexcept</argsstring>
        <name>operator^=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;::operator^=</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="282" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="282" bodyend="284"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="135" column="1" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="135" bodyend="285"/>
    <listofallmembers>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ad6cc0b6e1fa91aa2d134f7ba1f74a837" prot="private" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>_ptr</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ae868a0956f42fe0fc837777a3446deb2" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>basic_atomic_ref</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1aa0aa90082e6c4bd42d873c976175c698" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>basic_atomic_ref</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a35a514d191340776ea28f37d874502e5" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>basic_atomic_ref</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a09ac06c7e3570fb606a4ec1a6ad9fc35" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>compare_exchange_strong</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1adf753332ac37191012a76621bc138567" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>compare_exchange_strong</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a3e688a695ade31003ac031b71d514c06" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>compare_exchange_weak</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a71424bba210c08e0a5599b63372d5edd" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>compare_exchange_weak</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ac45176c717debd9c271dd6fc7e9dea17" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>difference_type</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ad6fce164a24a66c7e50f7128933f5c3d" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>exchange</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a2eedaf28f5db46503f00b311f3648e12" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>fetch_add</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1af9549a60e2f03d86fed60bd549771fe3" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>fetch_and</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a60fc47ba797eb0ef32adb240ca0f32ff" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>fetch_or</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a7c2f2c658eeead817c32f538292fb357" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>fetch_sub</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ab65d9f4c353af20046b6ed9fd3d1a871" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>fetch_xor</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a7b3bb3ea3cdf94c7c9d48ba27220ce9a" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>is_always_lock_free</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a2d2bdcd77613534e85c38de636430485" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>is_lock_free</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a9722b340b1f430fc4b7dce9cbba25bef" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>load</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a00ecb9697ea1ea9910b6a96402ab5a3a" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator T</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1aa140d19deceb5ea80480a14549c284ab" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator&amp;=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a8d99943917d9bf728b027f3b15851f3c" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator++</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a546dbbe2bf9e23ea7529707ce1010a91" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator++</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a6ba76703c1ec1eb085f5b8c184fc25a7" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator+=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a4e4c49368a10931c57bcbc32efbd42bb" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator--</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1acda246392ff655e5f4121b3b46ab0f9d" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator--</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a431fc45e291a8afdd39dcca1b422da8b" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator-=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1abda4365ff17cd61c832bd9fc1ca91db6" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1aea20dde6c32c660506668a2eb752444e" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a2480ab1ba79ec50e983458982d760afb" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator^=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1adcd78de530e329038ce1470d75573235" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>operator|=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a812937f25cdb84961c197b795ffdf1a9" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>required_alignment</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1a7f9b6a09b7263bad75cd41e06dea7e7c" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>store</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01true_00_01false_01_4_1ada561d21d795bb3fb7fed5c531f6dd19" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, true, false &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
