<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class DeviceType</type>
      </param>
      <param>
        <type>class ValueType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a16df15f5e2ccc7f009d5ba19b53e8d62" prot="public" static="no">
        <type>typename DeviceType::execution_space</type>
        <definition>using Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::ExecSpace =  typename DeviceType::execution_space</definition>
        <argsstring></argsstring>
        <name>ExecSpace</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::ExecSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2965" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2965" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a28a3db9fa564afe2a8a67411a0e372ff" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_range_policy" kindref="compound">Kokkos::RangePolicy</ref>&lt; ExecSpace, <ref refid="struct_kokkos_1_1_index_type" kindref="compound">Kokkos::IndexType</ref>&lt; int64_t &gt; &gt;</type>
        <definition>using Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::PolicyType =  Kokkos::RangePolicy&lt;ExecSpace, Kokkos::IndexType&lt;int64_t&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>PolicyType</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::PolicyType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2966" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2966" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a33d812fe50a86270fb7dda80e57f1c46" prot="public" static="no" mutable="no">
        <type>ExecSpace</type>
        <definition>ExecSpace Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::space</definition>
        <argsstring></argsstring>
        <name>space</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2968" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2968" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a9cc0a7383994b41261949ae1f04bc654" prot="public" static="no" mutable="no">
        <type>ValueType *</type>
        <definition>ValueType* Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2969" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2969" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1adb798ac71821a866f2305d71c62f8fc0" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::n</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2970" column="10" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a60ddd921ec8dab635702f81e4a8e882b" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2971" column="15" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2971" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a36c47e9f83c50e390ede602edea77ff5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::operator()</definition>
        <argsstring>(const size_t i) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::operator()</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2974" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2974" bodyend="2974"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a384a78358331f78b9eacb9f80a2c9dc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::ViewValueFunctor</definition>
        <argsstring>()=default</argsstring>
        <name>ViewValueFunctor</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::ViewValueFunctor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2976" column="3"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1aae714a0ee0e033303fb681a38a440ff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::ViewValueFunctor</definition>
        <argsstring>(const ViewValueFunctor &amp;)=default</argsstring>
        <name>ViewValueFunctor</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::ViewValueFunctor</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2977" column="3"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1ac59ca753af4cdf4f7d35dc73ac5e2f38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref> &amp;</type>
        <definition>ViewValueFunctor &amp; Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::operator=</definition>
        <argsstring>(const ViewValueFunctor &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_value_functor" kindref="compound">ViewValueFunctor</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2978" column="20"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a64637175220b31fea3a8b80cab64f1cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::ViewValueFunctor</definition>
        <argsstring>(ExecSpace const &amp;arg_space, ValueType *const arg_ptr, size_t const arg_n, std::string arg_name)</argsstring>
        <name>ViewValueFunctor</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::ViewValueFunctor</qualifiedname>
        <param>
          <type>ExecSpace const &amp;</type>
          <declname>arg_space</declname>
        </param>
        <param>
          <type>ValueType *const</type>
          <declname>arg_ptr</declname>
        </param>
        <param>
          <type>size_t const</type>
          <declname>arg_n</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2980" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2980" bodyend="2982"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1ae2165caf41170f5d1ffd611528ea4793" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Dummy</type>
            <defval>ValueType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_trivial&lt; Dummy &gt;::value &amp;&amp;std::is_trivially_copy_assignable&lt; Dummy &gt;::value &gt;</type>
        <definition>std::enable_if_t&lt; std::is_trivial&lt; Dummy &gt;::value &amp;&amp; std::is_trivially_copy_assignable&lt; Dummy &gt;::value &gt; Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::construct_shared_allocation</definition>
        <argsstring>()</argsstring>
        <name>construct_shared_allocation</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::construct_shared_allocation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2987" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2987" bodyend="3015"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a505de7a8ff1e462cf0986aeb919c7278" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Dummy</type>
            <defval>ValueType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt;!(std::is_trivial&lt; Dummy &gt;::value &amp;&amp;std::is_trivially_copy_assignable&lt; Dummy &gt;::value)&gt;</type>
        <definition>std::enable_if_t&lt;!(std::is_trivial&lt; Dummy &gt;::value &amp;&amp; std::is_trivially_copy_assignable&lt; Dummy &gt;::value)&gt; Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::construct_shared_allocation</definition>
        <argsstring>()</argsstring>
        <name>construct_shared_allocation</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::construct_shared_allocation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3020" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3020" bodyend="3022"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a51e0c7d38ff0f87529fa79ef953fdbc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::parallel_for_implementation</definition>
        <argsstring>()</argsstring>
        <name>parallel_for_implementation</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::parallel_for_implementation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3024" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3024" bodyend="3051"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a91a62ffbb03a1fa655812533a2c4609c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::destroy_shared_allocation</definition>
        <argsstring>()</argsstring>
        <name>destroy_shared_allocation</name>
        <qualifiedname>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;::destroy_shared_allocation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="3053" column="8" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="3053" bodyend="3053"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2964" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2964" bodyend="3054"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1ae2165caf41170f5d1ffd611528ea4793" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>construct_shared_allocation</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a505de7a8ff1e462cf0986aeb919c7278" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>construct_shared_allocation</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a91a62ffbb03a1fa655812533a2c4609c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>destroy_shared_allocation</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a16df15f5e2ccc7f009d5ba19b53e8d62" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>ExecSpace</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1adb798ac71821a866f2305d71c62f8fc0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>n</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a60ddd921ec8dab635702f81e4a8e882b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>name</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a36c47e9f83c50e390ede602edea77ff5" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1ac59ca753af4cdf4f7d35dc73ac5e2f38" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>operator=</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a51e0c7d38ff0f87529fa79ef953fdbc1" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>parallel_for_implementation</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a28a3db9fa564afe2a8a67411a0e372ff" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>PolicyType</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a9cc0a7383994b41261949ae1f04bc654" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>ptr</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a33d812fe50a86270fb7dda80e57f1c46" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>space</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a384a78358331f78b9eacb9f80a2c9dc6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>ViewValueFunctor</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1aae714a0ee0e033303fb681a38a440ff6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>ViewValueFunctor</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_value_functor_3_01_device_type_00_01_value_type_00_01true_01_4_1a64637175220b31fea3a8b80cab64f1cb" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewValueFunctor&lt; DeviceType, ValueType, true &gt;</scope><name>ViewValueFunctor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
