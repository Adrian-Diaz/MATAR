<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class Space</type>
      </param>
      <param>
        <type>class...</type>
        <declname>Prop</declname>
        <defname>Prop</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1a1b595818c98e74691bea5a714fe9e595" prot="public" static="no">
        <type>typename Space::execution_space</type>
        <definition>using Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::execution_space =  typename Space::execution_space</definition>
        <argsstring></argsstring>
        <name>execution_space</name>
        <qualifiedname>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::execution_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="222" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1a769c6824d40ead5e63a984141445d83b" prot="public" static="no">
        <type>typename Space::memory_space</type>
        <definition>using Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::memory_space =  typename Space::memory_space</definition>
        <argsstring></argsstring>
        <name>memory_space</name>
        <qualifiedname>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::memory_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="223" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1abcd846ab9e700066e3fa0b76b5943d79" prot="public" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_impl_1_1_host_mirror" kindref="compound">Kokkos::Impl::HostMirror</ref>&lt; Space &gt;::Space::memory_space</type>
        <definition>using Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::HostMirrorSpace =  typename Kokkos::Impl::HostMirror&lt;Space&gt;::Space::memory_space</definition>
        <argsstring></argsstring>
        <name>HostMirrorSpace</name>
        <qualifiedname>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::HostMirrorSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="224" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1a0512b07abc788fed99bd5fe39181720b" prot="public" static="no">
        <type>typename execution_space::array_layout</type>
        <definition>using Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::array_layout =  typename execution_space::array_layout</definition>
        <argsstring></argsstring>
        <name>array_layout</name>
        <qualifiedname>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::array_layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="226" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1ae07a3cdb10cb7cba65a09468c46082ef" prot="public" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; void, Prop... &gt;::memory_traits</type>
        <definition>using Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::memory_traits =  typename ViewTraits&lt;void, Prop...&gt;::memory_traits</definition>
        <argsstring></argsstring>
        <name>memory_traits</name>
        <qualifiedname>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::memory_traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="227" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1aff87d5e0fed58dd731c9c5ae419fe823" prot="public" static="no">
        <type>typename <ref refid="struct_kokkos_1_1_view_traits" kindref="compound">ViewTraits</ref>&lt; void, Prop... &gt;::specialize</type>
        <definition>using Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::specialize =  typename ViewTraits&lt;void, Prop...&gt;::specialize</definition>
        <argsstring></argsstring>
        <name>specialize</name>
        <qualifiedname>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;::specialize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="228" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" line="207" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_View.hpp" bodystart="208" bodyend="229"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1a0512b07abc788fed99bd5fe39181720b" prot="public" virt="non-virtual"><scope>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;</scope><name>array_layout</name></member>
      <member refid="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1a1b595818c98e74691bea5a714fe9e595" prot="public" virt="non-virtual"><scope>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;</scope><name>execution_space</name></member>
      <member refid="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1abcd846ab9e700066e3fa0b76b5943d79" prot="public" virt="non-virtual"><scope>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;</scope><name>HostMirrorSpace</name></member>
      <member refid="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1a769c6824d40ead5e63a984141445d83b" prot="public" virt="non-virtual"><scope>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;</scope><name>memory_space</name></member>
      <member refid="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1ae07a3cdb10cb7cba65a09468c46082ef" prot="public" virt="non-virtual"><scope>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;</scope><name>memory_traits</name></member>
      <member refid="struct_kokkos_1_1_view_traits_3_01typename_01std_1_1enable__if_3_01_kokkos_1_1is__space_3_01_spa2fe876beeecaaadce4947eadb5a5a1d8_1aff87d5e0fed58dd731c9c5ae419fe823" prot="public" virt="non-virtual"><scope>Kokkos::ViewTraits&lt; typename std::enable_if&lt; Kokkos::is_space&lt; Space &gt;::value &gt;::type, Space, Prop... &gt;</scope><name>specialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
