<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_common_8hpp" kind="file" language="C++">
    <compoundname>Common.hpp</compoundname>
    <includes refid="_macros_8hpp" local="yes">desul/atomics/Macros.hpp</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">atomic</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="_atomic___ref_8hpp" local="yes">src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp</includedby>
    <includedby refid="_compare___exchange___c_u_d_a_8hpp" local="yes">src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_CUDA.hpp</includedby>
    <includedby refid="_compare___exchange___g_c_c_8hpp" local="yes">src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_GCC.hpp</includedby>
    <includedby refid="_compare___exchange___h_i_p_8hpp" local="yes">src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_HIP.hpp</includedby>
    <includedby refid="_compare___exchange___m_s_v_c_8hpp" local="yes">src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_MSVC.hpp</includedby>
    <includedby refid="_compare___exchange___open_m_p_8hpp" local="yes">src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_OpenMP.hpp</includedby>
    <includedby refid="_compare___exchange___s_y_c_l_8hpp" local="yes">src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_SYCL.hpp</includedby>
    <includedby refid="_generic_8hpp" local="yes">src/Kokkos/kokkos/core/src/desul/atomics/Generic.hpp</includedby>
    <includedby refid="_lock___array___cuda_8hpp" local="yes">src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array_Cuda.hpp</includedby>
    <includedby refid="_lock___array___h_i_p_8hpp" local="yes">src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array_HIP.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp</label>
        <link refid="_common_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>desul/atomics/Macros.hpp</label>
        <link refid="_macros_8hpp_source"/>
      </node>
      <node id="4">
        <label>atomic</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="5">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/Kokkos/kokkos/core/src/desul/atomics.hpp</label>
        <link refid="atomics_8hpp_source"/>
      </node>
      <node id="2">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp</label>
        <link refid="_atomic___ref_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp</label>
        <link refid="_common_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_CUDA.hpp</label>
        <link refid="_compare___exchange___c_u_d_a_8hpp_source"/>
      </node>
      <node id="5">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_GCC.hpp</label>
        <link refid="_compare___exchange___g_c_c_8hpp_source"/>
      </node>
      <node id="6">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_HIP.hpp</label>
        <link refid="_compare___exchange___h_i_p_8hpp_source"/>
      </node>
      <node id="7">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_MSVC.hpp</label>
        <link refid="_compare___exchange___m_s_v_c_8hpp_source"/>
      </node>
      <node id="8">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_OpenMP.hpp</label>
        <link refid="_compare___exchange___open_m_p_8hpp_source"/>
      </node>
      <node id="9">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Compare_Exchange_SYCL.hpp</label>
        <link refid="_compare___exchange___s_y_c_l_8hpp_source"/>
      </node>
      <node id="10">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Generic.hpp</label>
        <link refid="_generic_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array.hpp</label>
        <link refid="_lock___array_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array_Cuda.hpp</label>
        <link refid="_lock___array___cuda_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/Lock_Array_HIP.hpp</label>
        <link refid="_lock___array___h_i_p_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structdesul_1_1_dummy16_byte_value" prot="public">desul::Dummy16ByteValue</innerclass>
    <innerclass refid="structdesul_1_1_memory_order_seq_cst" prot="public">desul::MemoryOrderSeqCst</innerclass>
    <innerclass refid="structdesul_1_1_memory_order_acq_rel" prot="public">desul::MemoryOrderAcqRel</innerclass>
    <innerclass refid="structdesul_1_1_memory_order_acquire" prot="public">desul::MemoryOrderAcquire</innerclass>
    <innerclass refid="structdesul_1_1_memory_order_release" prot="public">desul::MemoryOrderRelease</innerclass>
    <innerclass refid="structdesul_1_1_memory_order_relaxed" prot="public">desul::MemoryOrderRelaxed</innerclass>
    <innerclass refid="structdesul_1_1_memory_scope_system" prot="public">desul::MemoryScopeSystem</innerclass>
    <innerclass refid="structdesul_1_1_memory_scope_node" prot="public">desul::MemoryScopeNode</innerclass>
    <innerclass refid="structdesul_1_1_memory_scope_device" prot="public">desul::MemoryScopeDevice</innerclass>
    <innerclass refid="structdesul_1_1_memory_scope_core" prot="public">desul::MemoryScopeCore</innerclass>
    <innerclass refid="structdesul_1_1_g_c_c_memory_order_3_01_memory_order_relaxed_01_4" prot="public">desul::GCCMemoryOrder&lt; MemoryOrderRelaxed &gt;</innerclass>
    <innerclass refid="structdesul_1_1_g_c_c_memory_order_3_01_memory_order_acquire_01_4" prot="public">desul::GCCMemoryOrder&lt; MemoryOrderAcquire &gt;</innerclass>
    <innerclass refid="structdesul_1_1_g_c_c_memory_order_3_01_memory_order_release_01_4" prot="public">desul::GCCMemoryOrder&lt; MemoryOrderRelease &gt;</innerclass>
    <innerclass refid="structdesul_1_1_g_c_c_memory_order_3_01_memory_order_acq_rel_01_4" prot="public">desul::GCCMemoryOrder&lt; MemoryOrderAcqRel &gt;</innerclass>
    <innerclass refid="structdesul_1_1_g_c_c_memory_order_3_01_memory_order_seq_cst_01_4" prot="public">desul::GCCMemoryOrder&lt; MemoryOrderSeqCst &gt;</innerclass>
    <innerclass refid="structdesul_1_1_c_x_x_memory_order_3_01_memory_order_relaxed_01_4" prot="public">desul::CXXMemoryOrder&lt; MemoryOrderRelaxed &gt;</innerclass>
    <innerclass refid="structdesul_1_1_c_x_x_memory_order_3_01_memory_order_acquire_01_4" prot="public">desul::CXXMemoryOrder&lt; MemoryOrderAcquire &gt;</innerclass>
    <innerclass refid="structdesul_1_1_c_x_x_memory_order_3_01_memory_order_release_01_4" prot="public">desul::CXXMemoryOrder&lt; MemoryOrderRelease &gt;</innerclass>
    <innerclass refid="structdesul_1_1_c_x_x_memory_order_3_01_memory_order_acq_rel_01_4" prot="public">desul::CXXMemoryOrder&lt; MemoryOrderAcqRel &gt;</innerclass>
    <innerclass refid="structdesul_1_1_c_x_x_memory_order_3_01_memory_order_seq_cst_01_4" prot="public">desul::CXXMemoryOrder&lt; MemoryOrderSeqCst &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1_cmp_exch_failure_order" prot="public">desul::Impl::CmpExchFailureOrder</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1numeric__limits__max_3_01uint32__t_01_4" prot="public">desul::Impl::numeric_limits_max&lt; uint32_t &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1numeric__limits__max_3_01uint64__t_01_4" prot="public">desul::Impl::numeric_limits_max&lt; uint64_t &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type_3_014_01_4" prot="public">desul::Impl::atomic_compare_exchange_type&lt; 4 &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type_3_018_01_4" prot="public">desul::Impl::atomic_compare_exchange_type&lt; 8 &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type_3_0116_01_4" prot="public">desul::Impl::atomic_compare_exchange_type&lt; 16 &gt;</innerclass>
    <innerclass refid="structdesul_1_1_impl_1_1dont__deduce__this__parameter" prot="public">desul::Impl::dont_deduce_this_parameter</innerclass>
    <innernamespace refid="namespacedesul">desul</innernamespace>
    <innernamespace refid="namespacedesul_1_1_impl">desul::Impl</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_common_8hpp_1a8faf1f097f05558889df4c44d052d35e" prot="public" static="no">
        <name>__ATOMIC_RELAXED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" line="58" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_common_8hpp_1a762c3361bcfeccc1f2742cc94b1ab65b" prot="public" static="no">
        <name>__ATOMIC_CONSUME</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" line="59" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_common_8hpp_1a72e3c30a05bd2bb63d76550e451a438e" prot="public" static="no">
        <name>__ATOMIC_ACQUIRE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" line="60" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_common_8hpp_1a5822cf04414d99e0ee81e8bbe182226b" prot="public" static="no">
        <name>__ATOMIC_RELEASE</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" line="61" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_common_8hpp_1acdfdd67de0664b690c42bba327cf7da1" prot="public" static="no">
        <name>__ATOMIC_ACQ_REL</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" line="62" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_common_8hpp_1a0609dc2b702d5980de44c01bd373136a" prot="public" static="no">
        <name>__ATOMIC_SEQ_CST</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" line="63" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>(c)<sp/>2019,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment">and<sp/>DESUL<sp/>project<sp/>contributors.<sp/>See<sp/>the<sp/>COPYRIGHT<sp/>file<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">Source:<sp/>https://github.com/desul/desul</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">SPDX-License-Identifier:<sp/>(BSD-3-Clause)</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DESUL_ATOMICS_COMMON_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DESUL_ATOMICS_COMMON_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;desul/atomics/Macros.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">desul<sp/>{</highlight></codeline>
<codeline lineno="17" refid="structdesul_1_1_dummy16_byte_value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(16)<sp/><ref refid="structdesul_1_1_dummy16_byte_value" kindref="compound">Dummy16ByteValue</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>int64_t<sp/>value1;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>int64_t<sp/>value2;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(<ref refid="structdesul_1_1_dummy16_byte_value" kindref="compound">Dummy16ByteValue</ref><sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value1<sp/>!=<sp/>v.value1)<sp/>||<sp/>(value2<sp/>!=<sp/>v.value2);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(<ref refid="structdesul_1_1_dummy16_byte_value" kindref="compound">Dummy16ByteValue</ref><sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value1<sp/>==<sp/>v.value1)<sp/>&amp;&amp;<sp/>(value2<sp/>==<sp/>v.value2);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>desul</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MemoryOrder<sp/>Tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">desul<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Memory<sp/>order<sp/>sequential<sp/>consistent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structdesul_1_1_memory_order_seq_cst" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_memory_order_seq_cst" kindref="compound">MemoryOrderSeqCst</ref><sp/>{};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Memory<sp/>order<sp/>acquire<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structdesul_1_1_memory_order_acq_rel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_memory_order_acq_rel" kindref="compound">MemoryOrderAcqRel</ref><sp/>{};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Memory<sp/>order<sp/>acquire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structdesul_1_1_memory_order_acquire" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_memory_order_acquire" kindref="compound">MemoryOrderAcquire</ref><sp/>{};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Memory<sp/>order<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structdesul_1_1_memory_order_release" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_memory_order_release" kindref="compound">MemoryOrderRelease</ref><sp/>{};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Memory<sp/>order<sp/>relaxed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structdesul_1_1_memory_order_relaxed" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_memory_order_relaxed" kindref="compound">MemoryOrderRelaxed</ref><sp/>{};</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>desul</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Memory<sp/>Scope<sp/>Tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">desul<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Entire<sp/>machine<sp/>scope<sp/>(e.g.<sp/>for<sp/>global<sp/>arrays)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structdesul_1_1_memory_scope_system" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_memory_scope_system" kindref="compound">MemoryScopeSystem</ref><sp/>{};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Node<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structdesul_1_1_memory_scope_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_memory_scope_node" kindref="compound">MemoryScopeNode</ref><sp/>{};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Device<sp/>or<sp/>socket<sp/>scope<sp/>(i.e.<sp/>a<sp/>CPU<sp/>socket,<sp/>a<sp/>single<sp/>GPU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structdesul_1_1_memory_scope_device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_memory_scope_device" kindref="compound">MemoryScopeDevice</ref><sp/>{};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Core<sp/>scoped<sp/>(i.e.<sp/>a<sp/>shared<sp/>Level<sp/>1<sp/>cache)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structdesul_1_1_memory_scope_core" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_memory_scope_core" kindref="compound">MemoryScopeCore</ref><sp/>{};</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>desul</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__ATOMIC_RELAXED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ATOMIC_RELAXED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ATOMIC_CONSUME<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ATOMIC_ACQUIRE<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ATOMIC_RELEASE<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ATOMIC_ACQ_REL<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ATOMIC_SEQ_CST<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">desul<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MemoryOrderDesul&gt;</highlight></codeline>
<codeline lineno="68" refid="structdesul_1_1_g_c_c_memory_order" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_g_c_c_memory_order" kindref="compound">GCCMemoryOrder</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="71" refid="structdesul_1_1_g_c_c_memory_order_3_01_memory_order_relaxed_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_g_c_c_memory_order" kindref="compound">GCCMemoryOrder</ref>&lt;<ref refid="structdesul_1_1_memory_order_relaxed" kindref="compound">MemoryOrderRelaxed</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>__ATOMIC_RELAXED;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="76" refid="structdesul_1_1_g_c_c_memory_order_3_01_memory_order_acquire_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_g_c_c_memory_order" kindref="compound">GCCMemoryOrder</ref>&lt;<ref refid="structdesul_1_1_memory_order_acquire" kindref="compound">MemoryOrderAcquire</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>__ATOMIC_ACQUIRE;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="81" refid="structdesul_1_1_g_c_c_memory_order_3_01_memory_order_release_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_g_c_c_memory_order" kindref="compound">GCCMemoryOrder</ref>&lt;<ref refid="structdesul_1_1_memory_order_release" kindref="compound">MemoryOrderRelease</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>__ATOMIC_RELEASE;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="86" refid="structdesul_1_1_g_c_c_memory_order_3_01_memory_order_acq_rel_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_g_c_c_memory_order" kindref="compound">GCCMemoryOrder</ref>&lt;<ref refid="structdesul_1_1_memory_order_acq_rel" kindref="compound">MemoryOrderAcqRel</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>__ATOMIC_ACQ_REL;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="91" refid="structdesul_1_1_g_c_c_memory_order_3_01_memory_order_seq_cst_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_g_c_c_memory_order" kindref="compound">GCCMemoryOrder</ref>&lt;<ref refid="structdesul_1_1_memory_order_seq_cst" kindref="compound">MemoryOrderSeqCst</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>__ATOMIC_SEQ_CST;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MemoryOrderDesul&gt;</highlight></codeline>
<codeline lineno="96" refid="structdesul_1_1_c_x_x_memory_order" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_c_x_x_memory_order" kindref="compound">CXXMemoryOrder</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="99" refid="structdesul_1_1_c_x_x_memory_order_3_01_memory_order_relaxed_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_c_x_x_memory_order" kindref="compound">CXXMemoryOrder</ref>&lt;<ref refid="structdesul_1_1_memory_order_relaxed" kindref="compound">MemoryOrderRelaxed</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::memory_order<sp/>value<sp/>=<sp/>std::memory_order_relaxed;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="104" refid="structdesul_1_1_c_x_x_memory_order_3_01_memory_order_acquire_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_c_x_x_memory_order" kindref="compound">CXXMemoryOrder</ref>&lt;<ref refid="structdesul_1_1_memory_order_acquire" kindref="compound">MemoryOrderAcquire</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::memory_order<sp/>value<sp/>=<sp/>std::memory_order_acquire;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="109" refid="structdesul_1_1_c_x_x_memory_order_3_01_memory_order_release_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_c_x_x_memory_order" kindref="compound">CXXMemoryOrder</ref>&lt;<ref refid="structdesul_1_1_memory_order_release" kindref="compound">MemoryOrderRelease</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::memory_order<sp/>value<sp/>=<sp/>std::memory_order_release;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="114" refid="structdesul_1_1_c_x_x_memory_order_3_01_memory_order_acq_rel_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_c_x_x_memory_order" kindref="compound">CXXMemoryOrder</ref>&lt;<ref refid="structdesul_1_1_memory_order_acq_rel" kindref="compound">MemoryOrderAcqRel</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::memory_order<sp/>value<sp/>=<sp/>std::memory_order_acq_rel;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="119" refid="structdesul_1_1_c_x_x_memory_order_3_01_memory_order_seq_cst_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_c_x_x_memory_order" kindref="compound">CXXMemoryOrder</ref>&lt;<ref refid="structdesul_1_1_memory_order_seq_cst" kindref="compound">MemoryOrderSeqCst</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::memory_order<sp/>value<sp/>=<sp/>std::memory_order_seq_cst;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MemoryOrder&gt;</highlight></codeline>
<codeline lineno="125" refid="structdesul_1_1_impl_1_1_cmp_exch_failure_order" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_impl_1_1_cmp_exch_failure_order" kindref="compound">CmpExchFailureOrder</ref><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">memory_order<sp/>=<sp/>std::conditional_t&lt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;MemoryOrder,<sp/>MemoryOrderAcqRel&gt;{},</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdesul_1_1_memory_order_acquire" kindref="compound">MemoryOrderAcquire</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;std::is_same&lt;MemoryOrder,<sp/>MemoryOrderRelease&gt;{},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdesul_1_1_memory_order_relaxed" kindref="compound">MemoryOrderRelaxed</ref>,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryOrder&gt;&gt;;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MemoryOrder&gt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">cmpexch_failure_memory_order<sp/>=</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CmpExchFailureOrder&lt;MemoryOrder&gt;::memory_order;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>in<sp/>principle<sp/>use<sp/>std::numeric_limits,<sp/>but<sp/>that<sp/>requires<sp/>constexpr<sp/>function<sp/>support<sp/>on<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Currently<sp/>that<sp/>is<sp/>still<sp/>considered<sp/>experimetal<sp/>on<sp/>CUDA<sp/>and<sp/>sometimes<sp/>not<sp/>reliable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">desul<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="145" refid="structdesul_1_1_impl_1_1numeric__limits__max" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_impl_1_1numeric__limits__max" kindref="compound">numeric_limits_max</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="148" refid="structdesul_1_1_impl_1_1numeric__limits__max_3_01uint32__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_impl_1_1numeric__limits__max" kindref="compound">numeric_limits_max</ref>&lt;uint32_t&gt;<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>value<sp/>=<sp/>0xffffffffu;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="152" refid="structdesul_1_1_impl_1_1numeric__limits__max_3_01uint64__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_impl_1_1numeric__limits__max" kindref="compound">numeric_limits_max</ref>&lt;uint64_t&gt;<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint64_t<sp/>value<sp/>=<sp/>0xfffffffflu;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>atomic_always_lock_free(std::size_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size<sp/>==<sp/>4<sp/>||<sp/>size<sp/>==<sp/>8</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DESUL_HAVE_16BYTE_COMPARE_AND_SWAP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>size<sp/>==<sp/>16</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Size,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Align&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">DESUL_INLINE_FUNCTION<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>atomic_is_lock_free()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Size<sp/>==<sp/>4<sp/>||<sp/>Size<sp/>==<sp/>8</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DESUL_HAVE_16BYTE_COMPARE_AND_SWAP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>Size<sp/>==<sp/>16</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="174" refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type" kindref="compound">atomic_compare_exchange_type</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="177" refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type_3_014_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type" kindref="compound">atomic_compare_exchange_type</ref>&lt;4&gt;<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>int32_t;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="182" refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type_3_018_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type" kindref="compound">atomic_compare_exchange_type</ref>&lt;8&gt;<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>int64_t;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="187" refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type_3_0116_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_impl_1_1atomic__compare__exchange__type" kindref="compound">atomic_compare_exchange_type</ref>&lt;16&gt;<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_dummy16_byte_value" kindref="compound">type</ref><sp/>=<sp/><ref refid="structdesul_1_1_dummy16_byte_value" kindref="compound">Dummy16ByteValue</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="192" refid="structdesul_1_1_impl_1_1dont__deduce__this__parameter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_impl_1_1dont__deduce__this__parameter" kindref="compound">dont_deduce_this_parameter</ref><sp/>{<sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>T;<sp/>};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">dont_deduce_this_parameter_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>dont_deduce_this_parameter&lt;T&gt;::type;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/Kokkos/kokkos/core/src/desul/atomics/Common.hpp"/>
  </compounddef>
</doxygen>
