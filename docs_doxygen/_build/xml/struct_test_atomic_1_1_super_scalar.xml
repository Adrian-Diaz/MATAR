<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_test_atomic_1_1_super_scalar" kind="struct" language="C++" prot="public">
    <compoundname>TestAtomic::SuperScalar</compoundname>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test_atomic_1_1_super_scalar_1ae7a41d6b199e6f70f5e87c2a76c9d2e6" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double TestAtomic::SuperScalar&lt; N &gt;::val[N]</definition>
        <argsstring>[N]</argsstring>
        <name>val</name>
        <qualifiedname>TestAtomic::SuperScalar::val</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="53" column="10" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1a2d61f2793e54de3fd8fdcb5be4b6c43e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION TestAtomic::SuperScalar&lt; N &gt;::SuperScalar</definition>
        <argsstring>()</argsstring>
        <name>SuperScalar</name>
        <qualifiedname>TestAtomic::SuperScalar::SuperScalar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="56" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1ac46f42440104dfccbf0e1032fa39e0d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION TestAtomic::SuperScalar&lt; N &gt;::SuperScalar</definition>
        <argsstring>(const SuperScalar &amp;src)</argsstring>
        <name>SuperScalar</name>
        <qualifiedname>TestAtomic::SuperScalar::SuperScalar</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="63" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1a3081a74708fe2d3fa58a900ee1397d9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION TestAtomic::SuperScalar&lt; N &gt;::SuperScalar</definition>
        <argsstring>(const volatile SuperScalar &amp;src)</argsstring>
        <name>SuperScalar</name>
        <qualifiedname>TestAtomic::SuperScalar::SuperScalar</qualifiedname>
        <param>
          <type>const volatile <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="70" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1ab84e6b2fa4ccc9c5bf3a846ace2a5bfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION SuperScalar &amp; TestAtomic::SuperScalar&lt; N &gt;::operator=</definition>
        <argsstring>(const SuperScalar &amp;src)</argsstring>
        <name>operator=</name>
        <qualifiedname>TestAtomic::SuperScalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="77" column="15" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1ad9680145d0dbaa01c3082dfe6d1f0d2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION SuperScalar &amp; TestAtomic::SuperScalar&lt; N &gt;::operator=</definition>
        <argsstring>(const volatile SuperScalar &amp;src)</argsstring>
        <name>operator=</name>
        <qualifiedname>TestAtomic::SuperScalar::operator=</qualifiedname>
        <param>
          <type>const volatile <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="85" column="15" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="85" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1ad13c9ebfe76155d05f1eff208e63022e" prot="public" static="no" const="no" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void TestAtomic::SuperScalar&lt; N &gt;::operator=</definition>
        <argsstring>(const SuperScalar &amp;src) volatile</argsstring>
        <name>operator=</name>
        <qualifiedname>TestAtomic::SuperScalar::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="93" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1a0f5af74a37b4429ba6b2730dc50d504f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION SuperScalar TestAtomic::SuperScalar&lt; N &gt;::operator+</definition>
        <argsstring>(const SuperScalar &amp;src) const</argsstring>
        <name>operator+</name>
        <qualifiedname>TestAtomic::SuperScalar::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="100" column="15" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1a3bb8b7e96e126f4b774e612aa711cdf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION SuperScalar &amp; TestAtomic::SuperScalar&lt; N &gt;::operator+=</definition>
        <argsstring>(const double &amp;src)</argsstring>
        <name>operator+=</name>
        <qualifiedname>TestAtomic::SuperScalar::operator+=</qualifiedname>
        <param>
          <type>const double &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="109" column="15" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="109" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1aaa9771c92021143638f07032b92e8db8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION SuperScalar &amp; TestAtomic::SuperScalar&lt; N &gt;::operator+=</definition>
        <argsstring>(const SuperScalar &amp;src)</argsstring>
        <name>operator+=</name>
        <qualifiedname>TestAtomic::SuperScalar::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="117" column="15" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="117" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1a21c6e39c8d7c242e506061b62873dbee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>KOKKOS_INLINE_FUNCTION bool TestAtomic::SuperScalar&lt; N &gt;::operator==</definition>
        <argsstring>(const SuperScalar &amp;src) const</argsstring>
        <name>operator==</name>
        <qualifiedname>TestAtomic::SuperScalar::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="125" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="125" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1ae22e9e43757adf9591c8f183cb94c9cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>KOKKOS_INLINE_FUNCTION bool TestAtomic::SuperScalar&lt; N &gt;::operator!=</definition>
        <argsstring>(const SuperScalar &amp;src) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>TestAtomic::SuperScalar::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="134" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_atomic_1_1_super_scalar_1a17eaa638364163642fe6cd80937cf6d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION TestAtomic::SuperScalar&lt; N &gt;::SuperScalar</definition>
        <argsstring>(const double &amp;src)</argsstring>
        <name>SuperScalar</name>
        <qualifiedname>TestAtomic::SuperScalar::SuperScalar</qualifiedname>
        <param>
          <type>const double &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="143" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="143" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="52" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="52" bodyend="148"/>
    <listofallmembers>
      <member refid="struct_test_atomic_1_1_super_scalar_1ae22e9e43757adf9591c8f183cb94c9cb" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>operator!=</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1a0f5af74a37b4429ba6b2730dc50d504f" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>operator+</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1a3bb8b7e96e126f4b774e612aa711cdf9" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>operator+=</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1aaa9771c92021143638f07032b92e8db8" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>operator+=</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1ab84e6b2fa4ccc9c5bf3a846ace2a5bfd" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>operator=</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1ad9680145d0dbaa01c3082dfe6d1f0d2d" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>operator=</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1ad13c9ebfe76155d05f1eff208e63022e" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>operator=</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1a21c6e39c8d7c242e506061b62873dbee" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>operator==</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1a2d61f2793e54de3fd8fdcb5be4b6c43e" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>SuperScalar</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1ac46f42440104dfccbf0e1032fa39e0d5" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>SuperScalar</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1a3081a74708fe2d3fa58a900ee1397d9c" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>SuperScalar</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1a17eaa638364163642fe6cd80937cf6d2" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>SuperScalar</name></member>
      <member refid="struct_test_atomic_1_1_super_scalar_1ae7a41d6b199e6f70f5e87c2a76c9d2e6" prot="public" virt="non-virtual"><scope>TestAtomic::SuperScalar</scope><name>val</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
