<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4" kind="struct" language="C++" prot="public">
    <compoundname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename MemoryOrder</type>
      </param>
      <param>
        <type>typename MemoryScope</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1aecc57c13a5c882b49eb5fd9ed75ffa36" prot="public" static="no">
        <type>T</type>
        <definition>using desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="50" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1ae8e62591e21ae58e454f4538bed68d18" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::_ptr</definition>
        <argsstring></argsstring>
        <name>_ptr</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="42" column="5" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1ae0c206e2be7876c03bde0428efa03134" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::_min_alignment</definition>
        <argsstring></argsstring>
        <name>_min_alignment</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::_min_alignment</qualifiedname>
        <initializer>= (sizeof(T) &amp; (sizeof(T) - 1)) || sizeof(T) &gt; 16
                                            ? 0
                                            : sizeof(T)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="45" column="24" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a1155dce7e8af8e02aaedc135a2dba382" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::is_always_lock_free</definition>
        <argsstring></argsstring>
        <name>is_always_lock_free</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::is_always_lock_free</qualifiedname>
        <initializer>= atomic_always_lock_free(sizeof(T))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="52" column="25" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a048df493bdb3758bc38e2b40c14e2b38" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::required_alignment</definition>
        <argsstring></argsstring>
        <name>required_alignment</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::required_alignment</qualifiedname>
        <initializer>= _min_alignment &gt; alignof(T)
                                                        ? _min_alignment
                                                        : alignof(T)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="54" column="32" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1ac5782e09024803002f4af1c1079ce1bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::basic_atomic_ref</definition>
        <argsstring>()=delete</argsstring>
        <name>basic_atomic_ref</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::basic_atomic_ref</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="58" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a1e926170bd467783ae21c6b9fad858f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdesul_1_1_impl_1_1basic__atomic__ref" kindref="compound">basic_atomic_ref</ref> &amp;</type>
        <definition>basic_atomic_ref &amp; desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::operator=</definition>
        <argsstring>(basic_atomic_ref const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_impl_1_1basic__atomic__ref" kindref="compound">basic_atomic_ref</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="59" column="20"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a3ba7a176c25c329567f9d94255b8a31a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::basic_atomic_ref</definition>
        <argsstring>(basic_atomic_ref const &amp;)=default</argsstring>
        <name>basic_atomic_ref</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::basic_atomic_ref</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_impl_1_1basic__atomic__ref" kindref="compound">basic_atomic_ref</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="61" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1afea1f99cf473e9ead7219f5e5b45351c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::basic_atomic_ref</definition>
        <argsstring>(T &amp;obj)</argsstring>
        <name>basic_atomic_ref</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::basic_atomic_ref</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="63" column="12" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1aee591811f80e635b0b7342b1d6a7540a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T</type>
        <definition>T desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::operator=</definition>
        <argsstring>(T desired) const noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::operator=</qualifiedname>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="65" column="5" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a7ae154adf50bbf84f33c46af27976000" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::operator T</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator T</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::operator T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="70" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a7ab6705ae9d64df98e5a28e8a00f5955" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION void</type>
        <definition>DESUL_FUNCTION void desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::store</definition>
        <argsstring>(T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>store</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::store</qualifiedname>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="73" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a96a8c12ff38fcf27a130b17945991301" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION T</type>
        <definition>DESUL_FUNCTION T desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::load</definition>
        <argsstring>(_MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>load</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::load</qualifiedname>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="79" column="20" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a319c608609f148090b9041c4d8e921b5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION T</type>
        <definition>DESUL_FUNCTION T desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::exchange</definition>
        <argsstring>(T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>exchange</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::exchange</qualifiedname>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="84" column="20" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a51d31e2222b6bbbcf2239625d42c301a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::is_lock_free</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_lock_free</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::is_lock_free</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="89" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a2181a2daafe70353c90190a74ff1c5fd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SuccessMemoryOrder</type>
          </param>
          <param>
            <type>typename FailureMemoryOrder</type>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::compare_exchange_weak</definition>
        <argsstring>(T &amp;expected, T desired, SuccessMemoryOrder success, FailureMemoryOrder failure) const noexcept</argsstring>
        <name>compare_exchange_weak</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::compare_exchange_weak</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>SuccessMemoryOrder</type>
          <declname>success</declname>
        </param>
        <param>
          <type>FailureMemoryOrder</type>
          <declname>failure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="94" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="94" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a2afa3abc59eb94a66d02d2adc93595fd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::compare_exchange_weak</definition>
        <argsstring>(T &amp;expected, T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>compare_exchange_weak</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::compare_exchange_weak</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="103" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1ad716eabb4383120a4586c59ac044d528" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SuccessMemoryOrder</type>
          </param>
          <param>
            <type>typename FailureMemoryOrder</type>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::compare_exchange_strong</definition>
        <argsstring>(T &amp;expected, T desired, SuccessMemoryOrder success, FailureMemoryOrder failure) const noexcept</argsstring>
        <name>compare_exchange_strong</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::compare_exchange_strong</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>SuccessMemoryOrder</type>
          <declname>success</declname>
        </param>
        <param>
          <type>FailureMemoryOrder</type>
          <declname>failure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="113" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="113" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a73fcd02d7d39246a1224807bd4d3c51c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::compare_exchange_strong</definition>
        <argsstring>(T &amp;expected, T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>compare_exchange_strong</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;::compare_exchange_strong</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="123" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="123" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="38" column="1" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="38" bodyend="131"/>
    <listofallmembers>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1ae0c206e2be7876c03bde0428efa03134" prot="private" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>_min_alignment</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1ae8e62591e21ae58e454f4538bed68d18" prot="private" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>_ptr</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1ac5782e09024803002f4af1c1079ce1bf" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>basic_atomic_ref</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a3ba7a176c25c329567f9d94255b8a31a" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>basic_atomic_ref</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1afea1f99cf473e9ead7219f5e5b45351c" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>basic_atomic_ref</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1ad716eabb4383120a4586c59ac044d528" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>compare_exchange_strong</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a73fcd02d7d39246a1224807bd4d3c51c" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>compare_exchange_strong</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a2181a2daafe70353c90190a74ff1c5fd" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>compare_exchange_weak</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a2afa3abc59eb94a66d02d2adc93595fd" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>compare_exchange_weak</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a319c608609f148090b9041c4d8e921b5" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>exchange</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a1155dce7e8af8e02aaedc135a2dba382" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>is_always_lock_free</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a51d31e2222b6bbbcf2239625d42c301a" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>is_lock_free</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a96a8c12ff38fcf27a130b17945991301" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>load</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a7ae154adf50bbf84f33c46af27976000" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>operator T</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a1e926170bd467783ae21c6b9fad858f8" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>operator=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1aee591811f80e635b0b7342b1d6a7540a" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>operator=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a048df493bdb3758bc38e2b40c14e2b38" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>required_alignment</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1a7ab6705ae9d64df98e5a28e8a00f5955" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>store</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01false_01_4_1aecc57c13a5c882b49eb5fd9ed75ffa36" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, false &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
