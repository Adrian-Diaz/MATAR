<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class Dimension</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a5128d5fbe1a1579f6adbaf0cc4b5a222" prot="public" static="no">
        <type>std::true_type</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::is_mapping_plugin =  std::true_type</definition>
        <argsstring></argsstring>
        <name>is_mapping_plugin</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::is_mapping_plugin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1791" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a6c012941b81f1d69ab469810f1ec8528" prot="public" static="no">
        <type>std::true_type</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::is_regular =  std::true_type</definition>
        <argsstring></argsstring>
        <name>is_regular</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::is_regular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1792" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ae987da743bc5bc02e1707b39d336baf8" prot="public" static="no">
        <type>size_t</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::size_type =  size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1794" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ad9850b5d5d92916559aaf36863e26961" prot="public" static="no">
        <type>Dimension</type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_type =  Dimension</definition>
        <argsstring></argsstring>
        <name>dimension_type</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1795" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1795" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a9e983815c71c4a31ad56899100e8ad72" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref></type>
        <definition>using Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::array_layout =  Kokkos::LayoutRight</definition>
        <argsstring></argsstring>
        <name>array_layout</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::array_layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1796" column="3" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1796" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a7b683c77a401dd0af116d04cb6e3afbb" prot="public" static="no" mutable="no">
        <type>dimension_type</type>
        <definition>dimension_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::m_dim</definition>
        <argsstring></argsstring>
        <name>m_dim</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::m_dim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1798" column="18" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1798" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1abfedf629a23f7c09ec47c9e2e012f32b" prot="public" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::m_stride</definition>
        <argsstring></argsstring>
        <name>m_stride</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::m_stride</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1799" column="13" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1799" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a420a0bd5afdfa001fad59588ee56264f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1805" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1805" bodyend="1807"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a8ac0f16af3a0962cbd27f7ec27be4216" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1811" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1811" bodyend="1814"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a9a626b7786182b500eb0e1972730c6bd" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1818" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1818" bodyend="1822"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a2d8619ef4a262d831a0d06b6b72e8005" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1826" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1826" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ac84755489f39124673feaf54ba9b5036" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1835" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1835" bodyend="1842"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a83cb86231c3c511c8552b49c87cf8a81" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1847" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1847" bodyend="1854"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a3dc0bbc7ca5f665c4ab75164a8763668" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
          <param>
            <type>typename I6</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5, I6 const &amp;i6) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>I6 const &amp;</type>
          <declname>i6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1859" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1859" bodyend="1868"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a8388e6547d86ea34da095b3de839eb0b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I0</type>
          </param>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename I3</type>
          </param>
          <param>
            <type>typename I4</type>
          </param>
          <param>
            <type>typename I5</type>
          </param>
          <param>
            <type>typename I6</type>
          </param>
          <param>
            <type>typename I7</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</definition>
        <argsstring>(I0 const &amp;i0, I1 const &amp;i1, I2 const &amp;i2, I3 const &amp;i3, I4 const &amp;i4, I5 const &amp;i5, I6 const &amp;i6, I7 const &amp;i7) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator()</qualifiedname>
        <param>
          <type>I0 const &amp;</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>I1 const &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>I2 const &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>I3 const &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type>I4 const &amp;</type>
          <declname>i4</declname>
        </param>
        <param>
          <type>I5 const &amp;</type>
          <declname>i5</declname>
        </param>
        <param>
          <type>I6 const &amp;</type>
          <declname>i6</declname>
        </param>
        <param>
          <type>I7 const &amp;</type>
          <declname>i7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1873" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1873" bodyend="1885"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ab2fb23a8625c4c28dda4cfd674d3a63a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr <ref refid="struct_kokkos_1_1_layout_right" kindref="compound">array_layout</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr array_layout Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::layout</definition>
        <argsstring>() const</argsstring>
        <name>layout</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::layout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1890" column="26" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1890" bodyend="1893"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a403642d02deff77eb91d6d8ac9aac5e7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_0</definition>
        <argsstring>() const</argsstring>
        <name>dimension_0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1895" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1895" bodyend="1897"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1aaf33fa03568718427cc3277566f37fae" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_1</definition>
        <argsstring>() const</argsstring>
        <name>dimension_1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1898" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1898" bodyend="1900"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1aa1d9a03509705d3c03799378d3466d71" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_2</definition>
        <argsstring>() const</argsstring>
        <name>dimension_2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1901" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1901" bodyend="1903"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a694b944ab016eebe2f477fa1d61da832" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_3</definition>
        <argsstring>() const</argsstring>
        <name>dimension_3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1904" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1904" bodyend="1906"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a9cdda9bdedfd9169287fa500167a0afc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_4</definition>
        <argsstring>() const</argsstring>
        <name>dimension_4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1907" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1907" bodyend="1909"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a83887ba352da9df629b1db038ccf8003" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_5</definition>
        <argsstring>() const</argsstring>
        <name>dimension_5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1910" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1910" bodyend="1912"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a946af26ecfb958bb2f96ade015fcb7bf" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_6</definition>
        <argsstring>() const</argsstring>
        <name>dimension_6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1913" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1913" bodyend="1915"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ab05d3057cf2d3b7f6bac9e832e8f628a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_7</definition>
        <argsstring>() const</argsstring>
        <name>dimension_7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::dimension_7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1916" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1916" bodyend="1918"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a9d9a014a85531833bae203687976dac6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1922" column="23" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1922" bodyend="1925"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a18fa63c414316ab3db8cfdcc49839fed" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::span</definition>
        <argsstring>() const</argsstring>
        <name>span</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::span</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1929" column="23" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1929" bodyend="1931"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1adc779f464000777428449d7e6565e5c0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr bool</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr bool Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::span_is_contiguous</definition>
        <argsstring>() const</argsstring>
        <name>span_is_contiguous</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::span_is_contiguous</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1933" column="41" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1933" bodyend="1936"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a289e01ae881f65a1f517de0cc1d7a785" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_7</definition>
        <argsstring>() const</argsstring>
        <name>stride_7</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1939" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1939" bodyend="1939"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1af132ecb179dfdaaaa3716f30eb822d93" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_6</definition>
        <argsstring>() const</argsstring>
        <name>stride_6</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1940" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1940" bodyend="1942"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a132c39788d7c4b6aed82ce6968e41a47" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_5</definition>
        <argsstring>() const</argsstring>
        <name>stride_5</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1943" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1943" bodyend="1945"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1aec694629b63bb99111b7940f27fa1106" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_4</definition>
        <argsstring>() const</argsstring>
        <name>stride_4</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1946" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1946" bodyend="1948"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a95c73fa10fba521bd8560791169d9194" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_3</definition>
        <argsstring>() const</argsstring>
        <name>stride_3</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1949" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1949" bodyend="1951"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a70a8e11debf24192be07acf2d6deb07a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_2</definition>
        <argsstring>() const</argsstring>
        <name>stride_2</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1952" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1952" bodyend="1954"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a136d16a31d5363464ee1c88800b5a540" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_1</definition>
        <argsstring>() const</argsstring>
        <name>stride_1</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1955" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1955" bodyend="1957"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a29d1761617f683251a88ba0840eef200" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr size_type</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr size_type Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_0</definition>
        <argsstring>() const</argsstring>
        <name>stride_0</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1958" column="46" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1958" bodyend="1960"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a8300930e6f6a5805f0665d3463adff33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename iType</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride</definition>
        <argsstring>(iType *const s) const</argsstring>
        <name>stride</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::stride</qualifiedname>
        <param>
          <type>iType *const</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1964" column="31" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1964" bodyend="1997"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a2f9ef97bd862bf8d45c276852b121460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>()=default</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2053" column="3"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1acdfa9f03cef8e15f4b7ff97c0bfdb941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset &amp;)=default</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2054" column="3"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1af5d838c9b089331a1ad954b69bf140c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        <definition>ViewOffset &amp; Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator=</definition>
        <argsstring>(const ViewOffset &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2055" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ad40e03ab796cf3477f072b0cb1171e64" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>TrivialScalarSize</declname>
            <defname>TrivialScalarSize</defname>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(std::integral_constant&lt; unsigned, TrivialScalarSize &gt; const &amp;, Kokkos::LayoutRight const &amp;arg_layout)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>std::integral_constant&lt; unsigned, TrivialScalarSize &gt; const &amp;</type>
        </param>
        <param>
          <type><ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref> const &amp;</type>
          <declname>arg_layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2061" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2061" bodyend="2096"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1aaedd82b29bd240eb09babb43ed13c29c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DimRHS</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset&lt; DimRHS, Kokkos::LayoutRight, void &gt; &amp;rhs)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; DimRHS, <ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>, void &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2099" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2099" bodyend="2107"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a516bb98d206634f2799c54089627ae45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DimRHS</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset&lt; DimRHS, Kokkos::LayoutStride, void &gt; &amp;rhs)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; DimRHS, <ref refid="struct_kokkos_1_1_layout_stride" kindref="compound">Kokkos::LayoutStride</ref>, void &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2110" column="26" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2110" bodyend="2132"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a354d8ecc9d6c9cefe3522b6787629945" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DimRHS</type>
          </param>
        </templateparamlist>
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</definition>
        <argsstring>(const ViewOffset&lt; DimRHS, Kokkos::LayoutRight, void &gt; &amp;rhs, const SubviewExtents&lt; DimRHS::rank, dimension_type::rank &gt; &amp;sub)</argsstring>
        <name>ViewOffset</name>
        <qualifiedname>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;::ViewOffset</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_view_offset" kindref="compound">ViewOffset</ref>&lt; DimRHS, <ref refid="struct_kokkos_1_1_layout_right" kindref="compound">Kokkos::LayoutRight</ref>, void &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_impl_1_1_subview_extents" kindref="compound">SubviewExtents</ref>&lt; DimRHS::rank, dimension_type::rank &gt; &amp;</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="2139" column="36" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="2139" bodyend="2173"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" line="1787" column="1" bodyfile="src/Kokkos/kokkos/core/src/impl/Kokkos_ViewMapping.hpp" bodystart="1790" bodyend="2174"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a9e983815c71c4a31ad56899100e8ad72" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>array_layout</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a403642d02deff77eb91d6d8ac9aac5e7" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1aaf33fa03568718427cc3277566f37fae" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1aa1d9a03509705d3c03799378d3466d71" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a694b944ab016eebe2f477fa1d61da832" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a9cdda9bdedfd9169287fa500167a0afc" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a83887ba352da9df629b1db038ccf8003" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a946af26ecfb958bb2f96ade015fcb7bf" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ab05d3057cf2d3b7f6bac9e832e8f628a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ad9850b5d5d92916559aaf36863e26961" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>dimension_type</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a5128d5fbe1a1579f6adbaf0cc4b5a222" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>is_mapping_plugin</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a6c012941b81f1d69ab469810f1ec8528" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>is_regular</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ab2fb23a8625c4c28dda4cfd674d3a63a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>layout</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a7b683c77a401dd0af116d04cb6e3afbb" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>m_dim</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1abfedf629a23f7c09ec47c9e2e012f32b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>m_stride</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a420a0bd5afdfa001fad59588ee56264f" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a8ac0f16af3a0962cbd27f7ec27be4216" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a9a626b7786182b500eb0e1972730c6bd" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a2d8619ef4a262d831a0d06b6b72e8005" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ac84755489f39124673feaf54ba9b5036" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a83cb86231c3c511c8552b49c87cf8a81" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a3dc0bbc7ca5f665c4ab75164a8763668" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a8388e6547d86ea34da095b3de839eb0b" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1af5d838c9b089331a1ad954b69bf140c1" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>operator=</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a9d9a014a85531833bae203687976dac6" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>size</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ae987da743bc5bc02e1707b39d336baf8" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>size_type</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a18fa63c414316ab3db8cfdcc49839fed" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>span</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1adc779f464000777428449d7e6565e5c0" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>span_is_contiguous</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a8300930e6f6a5805f0665d3463adff33" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a29d1761617f683251a88ba0840eef200" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_0</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a136d16a31d5363464ee1c88800b5a540" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_1</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a70a8e11debf24192be07acf2d6deb07a" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_2</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a95c73fa10fba521bd8560791169d9194" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_3</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1aec694629b63bb99111b7940f27fa1106" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_4</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a132c39788d7c4b6aed82ce6968e41a47" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_5</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1af132ecb179dfdaaaa3716f30eb822d93" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_6</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a289e01ae881f65a1f517de0cc1d7a785" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>stride_7</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a2f9ef97bd862bf8d45c276852b121460" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1acdfa9f03cef8e15f4b7ff97c0bfdb941" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1ad40e03ab796cf3477f072b0cb1171e64" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1aaedd82b29bd240eb09babb43ed13c29c" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a516bb98d206634f2799c54089627ae45" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
      <member refid="struct_kokkos_1_1_impl_1_1_view_offset_3_01_dimension_00_01_kokkos_1_1_layout_right_00_01typenamf30022cfba2e6846f1a3d2b6fea33ae5_1a354d8ecc9d6c9cefe3522b6787629945" prot="public" virt="non-virtual"><scope>Kokkos::Impl::ViewOffset&lt; Dimension, Kokkos::LayoutRight, typename std::enable_if&lt;(1&lt; Dimension::rank &amp;&amp;0&lt; Dimension::rank_dynamic)&gt;::type &gt;</scope><name>ViewOffset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
