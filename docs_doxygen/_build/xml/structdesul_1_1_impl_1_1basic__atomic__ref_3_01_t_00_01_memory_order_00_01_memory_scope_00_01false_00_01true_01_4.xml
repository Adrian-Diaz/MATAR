<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4" kind="struct" language="C++" prot="public">
    <compoundname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename MemoryOrder</type>
      </param>
      <param>
        <type>typename MemoryScope</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1af1b7d131040412e8b32a38e2f657f668" prot="public" static="no">
        <type>T</type>
        <definition>using desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="296" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a6428a3d845032f428b36e35c081917bc" prot="public" static="no">
        <type>value_type</type>
        <definition>using desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::difference_type =  value_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="297" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1aa542af0c6f66e84153679cd54fa88d1e" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::_ptr</definition>
        <argsstring></argsstring>
        <name>_ptr</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="293" column="5" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1acf4c9418531fbbf281ea9d5c2bd2d2e1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::is_always_lock_free</definition>
        <argsstring></argsstring>
        <name>is_always_lock_free</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::is_always_lock_free</qualifiedname>
        <initializer>= atomic_always_lock_free(sizeof(T))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="299" column="25" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a08143ec1fca123e0b226a6f15d7de728" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::required_alignment</definition>
        <argsstring></argsstring>
        <name>required_alignment</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::required_alignment</qualifiedname>
        <initializer>= alignof(T)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="301" column="32" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a096327af61d3e9bbe0fb38d1645b1c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::basic_atomic_ref</definition>
        <argsstring>()=delete</argsstring>
        <name>basic_atomic_ref</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::basic_atomic_ref</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="303" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1ad78e0d95eb1f1fba2e160d9618f6320d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdesul_1_1_impl_1_1basic__atomic__ref" kindref="compound">basic_atomic_ref</ref> &amp;</type>
        <definition>basic_atomic_ref &amp; desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::operator=</definition>
        <argsstring>(basic_atomic_ref const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_impl_1_1basic__atomic__ref" kindref="compound">basic_atomic_ref</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="304" column="20"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a814288d82b0f20c8ba28443cf8cb6574" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::basic_atomic_ref</definition>
        <argsstring>(T &amp;obj)</argsstring>
        <name>basic_atomic_ref</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::basic_atomic_ref</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="306" column="12" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a76e5b8e90950e3e1c28577d084e6f69d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::basic_atomic_ref</definition>
        <argsstring>(basic_atomic_ref const &amp;)=default</argsstring>
        <name>basic_atomic_ref</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::basic_atomic_ref</qualifiedname>
        <param>
          <type><ref refid="structdesul_1_1_impl_1_1basic__atomic__ref" kindref="compound">basic_atomic_ref</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="308" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a4ac80749d90b66977adc2a346eb7bd0a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T</type>
        <definition>T desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::operator=</definition>
        <argsstring>(T desired) const noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::operator=</qualifiedname>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="310" column="5" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1adf0aced3027c721750cfec612c4b9d80" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::operator T</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator T</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::operator T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="315" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="315" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a371cd402e465a0add7f2dab459d0a994" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION void</type>
        <definition>DESUL_FUNCTION void desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::store</definition>
        <argsstring>(T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>store</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::store</qualifiedname>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="318" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1aaf28050fdfb023079360ae7d4a999cfd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION T</type>
        <definition>DESUL_FUNCTION T desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::load</definition>
        <argsstring>(_MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>load</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::load</qualifiedname>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="324" column="20" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="324" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a07b9b5ec1014949cd36d8b6bc15cd23d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION T</type>
        <definition>DESUL_FUNCTION T desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::exchange</definition>
        <argsstring>(T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>exchange</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::exchange</qualifiedname>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="329" column="20" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a342fbefae829a9e6881cb0a08eb330c8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::is_lock_free</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_lock_free</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::is_lock_free</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="334" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="334" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a6a50dd6b792fa30a0bfda427a30a30cf" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SuccessMemoryOrder</type>
          </param>
          <param>
            <type>typename FailureMemoryOrder</type>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::compare_exchange_weak</definition>
        <argsstring>(T &amp;expected, T desired, SuccessMemoryOrder success, FailureMemoryOrder failure) const noexcept</argsstring>
        <name>compare_exchange_weak</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::compare_exchange_weak</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>SuccessMemoryOrder</type>
          <declname>success</declname>
        </param>
        <param>
          <type>FailureMemoryOrder</type>
          <declname>failure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="339" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="339" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a7e8a045ab8f086225aae2367926cc530" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::compare_exchange_weak</definition>
        <argsstring>(T &amp;expected, T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>compare_exchange_weak</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::compare_exchange_weak</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="348" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="348" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1ab6c0a2e0b55a3c2e7fe383c5eb502eaf" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SuccessMemoryOrder</type>
          </param>
          <param>
            <type>typename FailureMemoryOrder</type>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::compare_exchange_strong</definition>
        <argsstring>(T &amp;expected, T desired, SuccessMemoryOrder success, FailureMemoryOrder failure) const noexcept</argsstring>
        <name>compare_exchange_strong</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::compare_exchange_strong</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>SuccessMemoryOrder</type>
          <declname>success</declname>
        </param>
        <param>
          <type>FailureMemoryOrder</type>
          <declname>failure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="358" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="358" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a9a486a3ebe2d03061f2219f1a62975a3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION bool</type>
        <definition>DESUL_FUNCTION bool desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::compare_exchange_strong</definition>
        <argsstring>(T &amp;expected, T desired, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>compare_exchange_strong</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::compare_exchange_strong</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>T</type>
          <declname>desired</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="368" column="23" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="368" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1af118e3b765e51a44251b15cbec9d0628" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::fetch_add</definition>
        <argsstring>(value_type arg, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>fetch_add</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::fetch_add</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="379" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="379" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a075b623769da719a380cfdbb707cf8ca" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _MemoryOrder</type>
            <defval>MemoryOrder</defval>
          </param>
        </templateparamlist>
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::fetch_sub</definition>
        <argsstring>(value_type arg, _MemoryOrder order=_MemoryOrder()) const noexcept</argsstring>
        <name>fetch_sub</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::fetch_sub</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>_MemoryOrder</type>
          <declname>order</declname>
          <defval>_MemoryOrder()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="385" column="3" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="385" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1ac05f51a09fe95808caeac278d2c31cdb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::operator+=</definition>
        <argsstring>(value_type arg) const noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::operator+=</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="389" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="389" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1acefea79d056de6546032f58a9183876c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>DESUL_FUNCTION value_type</type>
        <definition>DESUL_FUNCTION value_type desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::operator-=</definition>
        <argsstring>(value_type arg) const noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;::operator-=</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="393" column="29" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="393" bodyend="395"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" line="289" column="1" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/Atomic_Ref.hpp" bodystart="289" bodyend="396"/>
    <listofallmembers>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1aa542af0c6f66e84153679cd54fa88d1e" prot="private" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>_ptr</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a096327af61d3e9bbe0fb38d1645b1c97" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>basic_atomic_ref</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a814288d82b0f20c8ba28443cf8cb6574" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>basic_atomic_ref</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a76e5b8e90950e3e1c28577d084e6f69d" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>basic_atomic_ref</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1ab6c0a2e0b55a3c2e7fe383c5eb502eaf" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>compare_exchange_strong</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a9a486a3ebe2d03061f2219f1a62975a3" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>compare_exchange_strong</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a6a50dd6b792fa30a0bfda427a30a30cf" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>compare_exchange_weak</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a7e8a045ab8f086225aae2367926cc530" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>compare_exchange_weak</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a6428a3d845032f428b36e35c081917bc" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>difference_type</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a07b9b5ec1014949cd36d8b6bc15cd23d" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>exchange</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1af118e3b765e51a44251b15cbec9d0628" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>fetch_add</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a075b623769da719a380cfdbb707cf8ca" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>fetch_sub</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1acf4c9418531fbbf281ea9d5c2bd2d2e1" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>is_always_lock_free</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a342fbefae829a9e6881cb0a08eb330c8" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>is_lock_free</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1aaf28050fdfb023079360ae7d4a999cfd" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>load</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1adf0aced3027c721750cfec612c4b9d80" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>operator T</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1ac05f51a09fe95808caeac278d2c31cdb" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>operator+=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1acefea79d056de6546032f58a9183876c" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>operator-=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1ad78e0d95eb1f1fba2e160d9618f6320d" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>operator=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a4ac80749d90b66977adc2a346eb7bd0a" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>operator=</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a08143ec1fca123e0b226a6f15d7de728" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>required_alignment</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1a371cd402e465a0add7f2dab459d0a994" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>store</name></member>
      <member refid="structdesul_1_1_impl_1_1basic__atomic__ref_3_01_t_00_01_memory_order_00_01_memory_scope_00_01false_00_01true_01_4_1af1b7d131040412e8b32a38e2f657f668" prot="public" virt="non-virtual"><scope>desul::Impl::basic_atomic_ref&lt; T, MemoryOrder, MemoryScope, false, true &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
