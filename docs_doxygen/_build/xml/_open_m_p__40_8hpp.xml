<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_open_m_p__40_8hpp" kind="file" language="C++">
    <compoundname>OpenMP_40.hpp</compoundname>
    <includes local="no">type_traits</includes>
    <includes refid="_open_m_p__40__op_8inc" local="no">desul/atomics/openmp/OpenMP_40_op.inc</includes>
    <incdepgraph>
      <node id="1">
        <label>src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp</label>
        <link refid="_open_m_p__40_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <innerclass refid="structdesul_1_1_impl_1_1is__openmp__atomic__type__t" prot="public">desul::Impl::is_openmp_atomic_type_t</innerclass>
    <innernamespace refid="namespacedesul">desul</innernamespace>
    <innernamespace refid="namespacedesul_1_1_impl">desul::Impl</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_open_m_p__40_8hpp_1a27571e19e02ae873459aee98546fcf0f" prot="public" static="no">
        <name>MEMORY_ORDER</name>
        <initializer>MemoryOrderRelaxed</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="61" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_open_m_p__40_8hpp_1ae4fcb192e7a29df3ba80300a2a4c4bc0" prot="public" static="no">
        <name>MEMORY_SCOPE</name>
        <initializer>MemoryScopeDevice</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="65" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_open_m_p__40_8hpp_1ae4fcb192e7a29df3ba80300a2a4c4bc0" prot="public" static="no">
        <name>MEMORY_SCOPE</name>
        <initializer>MemoryScopeCore</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="68" column="11" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_open_m_p__40_8hpp_1a27571e19e02ae873459aee98546fcf0f" prot="public" static="no">
        <name>MEMORY_ORDER</name>
        <initializer>MemoryOrderAcqRel</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="73" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_open_m_p__40_8hpp_1ae4fcb192e7a29df3ba80300a2a4c4bc0" prot="public" static="no">
        <name>MEMORY_SCOPE</name>
        <initializer>MemoryScopeDevice</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="77" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_open_m_p__40_8hpp_1ae4fcb192e7a29df3ba80300a2a4c4bc0" prot="public" static="no">
        <name>MEMORY_SCOPE</name>
        <initializer>MemoryScopeCore</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="80" column="11" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_open_m_p__40_8hpp_1a27571e19e02ae873459aee98546fcf0f" prot="public" static="no">
        <name>MEMORY_ORDER</name>
        <initializer>MemoryOrderSeqCst</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="85" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_open_m_p__40_8hpp_1ae4fcb192e7a29df3ba80300a2a4c4bc0" prot="public" static="no">
        <name>MEMORY_SCOPE</name>
        <initializer>MemoryScopeDevice</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="89" column="9" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_open_m_p__40_8hpp_1ae4fcb192e7a29df3ba80300a2a4c4bc0" prot="public" static="no">
        <name>MEMORY_SCOPE</name>
        <initializer>MemoryScopeCore</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" line="92" column="11" bodyfile="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>(c)<sp/>2019,<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment">and<sp/>DESUL<sp/>project<sp/>contributors.<sp/>See<sp/>the<sp/>COPYRIGHT<sp/>file<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">Source:<sp/>https://github.com/desul/desul</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">SPDX-License-Identifier:<sp/>(BSD-3-Clause)</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DESUL_ATOMICS_OPENMP40_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DESUL_ATOMICS_OPENMP40_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">desul<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Impl<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MEMORY_ORDER_TMP,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MEMORY_SCOPE_TMP&gt;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>openmp_maybe_call_pre_capture_flush(MEMORY_ORDER_TMP,<sp/>MEMORY_SCOPE_TMP)<sp/>{}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MEMORY_SCOPE_TMP&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>openmp_maybe_call_pre_capture_flush(MemoryOrderAcquire,<sp/>MEMORY_SCOPE_TMP)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_thread_fence(MemoryOrderAcquire(),<sp/>MEMORY_SCOPE_TMP());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MEMORY_SCOPE_TMP&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>openmp_maybe_call_pre_capture_flush(MemoryOrderAcqRel,<sp/>MEMORY_SCOPE_TMP)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_thread_fence(MemoryOrderAcqRel(),<sp/>MEMORY_SCOPE_TMP());</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MEMORY_SCOPE_TMP&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>openmp_maybe_call_pre_capture_flush(MemoryOrderSeqCst,<sp/>MEMORY_SCOPE_TMP)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_thread_fence(MemoryOrderSeqCst(),<sp/>MEMORY_SCOPE_TMP());</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MEMORY_ORDER_TMP,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MEMORY_SCOPE_TMP&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>openmp_maybe_call_post_capture_flush(MEMORY_ORDER_TMP,<sp/>MEMORY_SCOPE_TMP)<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MEMORY_SCOPE_TMP&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>openmp_maybe_call_post_capture_flush(MemoryOrderRelease,<sp/>MEMORY_SCOPE_TMP)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_thread_fence(MemoryOrderRelease(),<sp/>MEMORY_SCOPE_TMP());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MEMORY_SCOPE_TMP&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>openmp_maybe_call_post_capture_flush(MemoryOrderAcqRel,<sp/>MEMORY_SCOPE_TMP)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_thread_fence(MemoryOrderAcqRel(),<sp/>MEMORY_SCOPE_TMP());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MEMORY_SCOPE_TMP&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>openmp_maybe_call_post_capture_flush(MemoryOrderSeqCst,<sp/>MEMORY_SCOPE_TMP)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_thread_fence(MemoryOrderSeqCst(),<sp/>MEMORY_SCOPE_TMP());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="46" refid="structdesul_1_1_impl_1_1is__openmp__atomic__type__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdesul_1_1_impl_1_1is__openmp__atomic__type__t" kindref="compound">is_openmp_atomic_type_t</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>std::is_arithmetic&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_openmp_atomic_type_v<sp/>=<sp/><ref refid="structdesul_1_1_impl_1_1is__openmp__atomic__type__t" kindref="compound">is_openmp_atomic_type_t&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">desul<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>a<sp/>macro<sp/>approach<sp/>to<sp/>get<sp/>all<sp/>definitions<sp/>since<sp/>the<sp/>ops<sp/>include<sp/>#pragma<sp/>omp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>So<sp/>gonna<sp/>use<sp/>multiple<sp/>inclusion<sp/>of<sp/>the<sp/>same<sp/>code<sp/>snippet<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>do<sp/>Node<sp/>level<sp/>atomics<sp/>this<sp/>way<sp/>with<sp/>OpenMP<sp/>Target,<sp/>but<sp/>we<sp/>could<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>have<sp/>a<sp/>define<sp/>which<sp/>says<sp/>whether<sp/>or<sp/>not<sp/>Device<sp/>level<sp/>IS<sp/>node<sp/>level<sp/>(e.g.<sp/>for<sp/>pure<sp/>CPU<sp/>node)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_ORDER<sp/>MemoryOrderRelaxed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>MEMORY_SCOPE<sp/>MemoryScopeNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include&lt;desul/atomics/openmp/OpenMP_40_op.inc&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>MEMORY_SCOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_SCOPE<sp/>MemoryScopeDevice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;desul/atomics/openmp/OpenMP_40_op.inc&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MEMORY_SCOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_SCOPE<sp/>MemoryScopeCore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;desul/atomics/openmp/OpenMP_40_op.inc&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MEMORY_SCOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MEMORY_ORDER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_ORDER<sp/>MemoryOrderAcqRel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>MEMORY_SCOPE<sp/>MemoryScopeNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include&lt;desul/atomics/openmp/OpenMP_40_op.inc&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>MEMORY_SCOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_SCOPE<sp/>MemoryScopeDevice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;desul/atomics/openmp/OpenMP_40_op.inc&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MEMORY_SCOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_SCOPE<sp/>MemoryScopeCore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;desul/atomics/openmp/OpenMP_40_op.inc&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MEMORY_SCOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MEMORY_ORDER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_ORDER<sp/>MemoryOrderSeqCst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>MEMORY_SCOPE<sp/>MemoryScopeNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include&lt;desul/atomics/openmp/OpenMP_40_op.inc&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>MEMORY_SCOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_SCOPE<sp/>MemoryScopeDevice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;desul/atomics/openmp/OpenMP_40_op.inc&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MEMORY_SCOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMORY_SCOPE<sp/>MemoryScopeCore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;desul/atomics/openmp/OpenMP_40_op.inc&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MEMORY_SCOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MEMORY_ORDER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>desul</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/Kokkos/kokkos/core/src/desul/atomics/openmp/OpenMP_40.hpp"/>
  </compounddef>
</doxygen>
