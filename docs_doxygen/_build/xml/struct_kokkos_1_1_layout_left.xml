<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_kokkos_1_1_layout_left" kind="struct" language="C++" prot="public">
    <compoundname>Kokkos::LayoutLeft</compoundname>
    <includes refid="_kokkos___layout_8hpp" local="no">Kokkos_Layout.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="struct_kokkos_1_1_layout_left_1a192ba8e67b724619d9302c58df66c8f8" prot="public" static="no" strong="no">
        <type>bool</type>
        <name>@192</name>
        <qualifiedname>Kokkos::LayoutLeft::@192</qualifiedname>
        <enumvalue id="struct_kokkos_1_1_layout_left_1a192ba8e67b724619d9302c58df66c8f8a453162d86de82d45d191edbfdd2fcada" prot="public">
          <name>is_extent_constructible</name>
          <initializer>= true</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="79" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_kokkos_1_1_layout_left_1af3489d77023af15f1954975ccd1eb161" prot="public" static="no">
        <type><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref></type>
        <definition>using Kokkos::LayoutLeft::array_layout =  LayoutLeft</definition>
        <argsstring></argsstring>
        <name>array_layout</name>
        <qualifiedname>Kokkos::LayoutLeft::array_layout</qualifiedname>
        <briefdescription>
<para>Tag this class as a kokkos array layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="75" column="3" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_kokkos_1_1_layout_left_1ae43ee2e85d42c61c849245cba3fba6ef" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Kokkos::LayoutLeft::dimension[ARRAY_LAYOUT_MAX_RANK]</definition>
        <argsstring>[ARRAY_LAYOUT_MAX_RANK]</argsstring>
        <name>dimension</name>
        <qualifiedname>Kokkos::LayoutLeft::dimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="77" column="10" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kokkos_1_1_layout_left_1a6a97e409e694dfdf31a40003059f30fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::LayoutLeft::LayoutLeft</definition>
        <argsstring>(LayoutLeft const &amp;)=default</argsstring>
        <name>LayoutLeft</name>
        <qualifiedname>Kokkos::LayoutLeft::LayoutLeft</qualifiedname>
        <param>
          <type><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="81" column="3"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_layout_left_1ae75e31b4d2e7df18f2a5db35166e8e83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Kokkos::LayoutLeft::LayoutLeft</definition>
        <argsstring>(LayoutLeft &amp;&amp;)=default</argsstring>
        <name>LayoutLeft</name>
        <qualifiedname>Kokkos::LayoutLeft::LayoutLeft</qualifiedname>
        <param>
          <type><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="82" column="3"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_layout_left_1af4d962e07bf05e23c48a66bcae594977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref> &amp;</type>
        <definition>LayoutLeft &amp; Kokkos::LayoutLeft::operator=</definition>
        <argsstring>(LayoutLeft const &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::LayoutLeft::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="83" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_layout_left_1ab344572aa298d26cd51d6ceb4e667682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref> &amp;</type>
        <definition>LayoutLeft &amp; Kokkos::LayoutLeft::operator=</definition>
        <argsstring>(LayoutLeft &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Kokkos::LayoutLeft::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="84" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_kokkos_1_1_layout_left_1a8a91ab983fe0519cff2e13b2951123ef" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION constexpr</type>
        <definition>KOKKOS_INLINE_FUNCTION constexpr Kokkos::LayoutLeft::LayoutLeft</definition>
        <argsstring>(size_t N0=0, size_t N1=0, size_t N2=0, size_t N3=0, size_t N4=0, size_t N5=0, size_t N6=0, size_t N7=0)</argsstring>
        <name>LayoutLeft</name>
        <qualifiedname>Kokkos::LayoutLeft::LayoutLeft</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>N0</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>N1</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>N2</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>N3</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>N4</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>N5</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>N6</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>N7</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="87" column="22" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" bodystart="87" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_kokkos_1_1_layout_left_1a17b1795851d95a6aab719e23663a9695" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const LayoutLeft &amp;left, const LayoutLeft &amp;right)</argsstring>
        <name>operator==</name>
        <qualifiedname>Kokkos::LayoutLeft::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="92" column="15" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="friend" id="struct_kokkos_1_1_layout_left_1acd502e6bd00e0ccebefdfb49f6e2f0df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const LayoutLeft &amp;left, const LayoutLeft &amp;right)</argsstring>
        <name>operator!=</name>
        <qualifiedname>Kokkos::LayoutLeft::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kokkos_1_1_layout_left" kindref="compound">LayoutLeft</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="98" column="15" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Memory layout tag indicating left-to-right (Fortran scheme) striding of multi-indices. </para>
    </briefdescription>
    <detaileddescription>
<para>This is an example of a <computeroutput>MemoryLayout</computeroutput> template parameter of <ref refid="class_kokkos_1_1_view" kindref="compound">View</ref>. The memory layout describes how <ref refid="class_kokkos_1_1_view" kindref="compound">View</ref> maps from a multi-index (i0, i1, ..., ik) to a memory location.</para>
<para>&quot;Layout left&quot; indicates a mapping where the leftmost index i0 refers to contiguous access, and strides increase for dimensions going right from there (i1, i2, ...). This layout imitates how Fortran stores multi-dimensional arrays. For the special case of a two-dimensional array, &quot;layout left&quot; is also called &quot;column
major.&quot; </para>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" line="73" column="1" bodyfile="src/Kokkos/kokkos/core/src/Kokkos_Layout.hpp" bodystart="73" bodyend="101"/>
    <listofallmembers>
      <member refid="struct_kokkos_1_1_layout_left_1af3489d77023af15f1954975ccd1eb161" prot="public" virt="non-virtual"><scope>Kokkos::LayoutLeft</scope><name>array_layout</name></member>
      <member refid="struct_kokkos_1_1_layout_left_1ae43ee2e85d42c61c849245cba3fba6ef" prot="public" virt="non-virtual"><scope>Kokkos::LayoutLeft</scope><name>dimension</name></member>
      <member refid="struct_kokkos_1_1_layout_left_1a192ba8e67b724619d9302c58df66c8f8a453162d86de82d45d191edbfdd2fcada" prot="public" virt="non-virtual"><scope>Kokkos::LayoutLeft</scope><name>is_extent_constructible</name></member>
      <member refid="struct_kokkos_1_1_layout_left_1a6a97e409e694dfdf31a40003059f30fe" prot="public" virt="non-virtual"><scope>Kokkos::LayoutLeft</scope><name>LayoutLeft</name></member>
      <member refid="struct_kokkos_1_1_layout_left_1ae75e31b4d2e7df18f2a5db35166e8e83" prot="public" virt="non-virtual"><scope>Kokkos::LayoutLeft</scope><name>LayoutLeft</name></member>
      <member refid="struct_kokkos_1_1_layout_left_1a8a91ab983fe0519cff2e13b2951123ef" prot="public" virt="non-virtual"><scope>Kokkos::LayoutLeft</scope><name>LayoutLeft</name></member>
      <member refid="struct_kokkos_1_1_layout_left_1acd502e6bd00e0ccebefdfb49f6e2f0df" prot="public" virt="non-virtual"><scope>Kokkos::LayoutLeft</scope><name>operator!=</name></member>
      <member refid="struct_kokkos_1_1_layout_left_1af4d962e07bf05e23c48a66bcae594977" prot="public" virt="non-virtual"><scope>Kokkos::LayoutLeft</scope><name>operator=</name></member>
      <member refid="struct_kokkos_1_1_layout_left_1ab344572aa298d26cd51d6ceb4e667682" prot="public" virt="non-virtual"><scope>Kokkos::LayoutLeft</scope><name>operator=</name></member>
      <member refid="struct_kokkos_1_1_layout_left_1a17b1795851d95a6aab719e23663a9695" prot="public" virt="non-virtual"><scope>Kokkos::LayoutLeft</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
