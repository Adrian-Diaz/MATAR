<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespace_test_atomic" kind="namespace" language="C++">
    <compoundname>TestAtomic</compoundname>
    <innerclass refid="struct_test_atomic_1_1_add_functor" prot="public">TestAtomic::AddFunctor</innerclass>
    <innerclass refid="struct_test_atomic_1_1_add_functor_reduce" prot="public">TestAtomic::AddFunctorReduce</innerclass>
    <innerclass refid="struct_test_atomic_1_1_c_a_s_functor" prot="public">TestAtomic::CASFunctor</innerclass>
    <innerclass refid="struct_test_atomic_1_1_c_a_s_functor_reduce" prot="public">TestAtomic::CASFunctorReduce</innerclass>
    <innerclass refid="struct_test_atomic_1_1_exch_functor" prot="public">TestAtomic::ExchFunctor</innerclass>
    <innerclass refid="struct_test_atomic_1_1_exch_functor_reduce" prot="public">TestAtomic::ExchFunctorReduce</innerclass>
    <innerclass refid="struct_test_atomic_1_1_super_scalar" prot="public">TestAtomic::SuperScalar</innerclass>
    <innerclass refid="struct_test_atomic_1_1_zero_functor" prot="public">TestAtomic::ZeroFunctor</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_test_atomics_8hpp_1a1b0e1d2cd61ec58f609842656cbb62b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; TestAtomic::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const SuperScalar&lt; N &gt; &amp;dt)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>TestAtomic::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="struct_test_atomic_1_1_super_scalar" kindref="compound">SuperScalar</ref>&lt; N &gt; &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="151" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="151" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="_test_atomics_8hpp_1a7668a7a6fd23c169e75988ea5cfcb975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class execution_space</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T TestAtomic::AddLoop</definition>
        <argsstring>(int loop)</argsstring>
        <name>AddLoop</name>
        <qualifiedname>TestAtomic::AddLoop</qualifiedname>
        <param>
          <type>int</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="200" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="200" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="_test_atomics_8hpp_1aaadc0d37b2dc2d68e1c30099655a3fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T TestAtomic::AddLoopSerial</definition>
        <argsstring>(int loop)</argsstring>
        <name>AddLoopSerial</name>
        <qualifiedname>TestAtomic::AddLoopSerial</qualifiedname>
        <param>
          <type>int</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="229" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="229" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="_test_atomics_8hpp_1ac67120bf9070058ed3016364e45e54a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class execution_space</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T TestAtomic::CASLoop</definition>
        <argsstring>(int loop)</argsstring>
        <name>CASLoop</name>
        <qualifiedname>TestAtomic::CASLoop</qualifiedname>
        <param>
          <type>int</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="288" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="288" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="_test_atomics_8hpp_1ad368fdd0c4936235e513024b96bfac72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T TestAtomic::CASLoopSerial</definition>
        <argsstring>(int loop)</argsstring>
        <name>CASLoopSerial</name>
        <qualifiedname>TestAtomic::CASLoopSerial</qualifiedname>
        <param>
          <type>int</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="315" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="315" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="_test_atomics_8hpp_1a653e40bae3a8ad4d8b29375dcd5b641e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class execution_space</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T TestAtomic::ExchLoop</definition>
        <argsstring>(int loop)</argsstring>
        <name>ExchLoop</name>
        <qualifiedname>TestAtomic::ExchLoop</qualifiedname>
        <param>
          <type>int</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="371" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="371" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="_test_atomics_8hpp_1af2dcdcd58c993744ed4a26b0128b6a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T TestAtomic::ExchLoopSerial</definition>
        <argsstring>(typename std::conditional&lt;!std::is_same&lt; T, Kokkos::complex&lt; double &gt; &gt;::value, int, void &gt;::type loop)</argsstring>
        <name>ExchLoopSerial</name>
        <qualifiedname>TestAtomic::ExchLoopSerial</qualifiedname>
        <param>
          <type>typename std::conditional&lt;!std::is_same&lt; T, <ref refid="class_kokkos_1_1complex" kindref="compound">Kokkos::complex</ref>&lt; double &gt; &gt;::value, int, void &gt;::type</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="408" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="408" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="_test_atomics_8hpp_1a21573ab7bfa18014281612845fabf7c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T TestAtomic::ExchLoopSerial</definition>
        <argsstring>(typename std::conditional&lt; std::is_same&lt; T, Kokkos::complex&lt; double &gt; &gt;::value, int, void &gt;::type loop)</argsstring>
        <name>ExchLoopSerial</name>
        <qualifiedname>TestAtomic::ExchLoopSerial</qualifiedname>
        <param>
          <type>typename std::conditional&lt; std::is_same&lt; T, <ref refid="class_kokkos_1_1complex" kindref="compound">Kokkos::complex</ref>&lt; double &gt; &gt;::value, int, void &gt;::type</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="430" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="430" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="_test_atomics_8hpp_1a61b3040b8441f1feae10f6b5acd30e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class DeviceType</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T TestAtomic::LoopVariant</definition>
        <argsstring>(int loop, int test)</argsstring>
        <name>LoopVariant</name>
        <qualifiedname>TestAtomic::LoopVariant</qualifiedname>
        <param>
          <type>int</type>
          <declname>loop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="453" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="453" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="_test_atomics_8hpp_1a1f3cb478ae95bd7139099f33a0172adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T TestAtomic::LoopVariantSerial</definition>
        <argsstring>(int loop, int test)</argsstring>
        <name>LoopVariantSerial</name>
        <qualifiedname>TestAtomic::LoopVariantSerial</qualifiedname>
        <param>
          <type>int</type>
          <declname>loop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="464" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="464" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="_test_atomics_8hpp_1a1a21f70e30ecaf059b27c5bc019b64aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class DeviceType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool TestAtomic::Loop</definition>
        <argsstring>(int loop, int test)</argsstring>
        <name>Loop</name>
        <qualifiedname>TestAtomic::Loop</qualifiedname>
        <param>
          <type>int</type>
          <declname>loop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="475" column="6" bodyfile="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" bodystart="475" bodyend="489"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Kokkos/kokkos/core/unit_test/TestAtomics.hpp" line="47" column="1"/>
  </compounddef>
</doxygen>
