<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="struct_test_1_1_test_exponential_intergral1_function" kind="struct" language="C++" prot="public">
    <compoundname>Test::TestExponentialIntergral1Function</compoundname>
    <templateparamlist>
      <param>
        <type>class ExecSpace</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_test_1_1_test_exponential_intergral1_function_1afd0a35085f0a65fa3b7f695028d89226" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; double *, ExecSpace &gt;</type>
        <definition>using Test::TestExponentialIntergral1Function&lt; ExecSpace &gt;::ViewType =  Kokkos::View&lt;double*, ExecSpace&gt;</definition>
        <argsstring></argsstring>
        <name>ViewType</name>
        <qualifiedname>Test::TestExponentialIntergral1Function::ViewType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="12" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_test_1_1_test_exponential_intergral1_function_1a5bd5e2b8b9f2ca82104ff06d33ee5784" prot="public" static="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">Kokkos::View</ref>&lt; double *, <ref refid="class_kokkos_1_1_host_space" kindref="compound">Kokkos::HostSpace</ref> &gt;</type>
        <definition>using Test::TestExponentialIntergral1Function&lt; ExecSpace &gt;::HostViewType =  Kokkos::View&lt;double*, Kokkos::HostSpace&gt;</definition>
        <argsstring></argsstring>
        <name>HostViewType</name>
        <qualifiedname>Test::TestExponentialIntergral1Function::HostViewType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="13" column="3" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test_1_1_test_exponential_intergral1_function_1a29f401ef51d3a261b2b72914f1890070" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">ViewType</ref></type>
        <definition>ViewType Test::TestExponentialIntergral1Function&lt; ExecSpace &gt;::d_x</definition>
        <argsstring></argsstring>
        <name>d_x</name>
        <qualifiedname>Test::TestExponentialIntergral1Function::d_x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="15" column="12" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_test_exponential_intergral1_function_1a67ab262eac8fb24a4031da299553235b" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">ViewType</ref></type>
        <definition>ViewType Test::TestExponentialIntergral1Function&lt; ExecSpace &gt;::d_expint</definition>
        <argsstring></argsstring>
        <name>d_expint</name>
        <qualifiedname>Test::TestExponentialIntergral1Function::d_expint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="15" column="16" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_test_exponential_intergral1_function_1a0fe2fbe8126d7c62e4d7d8c6c586ff3f" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view_1aa792f904a0197bb45c90c472d64935b1" kindref="member">ViewType::HostMirror</ref></type>
        <definition>ViewType::HostMirror Test::TestExponentialIntergral1Function&lt; ExecSpace &gt;::h_x</definition>
        <argsstring></argsstring>
        <name>h_x</name>
        <qualifiedname>Test::TestExponentialIntergral1Function::h_x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="16" column="33" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_test_exponential_intergral1_function_1a9ad26ff0e38eabeae1bc3da707ba858d" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view_1aa792f904a0197bb45c90c472d64935b1" kindref="member">ViewType::HostMirror</ref></type>
        <definition>ViewType::HostMirror Test::TestExponentialIntergral1Function&lt; ExecSpace &gt;::h_expint</definition>
        <argsstring></argsstring>
        <name>h_expint</name>
        <qualifiedname>Test::TestExponentialIntergral1Function::h_expint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="16" column="37" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_1_1_test_exponential_intergral1_function_1acfb8c6f2e9d47c966c3b579915946458" prot="public" static="no" mutable="no">
        <type><ref refid="class_kokkos_1_1_view" kindref="compound">HostViewType</ref></type>
        <definition>HostViewType Test::TestExponentialIntergral1Function&lt; ExecSpace &gt;::h_ref</definition>
        <argsstring></argsstring>
        <name>h_ref</name>
        <qualifiedname>Test::TestExponentialIntergral1Function::h_ref</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="17" column="16" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_1_1_test_exponential_intergral1_function_1a3177332d50ee19f35bce8b91d48425df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Test::TestExponentialIntergral1Function&lt; ExecSpace &gt;::testit</definition>
        <argsstring>()</argsstring>
        <name>testit</name>
        <qualifiedname>Test::TestExponentialIntergral1Function::testit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="19" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="19" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_1_1_test_exponential_intergral1_function_1a5efb149c26566a8de263379ed0452883" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION void</type>
        <definition>KOKKOS_INLINE_FUNCTION void Test::TestExponentialIntergral1Function&lt; ExecSpace &gt;::operator()</definition>
        <argsstring>(const int &amp;i) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Test::TestExponentialIntergral1Function::operator()</qualifiedname>
        <param>
          <type>const int &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="78" column="8" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Test::TestExponentialIntergral1Function&lt; ExecSpace &gt;</label>
        <link refid="struct_test_1_1_test_exponential_intergral1_function"/>
        <childnode refid="2" relation="usage">
          <edgelabel>d_expint</edgelabel>
          <edgelabel>d_x</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>h_ref</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Kokkos::View&lt; double *, ExecSpace &gt;</label>
        <link refid="class_kokkos_1_1_view"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Kokkos::View&lt; double *, Kokkos::HostSpace &gt;</label>
        <link refid="class_kokkos_1_1_view"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Kokkos::ViewTraits&lt; double *, Properties... &gt;</label>
        <link refid="struct_kokkos_1_1_view_traits"/>
      </node>
    </collaborationgraph>
    <location file="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" line="11" column="1" bodyfile="src/Kokkos/kokkos/core/unit_test/TestMathematicalSpecialFunctions.hpp" bodystart="11" bodyend="81"/>
    <listofallmembers>
      <member refid="struct_test_1_1_test_exponential_intergral1_function_1a67ab262eac8fb24a4031da299553235b" prot="public" virt="non-virtual"><scope>Test::TestExponentialIntergral1Function</scope><name>d_expint</name></member>
      <member refid="struct_test_1_1_test_exponential_intergral1_function_1a29f401ef51d3a261b2b72914f1890070" prot="public" virt="non-virtual"><scope>Test::TestExponentialIntergral1Function</scope><name>d_x</name></member>
      <member refid="struct_test_1_1_test_exponential_intergral1_function_1a9ad26ff0e38eabeae1bc3da707ba858d" prot="public" virt="non-virtual"><scope>Test::TestExponentialIntergral1Function</scope><name>h_expint</name></member>
      <member refid="struct_test_1_1_test_exponential_intergral1_function_1acfb8c6f2e9d47c966c3b579915946458" prot="public" virt="non-virtual"><scope>Test::TestExponentialIntergral1Function</scope><name>h_ref</name></member>
      <member refid="struct_test_1_1_test_exponential_intergral1_function_1a0fe2fbe8126d7c62e4d7d8c6c586ff3f" prot="public" virt="non-virtual"><scope>Test::TestExponentialIntergral1Function</scope><name>h_x</name></member>
      <member refid="struct_test_1_1_test_exponential_intergral1_function_1a5bd5e2b8b9f2ca82104ff06d33ee5784" prot="public" virt="non-virtual"><scope>Test::TestExponentialIntergral1Function</scope><name>HostViewType</name></member>
      <member refid="struct_test_1_1_test_exponential_intergral1_function_1a5efb149c26566a8de263379ed0452883" prot="public" virt="non-virtual"><scope>Test::TestExponentialIntergral1Function</scope><name>operator()</name></member>
      <member refid="struct_test_1_1_test_exponential_intergral1_function_1a3177332d50ee19f35bce8b91d48425df" prot="public" virt="non-virtual"><scope>Test::TestExponentialIntergral1Function</scope><name>testit</name></member>
      <member refid="struct_test_1_1_test_exponential_intergral1_function_1afd0a35085f0a65fa3b7f695028d89226" prot="public" virt="non-virtual"><scope>Test::TestExponentialIntergral1Function</scope><name>ViewType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
